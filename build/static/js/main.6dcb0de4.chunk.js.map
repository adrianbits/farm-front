{"version":3,"sources":["views/Pools/helpers.tsx","config/constants/endpoints.ts","components/UnlockButton.tsx","hooks/useAuth.ts","utils/getRpcUrl.ts","hooks/useRefresh.ts","state/farms/fetchFarms.ts","state/farms/fetchFarmUser.ts","state/farms/index.ts","state/teams/helpers.ts","config/constants/teams.ts","config/constants/meta.ts","components/layout/Page.tsx","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","contexts/Localization/useTranslation.ts","hooks/useStake.ts","config/constants/ifo.ts","state/block/index.ts","utils/web3React.ts","utils/wallet.ts","utils/collectibles.ts","state/prices/index.ts","state/collectibles/index.ts","contexts/RefreshContext.tsx","components/layout/Container.tsx","config/constants/campaigns.ts","utils/achievements.ts","state/achievements/helpers.ts","state/achievements/index.ts","config/constants/contracts.ts","utils/addressHelpers.ts","contexts/ToastsContext/Provider.tsx","utils/formatBalance.ts","config/constants/index.ts","utils/bigNumber.ts","components/Tags.tsx","state/predictions/index.ts","hooks/useLastUpdated.ts","hooks/usePersistState.ts","utils/apr.ts","hooks/useApprove.ts","hooks/useUnstake.ts","hooks/useHarvest.ts","utils/farmsPriceHelpers.ts","state/pools/helpers.ts","state/hooks.ts","utils/contractHelpers.ts","config/index.ts","config/constants/types.ts","utils/farmHelpers.ts","components/PageLoader.tsx","components/layout/Flex.tsx","hooks/useContract.ts","components/ApyCalculatorModal/index.tsx","hooks/usePreviousValue.ts","utils/getTimePeriods.ts","components/PageHeader/PageHeader.tsx","state/index.ts","config/constants/tokens.ts","state/actions.ts","hooks/useWeb3.ts","utils/callHelpers.ts","state/pools/fetchPools.ts","state/pools/fetchPoolsUser.ts","state/pools/fetchVaultPublic.ts","state/pools/fetchVaultUser.ts","state/pools/index.ts","utils/multicall.ts","hooks/useToast.ts","config/constants/pools.ts","state/types.ts","state/predictions/helpers.ts","state/predictions/queries.ts","utils/web3.ts","config/localization/languages.ts","utils/compoundApyHelpers.ts","hooks/useEagerConnect.ts","style/Global.tsx","contexts/ThemeContext.tsx","hooks/useTheme.ts","components/Menu/config.ts","components/Menu/index.tsx","components/SuspenseWithChunkError/index.tsx","components/ToastListener/index.tsx","components/EasterEgg/EasterEgg.tsx","components/Balance.tsx","views/Pools/components/PoolCard/AprRow.tsx","views/Pools/components/PoolCard/StyledCard.tsx","views/Pools/components/PoolCard/CardFooter/ExpandedFooter.tsx","views/Pools/components/PoolCard/CardFooter/index.tsx","views/Pools/components/PoolCard/StyledCardHeader.tsx","views/Pools/components/PoolCard/CardActions/ApprovalAction.tsx","views/Pools/components/PoolCard/Modals/NotEnoughTokensModal.tsx","views/Pools/components/PoolCard/Modals/PercentageButton.tsx","views/Pools/components/PoolCard/Modals/StakeModal.tsx","views/Pools/components/PoolCard/CardActions/StakeActions.tsx","views/Pools/components/PoolCard/Modals/CollectModal.tsx","views/Pools/components/PoolCard/CardActions/HarvestActions.tsx","views/Pools/components/PoolCard/CardActions/index.tsx","views/Pools/components/PoolCard/index.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultApprovalAction.tsx","hooks/cakeVault/useWithdrawalFeeTimer.ts","views/Pools/components/CakeVaultCard/WithdrawalFeeTimer.tsx","views/Pools/components/CakeVaultCard/UnstakingFeeCountdownRow.tsx","views/Pools/components/CakeVaultCard/FeeSummary.tsx","views/Pools/components/CakeVaultCard/VaultStakeModal.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/HasSharesActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/VaultStakeActions.tsx","views/Pools/components/CakeVaultCard/VaultCardActions/index.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitBalance.tsx","views/Pools/components/CakeVaultCard/RecentCakeProfitRow.tsx","views/Pools/components/CakeVaultCard/index.tsx","views/Pools/components/PoolTabButtons.tsx","views/Pools/components/BountyModal.tsx","views/Pools/components/BountyCard.tsx","views/Pools/index.tsx","routerHistory.ts","App.tsx","Providers.tsx","index.tsx","state/teams/index.tsx","state/profile/helpers.ts","state/profile/getProfile.ts","state/profile/index.tsx","config/constants/farms.ts","config/constants/nfts.ts","utils/makeBatchRequest.ts"],"names":["convertSharesToCake","shares","cakePerFullShare","decimals","decimalsToRound","sharePriceNumber","getBalanceNumber","amountInCake","BigNumber","multipliedBy","cakeAsNumberBalance","cakeAsBigNumber","getDecimalAmount","cakeAsDisplayBalance","getFullDisplayBalance","convertCakeToShares","cake","amountInShares","dividedBy","sharesAsNumberBalance","sharesAsBigNumber","sharesAsDisplayBalance","GRAPH_API_PROFILE","process","GRAPH_API_PREDICTION","UnlockButton","props","t","useTranslation","useAuth","login","logout","onPresentConnectModal","useWalletModal","onClick","dispatch","useAppDispatch","useWeb3React","activate","deactivate","toastError","useToast","useCallback","connectorID","connector","connectorsByName","error","a","UnsupportedChainIdError","setupNetwork","window","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","WalletConnectConnector","walletConnectProvider","name","message","profileClear","nodes","getNodeUrl","randomIndex","random","length","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","fetchFarms","farmsToFetch","Promise","all","map","farmConfig","lpAddress","getAddress","lpAddresses","calls","address","token","params","quoteToken","getMasterChefAddress","multicall","erc20","tokenBalanceLP","quoteTokenBalanceLP","lpTokenBalanceMC","lpTotalSupply","tokenDecimals","quoteTokenDecimals","lpTokenRatio","div","tokenAmountTotal","BIG_TEN","pow","quoteTokenAmountTotal","tokenAmountMc","times","quoteTokenAmountMc","lpTotalInQuoteToken","masterchefABI","pid","info","totalAllocPoint","allocPoint","_hex","poolWeight","toJSON","tokenPriceVsQuote","multiplier","toString","data","fetchFarmUserAllowances","account","masterChefAddress","farm","erc20ABI","rawLpAllowances","parsedLpAllowances","lpBalance","fetchFarmUserTokenBalances","rawTokenBalances","parsedTokenBalances","tokenBalance","fetchFarmUserStakedBalances","rawStakedBalances","parsedStakedBalances","stakedBalance","fetchFarmUserEarnings","rawEarnings","parsedEarnings","earnings","nonArchivedFarms","farmsConfig","filter","isArchivedPid","initialState","userData","allowance","loadArchivedFarmsData","userDataLoaded","farmsSlice","createSlice","reducers","setFarmsPublicData","state","action","liveFarmsData","payload","liveFarmData","find","f","setFarmUserData","arrayOfUserDataObjects","forEach","userDataEl","index","findIndex","setLoadArchivedFarmsData","actions","fetchFarmsPublicDataAsync","getState","fetchArchived","farms","fetchFarmUserDataAsync","userFarmAllowances","userFarmTokenBalances","userStakedBalances","userFarmEarnings","farmAllowance","profileContract","getProfileContract","getTeam","teamId","methods","getTeamProfile","call","teamName","numberUsers","numberPoints","isJoinable","staticTeamInfo","teamsList","staticTeam","id","merge","users","points","getTeams","teamsById","reduce","accum","team","numberTeams","nbTeams","i","push","makeBatchRequest","teamData","onChainTeamData","Number","teams","description","images","lg","md","sm","alt","ipfs","background","textColor","DEFAULT_META","title","image","StyledPage","styled","Container","theme","mediaQueries","PageMeta","pathname","useLocation","cakePriceUsd","usePriceCakeBusd","cakePriceUsdDisplay","eq","toNumber","toLocaleString","undefined","minimumFractionDigits","maximumFractionDigits","pageMeta","path","getCustomMeta","pageTitle","join","property","content","Page","children","LS_KEY","fetchLocale","locale","fetch","response","json","getLanguageCodeFromLS","getItem","EN","isFetching","currentLanguage","languageMap","Map","set","translations","LanguageContext","createContext","LanguageProvider","useState","codeFromStorage","languages","setState","useEffect","enLocale","get","currentLocale","prevState","fetchInitialLocales","setLanguage","language","has","setItem","translate","key","translatedText","match","interpolatedText","Object","keys","dataKey","templateKey","RegExp","replace","Provider","value","languageContext","Error","useSousStake","sousId","isUsingBnb","masterChefContract","useMasterchef","sousChefContract","useSousChef","handleStake","amount","stake","sousStakeBnb","sousStake","updateUserStakedBalance","updateUserBalance","onStake","useStake","txHash","console","cakeBnbLpToken","symbol","lpSymbol","ifos","isActive","poolBasic","saleAmount","raiseAmount","cakeToBurn","distributionRatio","poolUnlimited","currency","tokens","kalm","releaseBlockNumber","campaignId","articleUrl","tokenOfferingPrice","version","hotcross","hzn","belt","watch","bry","wsote","helmet","ten","ditto","blink","blockSlice","currentBlock","initialBlock","setBlock","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","rpc","bridge","qrcode","pollingInterval","bscConnector","BscConnector","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","ethereum","request","method","chainName","nativeCurrency","rpcUrls","blockExplorerUrls","registerToken","tokenAddress","tokenSymbol","tokenImage","type","options","tokenAdded","getIdentifierKeyFromAddress","nftAddress","nftSource","values","nftSources","nftSourceEntry","identifierKey","getTokenUrl","tokenUri","startsWith","IPFS_GATEWAY","slice","getTokenUriData","tokenId","contract","getErc721Contract","tokenURI","uriDataResponse","ok","uriData","getNftByTokenId","Nfts","nft","includes","identifier","fetchPrices","createAsyncThunk","updated_at","toLowerCase","parseFloat","price","pricesSlice","isLoading","lastUpdated","extraReducers","builder","addCase","pending","fulfilled","fetchWalletNfts","nftSourcePromises","nftSourceType","addressObj","getTokenIdAndData","tokenOfOwnerByIndex","walletNft","balanceOf","balanceOfResponse","nftDataFetchPromises","nftData","nftSourceData","flat","collectiblesSlice","isInitialized","association","React","RefreshContextProvider","setSlow","setFast","interval","setInterval","prev","clearInterval","campaigns","badge","campaignMap","campaign","getAchievementTitle","getAchievementDescription","getUserPointIncreaseEvents","gql","user","getAchievements","pointIncreaseEvents","userPoint","campaignMeta","achievementSlice","addAchievement","addAchievements","setAchievements","clearAchievements","fetchAchievements","achievements","97","56","getCakeAddress","addresses","getMulticallAddress","getWbnbAddress","wbnb","getLotteryAddress","getLotteryTicketAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getBunnyFactoryAddress","getClaimRefundAddress","getPointCenterIfoAddress","getBunnySpecialAddress","getTradingCompetitionAddress","getEasterNftAddress","getCakeVaultAddress","getPredictionsAddress","getChainlinkOracleAddress","ToastsContext","ToastsProvider","toasts","setToasts","toast","prevToasts","kebabCase","currentToasts","prevToast","clear","remove","toastTypes","DANGER","toastInfo","INFO","toastSuccess","SUCCESS","toastWarning","WARNING","getBalanceAmount","balance","decimalsToAppear","toFixed","formatNumber","number","minPrecision","maxPrecision","BIG_ZERO","CoreTag","variant","outline","startIcon","width","color","mr","CommunityTag","DualTag","ManualPoolTag","CompoundingPoolTag","status","PredictionStatus","INITIAL","isHistoryPaneOpen","isChartPaneOpen","isFetchingHistory","historyFilter","HistoryFilter","ALL","currentEpoch","currentRoundStartBlockNumber","intervalBlocks","bufferBlocks","minBetAmount","lastOraclePrice","rounds","history","bets","fetchBet","getBet","bet","transformBetResponse","fetchRoundBet","roundId","getBetHistory","round","betResponses","betResponse","fetchCurrentBets","roundIds","round_in","fetchHistory","claimed","predictionsSlice","setPredictionStatus","setHistoryPaneState","setChartPaneState","setHistoryFilter","initialize","updateMarketData","market","newRoundData","makeRoundData","incomingCurrentRound","maxBy","epoch","newestRound","futureRound","transformRoundResponse","makeFutureRoundResponse","startBlock","paused","PAUSED","LIVE","setCurrentEpoch","markBetAsCollected","accountBets","markPositionAsEntered","setLastOraclePrice","betData","currentBet","rejected","useLastUpdated","Date","now","setStateLastUpdated","previousLastUpdated","usePreviousValue","setLastUpdated","usePersistState","initialValue","localStorageKey","valueFromLS","JSON","parse","setValue","stringify","getPoolApr","stakingTokenPrice","rewardTokenPrice","totalStaked","tokenPerBlock","totalRewardPricePerYear","BLOCKS_PER_YEAR","totalStakingTokenInPool","apr","isNaN","isFinite","getFarmApr","poolLiquidityUsd","TENDIE_PER_BLOCK","useApprove","lpContract","onApprove","approve","tx","useSousApprove","updateUserAllowance","useSousUnstake","enableEmergencyWithdraw","handleUnstake","unstake","sousEmergencyUnstake","sousUnstake","updateUserPendingReward","onUnstake","useUnstake","useHarvest","farmPid","onReward","harvest","useSousHarvest","handleHarvest","soushHarvestBnb","soushHarvest","filterFarmsByQuoteToken","preferredQuoteTokens","preferredFarm","some","transformUserData","stakingTokenBalance","pendingReward","transformPool","pool","stakingLimit","rest","useFetchPublicData","web3","getWeb3NoAccount","fetchPoolsPublicData","eth","getBlockNumber","blockNumber","fetchPoolsPublicDataAsync","fetchPoolsStakingLimitsAsync","useFarms","useSelector","useFarmFromPid","useFarmUser","useFarmFromTokenSymbol","useBusdPriceFromPid","bnbPriceBusd","usePriceBnbBusd","quoteTokenFarm","gt","quoteTokenInBusd","useBusdPriceFromToken","tokenFarmForPriceCalc","usePools","fetchPoolsUserDataAsync","pools","useFetchCakeVault","fetchCakeVaultPublicData","fetchCakeVaultUserData","fetchCakeVaultFees","useCakeVault","cakeVault","totalSharesAsString","totalShares","pricePerFullShareAsString","pricePerFullShare","totalCakeInVaultAsString","totalCakeInVault","estimatedCakeBountyRewardAsString","estimatedCakeBountyReward","totalPendingCakeHarvestAsString","totalPendingCakeHarvest","fees","performanceFee","callFee","withdrawalFee","withdrawalFeePeriod","userSharesAsString","userShares","cakeAtLastUserActionAsString","cakeAtLastUserAction","lastDepositedTime","lastUserActionTime","useMemo","useFetchProfile","fetchProfile","useProfile","profile","hasRegistered","hasProfile","useFetchPriceList","useGetApiPrices","prices","bnbBusdFarm","cakeBnbFarm","bnbBusdPrice","useBlock","block","useInitialBlock","useIsHistoryPaneOpen","predictions","useIsChartPaneOpen","useGetRounds","useGetSortedRounds","roundData","orderBy","useGetCurrentEpoch","useGetIntervalBlocks","useGetTotalIntervalBlocks","useGetPredictionsStatus","useGetHistoryFilter","useGetCurrentRoundBlockNumber","useGetMinBetAmount","useGetIsFetchingHistory","useGetHistoryByAccount","useGetBetByRoundId","useBetCanClaim","getCanClaim","useGetLastOraclePrice","useTotalValue","bnbPrice","cakePrice","val","QuoteToken","BNB","CAKE","plus","getContract","abi","web3NoAccount","Contract","getBep20Contract","bep20Abi","erc721Abi","getIfoV1Contract","ifoV1Abi","getIfoV2Contract","ifoV2Abi","getSouschefContract","config","poolsConfig","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","getSouschefV2Contract","sousChefV2","getPointCenterIfoContract","pointCenterIfo","getCakeContract","cakeAbi","profileABI","getPancakeRabbitContract","pancakeRabbitsAbi","getBunnyFactoryContract","bunnyFactoryAbi","getBunnySpecialContract","bunnySpecialAbi","getLotteryContract","lotteryAbi","getLotteryTicketContract","lotteryTicketAbi","getMasterchefContract","masterChef","getClaimRefundContract","claimRefundAbi","getTradingCompetitionContract","tradingCompetitionAbi","getEasterNftContract","easterNftAbi","getCakeVaultContract","cakeVaultAbi","getPredictionsContract","predictionsAbi","getChainlinkOracleContract","chainlinkOracleAbi","EXPONENTIAL_AT","DECIMAL_PLACES","BSC_BLOCK_TIME","BASE_URL","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","DEFAULT_GAS","PoolIds","NftType","Wrapper","PageLoader","FlexLayout","useERC20","useWeb3","useCake","useLottery","useCakeVaultContract","usePredictionsContract","useChainlinkOracleContract","Grid","GridItem","ApyCalculatorModal","onDismiss","tokenPrice","linkLabel","linkHref","earningTokenSymbol","roundingDecimals","compoundFrequency","oneThousandDollarsWorthOfToken","tokenEarnedPerThousand1D","tokenEarnedPerThousandDollarsCompounding","numberOfDays","farmApr","tokenEarnedPerThousand7D","tokenEarnedPerThousand30D","tokenEarnedPerThousand365D","fontSize","bold","textTransform","mb","num","getRoi","amountEarned","amountInvested","maxWidth","freq","mt","fee","justifyContent","href","ref","useRef","current","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","Math","abs","timeLeft","years","months","days","hours","minutes","floor","Outer","Box","colors","gradients","bubblegum","Inner","PageHeader","store","configureStore","devTools","reducer","achievementsReducer","blockReducer","farmsReducer","poolsReducer","pricesReducer","predictionsReducer","profileReducer","teamsReducer","collectibles","collectiblesReducer","useDispatch","bnb","projectLink","syrup","txl","cos","bunny","alice","for","bux","nuls","ramp","bfi","dexe","bel","tpt","xmark","bmxx","iotx","bor","bopen","dodo","swingby","zee","swgb","sfp","lina","lit","hget","bdo","egld","ust","front","btcst","bscx","balbt","asr","atm","og","reef","juv","psg","vai","unfi","twt","hard","broobee","stax","nar","nya","ctk","inj","sxp","alpha","xvs","sushi","comp","bifi","dusk","busd","beth","mamzn","mgoogl","mnflx","mtsla","ltc","usdc","dai","ada","band","dot","eos","link","usdt","btcb","xrp","atom","yfii","xtz","bch","yfi","uni","fil","bake","burger","bdigg","bbadger","trade","pnt","mir","pbtc","lto","pcws","zil","lien","swth","dft","gum","dego","nrv","easy","oddz","hoo","apys","bondly","tko","itam","arpa","eps","jgn","tlm","perl","alpa","suter","cgg","mix","hakka","xed","τbtc","alpaca","dfd","lmt","btt","trx","win","mcoin","math","kun","qsd","hyfi","oin","doge","fine","one","pmon","τdoge","btr","ubxt","wmass","rfox","xend","cyc","chr","deri","library","refEth","Web3","setweb3","ethers","constants","MaxUint256","send","from","enterStaking","gas","on","transactionHash","deposit","leaveStaking","withdraw","emergencyWithdraw","fetchPoolsBlockLimits","poolsWithEnd","p","callsStartBlock","poolConfig","callsEndBlock","sousChefABI","starts","ends","cakePoolConfig","endBlock","fetchPoolsTotalStaking","nonBnbPools","stakingToken","bnbPool","callsNonBnbPools","callsBnbPools","cakeABI","nonBnbPoolsTotalStaked","wbnbABI","bnbPoolsTotalStaked","fetchPoolStakingLimit","sousContract","poolLimitPerUser","fetchPoolsStakingLimits","poolsWithStakingLimit","validPools","isFinished","stakingLimitPromises","validPool","stakingLimits","bnbPools","nonMasterPools","masterChefABI","fetchPoolsAllowance","allowances","acc","fetchUserBalances","tokenBalancesRaw","tokenBalances","getBalance","bnbBalance","bnbBalances","fetchUserStakeBalances","userInfo","stakedBalances","masterPoolAmount","0","fetchUserPendingRewards","res","pendingRewards","pendingCake","cakeVaultContract","fetchPublicVaultData","getPricePerFullShare","calculateHarvestCakeRewards","calculateTotalPendingCakeRewards","sharePrice","totalSharesAsBigNumber","sharePriceAsBigNumber","totalCakeInVaultEstimate","fetchVaultFees","withdrawFee","withdrawFeePeriod","fetchVaultUser","userContractResponse","blockLimits","totalStakings","liveData","blockLimit","entry","totalStaking","isPoolEndBlockExceeded","isPoolFinished","setPoolsPublicData","stakingLimitData","stakingTokenBalances","setPoolsUserData","updatePoolsUserData","field","publicVaultInfo","vaultFees","PoolsSlice","livePoolsData","livePoolData","userPoolData","multi","MultiCallAbi","itf","Interface","calldata","encodeFunctionData","aggregate","returnData","decodeFunctionResult","toastContext","earningToken","CORE","sortOrder","BetPosition","Result","numberOrNull","valueNum","failed","startAt","lockAt","lockBlock","lockPrice","closePrice","totalBets","totalAmount","bearBets","bullBets","bearAmount","bullAmount","position","hash","BULL","BEAR","totalBNB","roundResponse","positionResponse","getRoundResult","CANCELED","roundResultPosition","WIN","LOSE","getUnclaimedWinningBets","getStaticPredictionsData","isPaused","getMarketData","marketResponse","where","first","skip","betId","RPC_URL","getRpcUrl","httpProvider","providers","HttpProvider","timeout","code","languageList","timesCompounded","aprAsDecimal","daysAsDecimalOfYear","principal","finalAmount","_binanceChainListener","resolve","defineProperty","this","bsc","useEagerConnect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","then","GlobalStyle","createGlobalStyle","CACHE_KEY","ThemeContext","isDark","toggleTheme","ThemeContextProvider","isDarkUserSetting","setIsDark","dark","light","useTheme","StyledThemeContext","label","icon","items","Menu","currentLang","langs","setLang","links","username","profileLink","noProfileLink","showPip","SuspenseWithChunkError","hasError","isJsChunkLoadError","isCssChunkLoadError","isChunkLoadError","isRecoveringFromChunkError","nextState","replaceState","location","reload","fallback","Component","ToastListener","onRemove","EasterEgg","show","setShow","startFalling","useKonamiCheatCode","onAnimationEnd","memo","Balance","isDisabled","unit","prefix","previousValue","showPrefix","Boolean","showUnit","start","end","duration","separator","AprRow","isAutoVault","tooltipContent","useTooltip","placement","targetRef","tooltip","tooltipVisible","earningTokenPrice","earningTokenPriceAsNumber","stakingTokenPriceAsNumber","isHighValueToken","apyModalLink","useModal","onPresentApyModal","alignItems","height","earningsPercentageToDisplay","scale","PromotedGradient","keyframes","StyledCard","Card","isPromoted","css","primaryBright","secondary","card","isDesktop","StyledCardInner","isPromotedPool","radii","ExpandedWrapper","Flex","ExpandedFooter","poolContractAddress","cakeVaultContractAddress","imageSrc","isMetaMaskInScope","isMetaMask","isManualCakePool","shouldShowBlockCountdown","blocksUntilStart","max","blocksRemaining","hasPoolStarted","flexDirection","small","manualCakeTotalMinusAutoVault","minus","getTotalStakedBalance","ml","ExpandableButtonWrapper","Footer","isExpanded","setIsExpanded","manualTooltipText","autoTooltipText","expanded","CardHeader","backgroundDisabled","StyledCardHeader","stakingTokenSymbol","isStaking","poolImageSrc","toLocaleLowerCase","isCakePool","src","ApprovalAction","stakingTokenContract","requestedApproval","setRequestedApproval","handleApprove","endIcon","spin","disabled","StyledLink","Link","NotEnoughTokensModal","headerBackground","cardHeader","as","external","StyledButton","Button","PercentageButton","mx","StakeModal","isBnbPool","isRemovingStake","pendingTx","setPendingTx","stakeAmount","setStakeAmount","hasReachedStakeLimit","setHasReachedStakedLimit","percent","setPercent","getCalculatedStakingLimit","usdValueStaked","fullDecimalStakeAmount","handleChangePercent","sliderPercent","percentageOfStakingMax","amountToStake","handleConfirmClick","style","textAlign","minWidth","onUserInput","input","convertedInput","percentage","min","currencyValue","isWarning","onValueChanged","valueLabel","step","StakeAction","isStaked","stakedTokenBalance","stakedTokenDollarBalance","onPresentTokenRequired","onPresentStake","onPresentUnstake","reachStakingLimit","gte","CollectModal","formattedBalance","fullBalance","earningsDollarValue","isCompoundPool","shouldCompound","setShouldCompound","tooltipOffset","handleHarvestConfirm","activeIndex","onItemClick","pb","HarvestActions","earningTokenBalance","earningTokenDollarBalance","hasEarnings","onPresentCollect","display","InlineText","Text","CardActions","needsApproval","StakeActions","PoolCard","accountHasStakedBalance","ribbon","variantColor","text","CardFooter","cakeContract","useWithdrawalFeeTimer","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","secondsRemainingCalc","doesUnstakingFeeApply","timerInterval","prevSeconds","WithdrawalFeeTimer","day","hour","minute","UnstakingFeeCountdownRow","feeAsDecimal","noFeeToPay","shouldShowTimer","FeeSummary","feeInCake","VaultStakeModal","stakingMax","cakePriceBusd","handleWithdrawal","convertedStakeAmount","shareStakeToWithdraw","triggerWithdrawAllThreshold","sharesRemaining","lte","withdrawAll","handleDeposit","HasSharesActions","stakedDollarValue","VaultStakeActions","accountHasSharesStaked","CakeVaultCardActions","isVaultApproved","setIsVaultApproved","currentAllowance","checkApprovalStatus","VaultApprovalAction","RecentCakeProfitBalance","cakeToDisplay","dollarValueToDisplay","dateStringToDisplay","RecentCakeProfitCountdownRow","shouldDisplayCakeProfit","cakeProfit","dollarValueOfCake","lastActionInMs","StyledCardBody","CardBody","CakeVaultCard","showStakedOnly","isXl","useMatchBreakpoints","isVaultUserDataLoading","performanceFeeAsDecimal","RecentCakeProfitRow","VaultCardActions","ButtonText","UiKitLink","PoolTabButtons","stakedOnly","setStakedOnly","hasStakeInFinishedPools","useRouteMatch","url","isExact","to","checked","onChange","px","Divider","BountyModal","cakeBountyToDisplay","dollarBountyToDisplay","TooltipComponent","callFeeAsDecimal","totalYieldToDisplay","tooltipPadding","right","BountyCard","cakePriceBusdAsNumber","estimatedDollarBountyReward","hasFetchedDollarBounty","hasFetchedCakeBounty","fontWeight","onPresentBountyModal","Pools","numberOfPoolsVisible","setNumberOfPoolsVisible","observerIsSet","setObserverIsSet","loadMoreRef","partition","finishedPools","openPools","stakedOnlyFinishedPools","isGreaterThan","stakedOnlyOpenPools","cakePoolData","IntersectionObserver","entries","isIntersecting","poolsCurrentlyVisible","rootMargin","threshold","observe","exact","createBrowserHistory","Home","lazy","Farms","NotFound","Predictions","App","Global","component","iterations","Providers","ReactDOM","render","StrictMode","document","getElementById","teamsSlice","fetchStart","fetchFailed","teamFetchSucceeded","teamsFetchSucceeded","fetchTeam","fetchTeams","transformProfileResponse","profileResponse","userId","getUsername","getProfile","getUserProfile","Cookies","avatar","domain","secure","expires","profileSlice","profileFetchStart","profileFetchSucceeded","_state","profileFetchFailed","addPoints","PANTENDIE","MIXIE","variationId","video","webm","mp4","blur","batch","BatchRequest","promises","reject","add","err","result","execute"],"mappings":"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","file":"static/js/main.6dcb0de4.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { getBalanceNumber, getFullDisplayBalance, getDecimalAmount } from 'utils/formatBalance'\n\nexport const convertSharesToCake = (\n  shares: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInCake = new BigNumber(shares.multipliedBy(sharePriceNumber))\n  const cakeAsNumberBalance = getBalanceNumber(amountInCake, decimals)\n  const cakeAsBigNumber = getDecimalAmount(new BigNumber(cakeAsNumberBalance), decimals)\n  const cakeAsDisplayBalance = getFullDisplayBalance(amountInCake, decimals, decimalsToRound)\n  return { cakeAsNumberBalance, cakeAsBigNumber, cakeAsDisplayBalance }\n}\n\nexport const convertCakeToShares = (\n  cake: BigNumber,\n  cakePerFullShare: BigNumber,\n  decimals = 18,\n  decimalsToRound = 3,\n) => {\n  const sharePriceNumber = getBalanceNumber(cakePerFullShare, decimals)\n  const amountInShares = new BigNumber(cake.dividedBy(sharePriceNumber))\n  const sharesAsNumberBalance = getBalanceNumber(amountInShares, decimals)\n  const sharesAsBigNumber = getDecimalAmount(new BigNumber(sharesAsNumberBalance), decimals)\n  const sharesAsDisplayBalance = getFullDisplayBalance(amountInShares, decimals, decimalsToRound)\n  return { sharesAsNumberBalance, sharesAsBigNumber, sharesAsDisplayBalance }\n}\n","export const GRAPH_API_PROFILE = process.env.REACT_APP_GRAPH_API_PROFILE\nexport const GRAPH_API_PREDICTION = process.env.REACT_APP_GRAPH_API_PREDICTION\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useTranslation } from 'contexts/Localization'\n\nconst UnlockButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {t('Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import { useCallback } from 'react'\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\nimport { profileClear } from 'state/profile'\nimport { useAppDispatch } from 'state'\nimport { useTranslation } from 'contexts/Localization'\n\nconst useAuth = () => {\n  const { t } = useTranslation()\n  const dispatch = useAppDispatch()\n  const { activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback((connectorID: ConnectorNames) => {\n    const connector = connectorsByName[connectorID]\n    if (connector) {\n      activate(connector, async (error: Error) => {\n        if (error instanceof UnsupportedChainIdError) {\n          const hasSetup = await setupNetwork()\n          if (hasSetup) {\n            activate(connector)\n          }\n        } else {\n          window.localStorage.removeItem(connectorLocalStorageKey)\n          if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n            toastError(t('Provider Error'), t('No provider was found'))\n          } else if (\n            error instanceof UserRejectedRequestErrorInjected ||\n            error instanceof UserRejectedRequestErrorWalletConnect\n          ) {\n            if (connector instanceof WalletConnectConnector) {\n              const walletConnector = connector as WalletConnectConnector\n              walletConnector.walletConnectProvider = null\n            }\n            toastError(t('Authorization Error'), t('Please authorize to access your account'))\n          } else {\n            toastError(error.name, error.message)\n          }\n        }\n      })\n    } else {\n      toastError(t('Unable to find connector'), t('The connector config is wrong'))\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const logout = useCallback(() => {\n    dispatch(profileClear())\n    deactivate()\n  }, [deactivate, dispatch])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import random from 'lodash/random'\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\nconst getNodeUrl = () => {\n  const randomIndex = random(0, nodes.length - 1)\n  return nodes[randomIndex]\n}\n\nexport default getNodeUrl\n","import { useContext } from 'react'\nimport { RefreshContext } from 'contexts/RefreshContext'\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh\n","import BigNumber from 'bignumber.js'\nimport erc20 from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nconst fetchFarms = async (farmsToFetch: FarmConfig[]) => {\n  const data = await Promise.all(\n    farmsToFetch.map(async (farmConfig) => {\n      const lpAddress = getAddress(farmConfig.lpAddresses)\n      const calls = [\n        // Balance of token in the LP contract\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of quote token on LP contract\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'balanceOf',\n          params: [lpAddress],\n        },\n        // Balance of LP tokens in the master chef contract\n        {\n          address: lpAddress,\n          name: 'balanceOf',\n          params: [getMasterChefAddress()],\n        },\n        // Total supply of LP tokens\n        {\n          address: lpAddress,\n          name: 'totalSupply',\n        },\n        // Token decimals\n        {\n          address: getAddress(farmConfig.token.address),\n          name: 'decimals',\n        },\n        // Quote token decimals\n        {\n          address: getAddress(farmConfig.quoteToken.address),\n          name: 'decimals',\n        },\n      ]\n\n      const [tokenBalanceLP, quoteTokenBalanceLP, lpTokenBalanceMC, lpTotalSupply, tokenDecimals, quoteTokenDecimals] =\n        await multicall(erc20, calls)\n\n\n        \n        // Ratio in % of LP tokens that are staked in the MC, vs the total number in circulation\n        const lpTokenRatio = new BigNumber(lpTokenBalanceMC).div(new BigNumber(lpTotalSupply))\n        \n        // Raw amount of token in the LP, including those not staked\n        const tokenAmountTotal = new BigNumber(tokenBalanceLP).div(BIG_TEN.pow(tokenDecimals))\n        const quoteTokenAmountTotal = new BigNumber(quoteTokenBalanceLP).div(BIG_TEN.pow(quoteTokenDecimals))\n\n\n        \n        \n        \n        // Amount of token in the LP that are staked in the MC (i.e amount of token * lp ratio)\n        const tokenAmountMc = tokenAmountTotal.times(lpTokenRatio)\n        const quoteTokenAmountMc = quoteTokenAmountTotal.times(lpTokenRatio)\n        \n\n      // Total staked in LP, in quote token value\n      const lpTotalInQuoteToken = quoteTokenAmountMc.times(new BigNumber(2))\n\n\n\n\n\n\n\n\n\n\n      const [info, totalAllocPoint] = await multicall(masterchefABI, [\n        {\n          address: getMasterChefAddress(),\n          name: 'poolInfo',\n          params: [farmConfig.pid],\n        },\n        {\n          address: getMasterChefAddress(),\n          name: 'totalAllocPoint',\n        },\n      ])\n\n      const allocPoint = new BigNumber(info.allocPoint._hex)\n      const poolWeight = allocPoint.div(new BigNumber(totalAllocPoint))\n\n      return {\n        ...farmConfig,\n        tokenAmountMc: tokenAmountMc.toJSON(),\n        quoteTokenAmountMc: quoteTokenAmountMc.toJSON(),\n        tokenAmountTotal: tokenAmountTotal.toJSON(),\n        quoteTokenAmountTotal: quoteTokenAmountTotal.toJSON(),\n        lpTotalSupply: new BigNumber(lpTotalSupply).toJSON(),\n        lpTotalInQuoteToken: lpTotalInQuoteToken.toJSON(),\n        tokenPriceVsQuote: quoteTokenAmountTotal.div(tokenAmountTotal).toJSON(),\n        poolWeight: poolWeight.toJSON(),\n        multiplier: `${allocPoint.div(100).toString()}X`,\n      }\n    }),\n  )\n  return data\n}\n\nexport default fetchFarms\n","import BigNumber from 'bignumber.js'\nimport erc20ABI from 'config/abi/erc20.json'\nimport masterchefABI from 'config/abi/masterchef.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { FarmConfig } from 'config/constants/types'\n\nexport const fetchFarmUserAllowances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return { address: lpContractAddress, name: 'allowance', params: [account, masterChefAddress] }\n  })\n\n  const rawLpAllowances = await multicall(erc20ABI, calls)\n  const parsedLpAllowances = rawLpAllowances.map((lpBalance) => {\n    return new BigNumber(lpBalance).toJSON()\n  })\n  return parsedLpAllowances\n}\n\nexport const fetchFarmUserTokenBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const calls = farmsToFetch.map((farm) => {\n    const lpContractAddress = getAddress(farm.lpAddresses)\n    return {\n      address: lpContractAddress,\n      name: 'balanceOf',\n      params: [account],\n    }\n  })\n\n  const rawTokenBalances = await multicall(erc20ABI, calls)\n  const parsedTokenBalances = rawTokenBalances.map((tokenBalance) => {\n    return new BigNumber(tokenBalance).toJSON()\n  })\n  return parsedTokenBalances\n}\n\nexport const fetchFarmUserStakedBalances = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'userInfo',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawStakedBalances = await multicall(masterchefABI, calls)\n  const parsedStakedBalances = rawStakedBalances.map((stakedBalance) => {\n    return new BigNumber(stakedBalance[0]._hex).toJSON()\n  })\n  return parsedStakedBalances\n}\n\nexport const fetchFarmUserEarnings = async (account: string, farmsToFetch: FarmConfig[]) => {\n  const masterChefAddress = getMasterChefAddress()\n\n  const calls = farmsToFetch.map((farm) => {\n    return {\n      address: masterChefAddress,\n      name: 'pendingCake',\n      params: [farm.pid, account],\n    }\n  })\n\n  const rawEarnings = await multicall(masterchefABI, calls)\n  const parsedEarnings = rawEarnings.map((earnings) => {\n    return new BigNumber(earnings).toJSON()\n  })\n  return parsedEarnings\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport isArchivedPid from 'utils/farmHelpers'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst nonArchivedFarms = farmsConfig.filter(({ pid }) => !isArchivedPid(pid))\n\nconst noAccountFarmConfig = farmsConfig.map((farm) => ({\n  ...farm,\n  userData: {\n    allowance: '0',\n    tokenBalance: '0',\n    stakedBalance: '0',\n    earnings: '0',\n  },\n}))\n\nconst initialState: FarmsState = { data: noAccountFarmConfig, loadArchivedFarmsData: false, userDataLoaded: false }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { pid } = userDataEl\n        const index = state.data.findIndex((farm) => farm.pid === pid)\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n      state.userDataLoaded = true\n    },\n    setLoadArchivedFarmsData: (state, action) => {\n      const loadArchivedFarmsData = action.payload\n      state.loadArchivedFarmsData = loadArchivedFarmsData\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData, setLoadArchivedFarmsData } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch, getState) => {\n  const fetchArchived = getState().farms.loadArchivedFarmsData\n  const farmsToFetch = fetchArchived ? farmsConfig : nonArchivedFarms\n  const farms = await fetchFarms(farmsToFetch)\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account: string) => async (dispatch, getState) => {\n  const fetchArchived = getState().farms.loadArchivedFarmsData\n  const farmsToFetch = fetchArchived ? farmsConfig : nonArchivedFarms\n  const userFarmAllowances = await fetchFarmUserAllowances(account, farmsToFetch)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account, farmsToFetch)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account, farmsToFetch)\n  const userFarmEarnings = await fetchFarmUserEarnings(account, farmsToFetch)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      pid: farmsToFetch[index].pid,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport default farmsSlice.reducer\n","import merge from 'lodash/merge'\nimport teamsList from 'config/constants/teams'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Team } from 'config/constants/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { TeamsById, TeamResponse } from 'state/types'\n\nconst profileContract = getProfileContract()\n\nexport const getTeam = async (teamId: number): Promise<Team> => {\n  try {\n    const {\n      0: teamName,\n      2: numberUsers,\n      3: numberPoints,\n      4: isJoinable,\n    } = await profileContract.methods.getTeamProfile(teamId).call()\n    const staticTeamInfo = teamsList.find((staticTeam) => staticTeam.id === teamId)\n\n    return merge({}, staticTeamInfo, {\n      isJoinable,\n      name: teamName,\n      users: numberUsers,\n      points: numberPoints,\n    })\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets on-chain data and merges it with the existing static list of teams\n */\nexport const getTeams = async (): Promise<TeamsById> => {\n  try {\n    const teamsById = teamsList.reduce((accum, team) => {\n      return {\n        ...accum,\n        [team.id]: team,\n      }\n    }, {})\n    const nbTeams = await profileContract.methods.numberTeams().call()\n    const calls = []\n\n    for (let i = 1; i <= nbTeams; i++) {\n      calls.push(profileContract.methods.getTeamProfile(i).call)\n    }\n\n    const teamData = (await makeBatchRequest(calls)) as TeamResponse[]\n    const onChainTeamData = teamData.reduce((accum, team, index) => {\n      const { 0: teamName, 2: numberUsers, 3: numberPoints, 4: isJoinable } = team\n\n      return {\n        ...accum,\n        [index + 1]: {\n          name: teamName,\n          users: Number(numberUsers),\n          points: Number(numberPoints),\n          isJoinable,\n        },\n      }\n    }, {})\n\n    return merge({}, teamsById, onChainTeamData)\n  } catch (error) {\n    return null\n  }\n}\n","import { Team } from './types'\n\nconst teams: Team[] = [\n  {\n    id: 1,\n    name: 'Syrup Storm',\n    description: \"The storm's a-comin! Watch out! These bulls are stampeding in a syrupy surge!\",\n    images: {\n      lg: 'syrup-storm-lg.png',\n      md: 'syrup-storm-md.png',\n      sm: 'syrup-storm-sm.png',\n      alt: 'syrup-storm-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/syrup-storm.png',\n    },\n    background: 'syrup-storm-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 2,\n    name: 'Fearsome Flippers',\n    description: \"The flippening is coming. Don't get in these bunnies' way, or you'll get flipped too!\",\n    images: {\n      lg: 'fearsome-flippers-lg.png',\n      md: 'fearsome-flippers-md.png',\n      sm: 'fearsome-flippers-sm.png',\n      alt: 'fearsome-flippers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/fearsome-flippers.png',\n    },\n    background: 'fearsome-flippers-bg.svg',\n    textColor: '#FFFFFF',\n    users: 0,\n    points: 0,\n  },\n  {\n    id: 3,\n    name: 'Chaotic Cakers',\n    description: 'Can you stand the heat? Stay out of the kitchen or you might get burned to a crisp!',\n    images: {\n      lg: 'chaotic-cakers-lg.png',\n      md: 'chaotic-cakers-md.png',\n      sm: 'chaotic-cakers-sm.png',\n      alt: 'chaotic-cakers-alt.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXKzSojwzYjtDCVgR6mVx7w7DbyYpS7zip4ovJB9fQdMG/chaotic-cakers.png',\n    },\n    background: 'chaotic-cakers-bg.svg',\n    textColor: '#191326',\n    users: 0,\n    points: 0,\n  },\n]\n\nexport default teams\n","import { ContextApi } from 'contexts/Localization/types'\nimport { PageMeta } from './types'\n\nexport const DEFAULT_META: PageMeta = {\n  title: 'TendieSwap',\n  description:\n    'The most popular AMM on BSC by user count! Earn TENDIE through yield farming or win it in the Lottery, then stake it in Pools to earn more tokens! Initial Farm Offerings (new token launch model pioneered by TendieSwap), NFTs, and more, on a platform you can trust.',\n  image: 'https://pancakeswap.finance/images/hero.png',\n}\n\nexport const getCustomMeta = (path: string, t: ContextApi['t']): PageMeta => {\n  switch (path) {\n    case '/':\n      return {\n        title: `${t('Home')} | ${t('TendieSwap')}`,\n      }\n    case '/competition':\n      return {\n        title: `${t('Trading Battle')} | ${t('TendieSwap')}`,\n      }\n    case '/prediction':\n      return {\n        title: `${t('Prediction')} | ${t('TendieSwap')}`,\n      }\n    case '/farms':\n      return {\n        title: `${t('Farms')} | ${t('TendieSwap')}`,\n      }\n    case '/pools':\n      return {\n        title: `${t('Pools')} | ${t('TendieSwap')}`,\n      }\n    case '/lottery':\n      return {\n        title: `${t('Lottery')} | ${t('TendieSwap')}`,\n      }\n    case '/collectibles':\n      return {\n        title: `${t('Collectibles')} | ${t('TendieSwap')}`,\n      }\n    case '/ifo':\n      return {\n        title: `${t('Initial Farm Offering')} | ${t('TendieSwap')}`,\n      }\n    case '/teams':\n      return {\n        title: `${t('Leaderboard')} | ${t('TendieSwap')}`,\n      }\n    case '/profile/tasks':\n      return {\n        title: `${t('Task Center')} | ${t('TendieSwap')}`,\n      }\n    case '/profile':\n      return {\n        title: `${t('Your Profile')} | ${t('TendieSwap')}`,\n      }\n    default:\n      return null\n  }\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Helmet } from 'react-helmet-async'\nimport { useLocation } from 'react-router'\nimport { DEFAULT_META, getCustomMeta } from 'config/constants/meta'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport Container from './Container'\n\nconst StyledPage = styled(Container)`\n  min-height: calc(100vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 32px;\n    padding-bottom: 32px;\n  }\n`\n\nconst PageMeta = () => {\n  const { t } = useTranslation()\n  const { pathname } = useLocation()\n  const cakePriceUsd = usePriceCakeBusd()\n  const cakePriceUsdDisplay = cakePriceUsd.eq(0)\n    ? ''\n    : `$${cakePriceUsd.toNumber().toLocaleString(undefined, {\n        minimumFractionDigits: 3,\n        maximumFractionDigits: 3,\n      })}`\n\n  const pageMeta = getCustomMeta(pathname, t) || {}\n  const { title, description, image } = { ...DEFAULT_META, ...pageMeta }\n  const pageTitle = cakePriceUsdDisplay ? [title, cakePriceUsdDisplay].join(' - ') : title\n\n  return (\n    <Helmet>\n      <title>{pageTitle}</title>\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={description} />\n      <meta property=\"og:image\" content={image} />\n    </Helmet>\n  )\n}\n\nconst Page: React.FC<React.HTMLAttributes<HTMLDivElement>> = ({ children, ...props }) => {\n  return (\n    <>\n      <PageMeta />\n      <StyledPage {...props}>{children}</StyledPage>\n    </>\n  )\n}\n\nexport default Page\n","import { EN } from '../../config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from '../../config/localization/languages'\nimport translations from '../../config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId: number, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, decimals, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import tokens from './tokens'\nimport farms from './farms'\nimport { Ifo, Token } from './types'\n\nconst cakeBnbLpToken: Token = {\n  symbol: farms[1].lpSymbol,\n  address: farms[1].lpAddresses,\n  decimals: 18,\n}\n\nconst ifos: Ifo[] = [\n  {\n    id: 'kalmar',\n    address: '0x1aFB32b76696CdF05593Ca3f3957AEFB23a220FB',\n    isActive: true,\n    name: 'Kalmar (KALM)',\n    poolBasic: {\n      saleAmount: '375,000 KALM',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '875,000 KALM',\n      raiseAmount: '$2,500,000',\n      cakeToBurn: '$1,250,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.kalm,\n    releaseBlockNumber: 7707736,\n    campaignId: '511110000',\n    articleUrl: 'https://pancakeswap.medium.com/kalmar-kalm-ifo-to-be-hosted-on-pancakeswap-4540059753e4',\n    tokenOfferingPrice: 2.0,\n    version: 2,\n  },\n  {\n    id: 'hotcross',\n    address: '0xb664cdbe385656F8c54031c0CB12Cea55b584b63',\n    isActive: false,\n    name: 'Hot Cross (HOTCROSS)',\n    poolBasic: {\n      saleAmount: '15,000,000 HOTCROSS',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '35,000,000 HOTCROSS',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hotcross,\n    releaseBlockNumber: 7477900,\n    campaignId: '511100000',\n    articleUrl: 'https://pancakeswap.medium.com/hot-cross-hotcross-ifo-to-be-hosted-on-pancakeswap-10e70f1f6841',\n    tokenOfferingPrice: 0.05,\n    version: 2,\n  },\n  {\n    id: 'horizon',\n    address: '0x6137B571f7F1E44839ae10310a08be86D1A4D03B',\n    isActive: false,\n    name: 'Horizon Protocol (HZN)',\n    poolBasic: {\n      saleAmount: '3,000,000 HZN',\n      raiseAmount: '$750,000',\n      cakeToBurn: '$375,000',\n      distributionRatio: 0.3,\n    },\n    poolUnlimited: {\n      saleAmount: '7,000,000 HZN',\n      raiseAmount: '$1,750,000',\n      cakeToBurn: '$875,000',\n      distributionRatio: 0.7,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.hzn,\n    releaseBlockNumber: 6581111,\n    campaignId: '511090000',\n    articleUrl: 'https://pancakeswap.medium.com/horizon-protocol-hzn-ifo-to-be-hosted-on-pancakeswap-51f79601c9d8',\n    tokenOfferingPrice: 0.25,\n    version: 2,\n  },\n  {\n    id: 'belt',\n    address: '0xc9FBedC033a1c479a6AD451ffE463025E92a1d38',\n    isActive: false,\n    name: 'Belt (BELT)',\n    poolUnlimited: {\n      saleAmount: '150,000 BELT',\n      raiseAmount: '$3,000,000',\n      cakeToBurn: '$1,500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.belt,\n    releaseBlockNumber: 5493919,\n    campaignId: '511080000',\n    articleUrl: 'https://pancakeswap.medium.com/belt-fi-belt-ifo-to-be-hosted-on-pancakeswap-353585117e32',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'watch',\n    address: '0x55344b55C71Ad8834C397E6e08dF5195cF84fe6d',\n    isActive: false,\n    name: 'Yieldwatch (WATCH)',\n    poolUnlimited: {\n      saleAmount: '8,000,000 WATCH',\n      raiseAmount: '$800,000',\n      cakeToBurn: '$400,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.watch,\n    releaseBlockNumber: 5294924,\n    campaignId: '511070000',\n    articleUrl: 'https://pancakeswap.medium.com/yieldwatch-watch-ifo-to-be-hosted-on-pancakeswap-d24301f17241',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'berry',\n    address: '0x5d028cE3435B2bB9AceBfaC599EEbA1ccD63d7dd',\n    isActive: false,\n    name: 'Berry (BRY)',\n    poolUnlimited: {\n      saleAmount: '2,000,000 BRY',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.bry,\n    releaseBlockNumber: 4750968,\n    campaignId: '511060000',\n    articleUrl: 'https://pancakeswap.medium.com/berry-bry-ifo-to-be-hosted-on-pancakeswap-b4f9095e9cdb',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: false,\n    name: 'Soteria (wSOTE)',\n    poolUnlimited: {\n      saleAmount: '1,500,000 wSOTE',\n      raiseAmount: '$525,000',\n      cakeToBurn: '$262,500',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.wsote,\n    releaseBlockNumber: 4086064,\n    campaignId: '511050000',\n    articleUrl: 'https://pancakeswap.medium.com/soteria-sota-ifo-to-be-hosted-on-pancakeswap-64b727c272ae',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'helmet',\n    address: '0xa32509d760ee47Eb2Be96D338b5d69B5FBa4eFEB',\n    isActive: false,\n    name: 'Helmet.insure (Helmet)',\n    poolUnlimited: {\n      saleAmount: '10,000,000 Helmet',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.helmet,\n    releaseBlockNumber: 3771926,\n    campaignId: '511040000',\n    articleUrl: 'https://pancakeswap.medium.com/1-000-000-helmet-helmet-ifo-to-be-hosted-on-pancakeswap-3379a2a89a67',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'tenet',\n    address: '0xB922aA19A2603A07C6C9ED6c236618C9bac51f06',\n    isActive: false,\n    name: 'Tenet (TEN)',\n    poolUnlimited: {\n      saleAmount: '1,000,000 TEN',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ten,\n    releaseBlockNumber: 3483883,\n    campaignId: '511030000',\n    articleUrl: 'https://pancakeswap.medium.com/tenet-ten-ifo-to-be-hosted-on-pancakeswap-b7e1eb4cb272',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'ditto',\n    address: '0x570c9eB19553526Fb35895a531928E19C7D20788',\n    isActive: false,\n    name: 'Ditto (DITTO)',\n    poolUnlimited: {\n      saleAmount: '700,000 DITTO',\n      raiseAmount: '$630,000',\n      cakeToBurn: '$315,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.ditto,\n    releaseBlockNumber: 3279767,\n    campaignId: '511020000',\n    articleUrl: 'https://pancakeswap.medium.com/ditto-money-ditto-ifo-to-be-hosted-on-pancakeswap-342da3059a66',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n  {\n    id: 'blink',\n    address: '0x44a9Cc8463EC00937242b660BF65B10365d99baD',\n    isActive: false,\n    name: 'BLINk (BLK)',\n    poolUnlimited: {\n      saleAmount: '100,000,000 BLINK',\n      raiseAmount: '$1,000,000',\n      cakeToBurn: '$500,000',\n      distributionRatio: 1,\n    },\n    currency: cakeBnbLpToken,\n    token: tokens.blink,\n    releaseBlockNumber: 3279767,\n    campaignId: '511010000',\n    articleUrl: 'https://medium.com/pancakeswap/1-000-000-ifo-blink-joins-pancakeswap-15841800bdd8',\n    tokenOfferingPrice: null,\n    version: 1,\n  },\n]\n\nexport default ifos\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { BlockState } from '../types'\n\nconst initialState: BlockState = { currentBlock: 0, initialBlock: 0 }\n\nexport const blockSlice = createSlice({\n  name: 'Block',\n  initialState,\n  reducers: {\n    setBlock: (state, action: PayloadAction<number>) => {\n      if (state.initialBlock === 0) {\n        state.initialBlock = action.payload\n      }\n\n      state.currentBlock = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setBlock } = blockSlice.actions\n\nexport default blockSlice.reducer\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport Web3 from 'web3'\nimport getNodeUrl from './getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  bridge: 'https://pancakeswap.bridge.walletconnect.org/',\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): Web3 => {\n  return provider\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  const provider = (window as WindowChain).ethereum\n  if (provider) {\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n    try {\n      await provider.request({\n        method: 'wallet_addEthereumChain',\n        params: [\n          {\n            chainId: `0x${chainId.toString(16)}`,\n            chainName: 'Binance Smart Chain Mainnet',\n            nativeCurrency: {\n              name: 'BNB',\n              symbol: 'bnb',\n              decimals: 18,\n            },\n            rpcUrls: nodes,\n            blockExplorerUrls: ['https://bscscan.com/'],\n          },\n        ],\n      })\n      return true\n    } catch (error) {\n      console.error(error)\n      return false\n    }\n  } else {\n    console.error(\"Can't setup the BSC network on metamask because window.ethereum is undefined\")\n    return false\n  }\n}\n\n/**\n * Prompt the user to add a custom token to metamask\n * @param tokenAddress\n * @param tokenSymbol\n * @param tokenDecimals\n * @param tokenImage\n * @returns {boolean} true if the token has been added, false otherwise\n */\nexport const registerToken = async (\n  tokenAddress: string,\n  tokenSymbol: string,\n  tokenDecimals: number,\n  tokenImage: string,\n) => {\n  const tokenAdded = await (window as WindowChain).ethereum.request({\n    method: 'wallet_watchAsset',\n    params: {\n      type: 'ERC20',\n      options: {\n        address: tokenAddress,\n        symbol: tokenSymbol,\n        decimals: tokenDecimals,\n        image: tokenImage,\n      },\n    },\n  })\n\n  return tokenAdded\n}\n","import Nfts, { IPFS_GATEWAY, nftSources } from 'config/constants/nfts'\nimport { Nft, NftType } from 'config/constants/types'\nimport { getAddress } from './addressHelpers'\nimport { getErc721Contract } from './contractHelpers'\n\n/**\n * Gets the identifier key based on the nft address\n * Helpful for looking up the key when all you have is the address\n */\nexport const getIdentifierKeyFromAddress = (nftAddress: string) => {\n  const nftSource = Object.values(nftSources).find((nftSourceEntry) => {\n    const address = getAddress(nftSourceEntry.address)\n    return address === nftAddress\n  })\n\n  return nftSource ? nftSource.identifierKey : null\n}\n\n/**\n * Some sources like Pancake do not return HTTP tokenURI's\n */\nexport const getTokenUrl = (tokenUri: string) => {\n  if (tokenUri.startsWith('ipfs://')) {\n    return `${IPFS_GATEWAY}/ipfs/${tokenUri.slice(6)}`\n  }\n\n  return tokenUri\n}\n\nexport const getAddressByType = (type: NftType) => {\n  return getAddress(nftSources[type].address)\n}\n\nexport const getTokenUriData = async (nftAddress: string, tokenId: number) => {\n  try {\n    const contract = getErc721Contract(nftAddress)\n    const tokenUri = await contract.methods.tokenURI(tokenId).call()\n    const uriDataResponse = await fetch(getTokenUrl(tokenUri))\n\n    if (!uriDataResponse.ok) {\n      return null\n    }\n\n    const uriData = await uriDataResponse.json()\n    return uriData\n  } catch (error) {\n    console.error('getTokenUriData', error)\n    return null\n  }\n}\n\nexport const getNftByTokenId = async (nftAddress: string, tokenId: number): Promise<Nft | null> => {\n  const uriData = await getTokenUriData(nftAddress, tokenId)\n  const identifierKey = getIdentifierKeyFromAddress(nftAddress)\n\n  // Bail out early if we have no uriData, identifierKey, or the value does not\n  // exist in the object\n  if (!uriData) {\n    return null\n  }\n\n  if (!identifierKey) {\n    return null\n  }\n\n  if (!uriData[identifierKey]) {\n    return null\n  }\n\n  return Nfts.find((nft) => {\n    return uriData[identifierKey].includes(nft.identifier)\n  })\n}\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { PriceApiResponse, PriceApiThunk, PriceState } from 'state/types'\n\nconst initialState: PriceState = {\n  isLoading: false,\n  lastUpdated: null,\n  data: null,\n}\n\n// Thunks\nexport const fetchPrices = createAsyncThunk<PriceApiThunk>('prices/fetch', async () => {\n  const response = await fetch('https://api.pancakeswap.info/api/v2/tokens')\n  const data = (await response.json()) as PriceApiResponse\n\n  // Return normalized token names\n  return {\n    updated_at: data.updated_at,\n    data: Object.keys(data.data).reduce((accum, token) => {\n      return {\n        ...accum,\n        [token.toLowerCase()]: parseFloat(data.data[token].price),\n      }\n    }, {}),\n  }\n})\n\nexport const pricesSlice = createSlice({\n  name: 'prices',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchPrices.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchPrices.fulfilled, (state, action: PayloadAction<PriceApiThunk>) => {\n      state.isLoading = false\n      state.lastUpdated = action.payload.updated_at\n      state.data = action.payload.data\n    })\n  },\n})\n\nexport default pricesSlice.reducer\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { CollectiblesState } from 'state/types'\nimport { nftSources } from 'config/constants/nfts'\nimport { NftType } from 'config/constants/types'\nimport { getAddress } from 'utils/addressHelpers'\nimport { getErc721Contract } from 'utils/contractHelpers'\nimport { getNftByTokenId } from 'utils/collectibles'\n\nconst initialState: CollectiblesState = {\n  isInitialized: false,\n  isLoading: true,\n  data: {},\n}\n\ntype NftSourceItem = [number, string]\n\n// Thunks\nexport const fetchWalletNfts = createAsyncThunk<NftSourceItem[], string>(\n  'collectibles/fetchWalletNfts',\n  async (account) => {\n    // For each nft source get nft data\n    const nftSourcePromises = Object.keys(nftSources).map(async (nftSourceType) => {\n      const { address: addressObj } = nftSources[nftSourceType as NftType]\n      const address = getAddress(addressObj)\n      const contract = getErc721Contract(address)\n\n      const getTokenIdAndData = async (index: number) => {\n        try {\n          const tokenId = await contract.methods.tokenOfOwnerByIndex(account, index).call()\n          const walletNft = await getNftByTokenId(address, tokenId)\n          return [Number(tokenId), walletNft.identifier]\n        } catch (error) {\n          console.error('getTokenIdAndData', error)\n          return null\n        }\n      }\n\n      const balanceOfResponse = await contract.methods.balanceOf(account).call()\n      const balanceOf = Number(balanceOfResponse)\n\n      if (balanceOf === 0) {\n        return []\n      }\n\n      const nftDataFetchPromises = []\n\n      // For each index get the tokenId and data associated with it\n      for (let i = 0; i < balanceOf; i++) {\n        nftDataFetchPromises.push(getTokenIdAndData(i))\n      }\n\n      const nftData = await Promise.all(nftDataFetchPromises)\n      return nftData\n    })\n\n    const nftSourceData = await Promise.all(nftSourcePromises)\n\n    return nftSourceData.flat()\n  },\n)\n\nexport const collectiblesSlice = createSlice({\n  name: 'collectibles',\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder.addCase(fetchWalletNfts.pending, (state) => {\n      state.isLoading = true\n    })\n    builder.addCase(fetchWalletNfts.fulfilled, (state, action) => {\n      state.isLoading = false\n      state.isInitialized = true\n      state.data = action.payload.reduce((accum, association) => {\n        if (!association) {\n          return accum\n        }\n\n        const [tokenId, identifier] = association as NftSourceItem\n\n        return {\n          ...accum,\n          [identifier]: accum[identifier] ? [...accum[identifier], tokenId] : [tokenId],\n        }\n      }, {})\n    })\n  },\n})\n\nexport default collectiblesSlice.reducer\n","import React, { useState, useEffect } from 'react'\n\nconst FAST_INTERVAL = 10000\nconst SLOW_INTERVAL = 60000\n\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\n\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\nconst RefreshContextProvider = ({ children }) => {\n  const [slow, setSlow] = useState(0)\n  const [fast, setFast] = useState(0)\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setFast((prev) => prev + 1)\n    }, FAST_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      setSlow((prev) => prev + 1)\n    }, SLOW_INTERVAL)\n    return () => clearInterval(interval)\n  }, [])\n\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\n}\n\nexport { RefreshContext, RefreshContextProvider }\n","import styled from 'styled-components'\n\nconst Container = styled.div`\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 1200px;\n  padding-left: 16px;\n  padding-right: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-left: 24px;\n    padding-right: 24px;\n  }\n`\n\nexport default Container\n","import { Campaign } from './types'\n\n/**\n * id: The campaign id (required)\n * type: The type of the achievement\n * title: A string or an object to be translated.\n * Note: If the value is a string it is likely used as data in a translation object\n *\n * badge: Achievement avatar\n */\n\nconst campaigns: Campaign[] = [\n  {\n    id: '511110000',\n    type: 'ifo',\n    title: 'Kalmar',\n    badge: 'ifo-kalmar.svg',\n  },\n  {\n    id: '511100000',\n    type: 'ifo',\n    title: 'Hotcross',\n    badge: 'ifo-hotcross.svg',\n  },\n  {\n    id: '511090000',\n    type: 'ifo',\n    title: 'Horizon Protocol',\n    badge: 'ifo-hzn.svg',\n  },\n  {\n    id: '511080000',\n    type: 'ifo',\n    title: 'Belt',\n    badge: 'ifo-belt.svg',\n  },\n  {\n    id: '511070000',\n    type: 'ifo',\n    title: 'Yieldwatch',\n    badge: 'ifo-watch.svg',\n  },\n  {\n    id: '511060000',\n    type: 'ifo',\n    title: 'Berry',\n    badge: 'ifo-bry.svg',\n  },\n  {\n    id: '511050000',\n    type: 'ifo',\n    title: 'Soteria',\n    badge: 'ifo-wsote.svg',\n  },\n  {\n    id: '511040000',\n    type: 'ifo',\n    title: 'Helmet',\n    badge: 'ifo-helmet.svg',\n  },\n  {\n    id: '511030000',\n    type: 'ifo',\n    title: 'Tenet',\n    badge: 'ifo-ten.svg',\n  },\n  {\n    id: '511020000',\n    type: 'ifo',\n    title: 'Ditto',\n    badge: 'ifo-ditto.svg',\n  },\n  {\n    id: '511010000',\n    type: 'ifo',\n    title: 'Blink',\n    badge: 'ifo-blk.svg',\n  },\n  {\n    id: '512010001',\n    type: 'teambattle',\n    title: 'Easter Champion: Gold',\n    badge: 'easter-champion-gold.svg',\n  },\n  {\n    id: '512010002',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010003',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010004',\n    type: 'teambattle',\n    title: 'Easter Top 500: Gold',\n    badge: 'easter-top-500-gold.svg',\n  },\n  {\n    id: '512010005',\n    type: 'teambattle',\n    title: 'Easter Participant: Gold',\n    badge: 'easter-participant-gold.svg',\n  },\n  {\n    id: '512010006',\n    type: 'teambattle',\n    title: 'Easter Champion: Silver',\n    badge: 'easter-champion-silver.svg',\n  },\n  {\n    id: '512010007',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010008',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010009',\n    type: 'teambattle',\n    title: 'Easter Top 500: Silver',\n    badge: 'easter-top-500-silver.svg',\n  },\n  {\n    id: '512010010',\n    type: 'teambattle',\n    title: 'Easter Participant: Silver',\n    badge: 'easter-participant-silver.svg',\n  },\n  {\n    id: '512010011',\n    type: 'teambattle',\n    title: 'Easter Champion: Bronze',\n    badge: 'easter-champion-bronze.svg',\n  },\n  {\n    id: '512010012',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010013',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010014',\n    type: 'teambattle',\n    title: 'Easter Top 500: Bronze',\n    badge: 'easter-top-500-bronze.svg',\n  },\n  {\n    id: '512010015',\n    type: 'teambattle',\n    title: 'Easter Participant: Bronze',\n    badge: 'easter-participant-bronze.svg',\n  },\n]\n\n/**\n * Transform the campaign config into a map. Keeps the config the same\n * as the others and allows easy access to a campaign by id\n */\nexport const campaignMap = new Map<string, Campaign>()\n\ncampaigns.forEach((campaign) => {\n  campaignMap.set(campaign.id, campaign)\n})\n\nexport default campaigns\n","import { Campaign } from 'config/constants/types'\nimport { getPointCenterIfoContract } from 'utils/contractHelpers'\nimport ifosList from 'config/constants/ifo'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { Achievement, TranslatableText } from 'state/types'\nimport makeBatchRequest from './makeBatchRequest'\n\ninterface IfoMapResponse {\n  thresholdToClaim: string\n  campaignId: string\n  numberPoints: string\n}\n\nexport const getAchievementTitle = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'IFO Shopper: %title%',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.title\n  }\n}\n\nexport const getAchievementDescription = (campaign: Campaign): TranslatableText => {\n  switch (campaign.type) {\n    case 'ifo':\n      return {\n        key: 'Committed more than $5 worth of LP in the %title% IFO',\n        data: {\n          title: campaign.title as string,\n        },\n      }\n    default:\n      return campaign.description\n  }\n}\n\n/**\n * Checks if a wallet is eligible to claim points from valid IFO's\n */\nexport const getClaimableIfoData = async (account: string): Promise<Achievement[]> => {\n  const ifoCampaigns = ifosList.filter((ifoItem) => ifoItem.campaignId !== undefined)\n  const ifoCampaignAddresses = ifoCampaigns.map((ifoItem) => ifoItem.address)\n  const pointCenterContract = getPointCenterIfoContract()\n\n  // Returns the claim status of every IFO with a campaign ID\n  const claimStatuses = (await pointCenterContract.methods\n    .checkClaimStatuses(account, ifoCampaignAddresses)\n    .call()) as boolean[]\n\n  // Get IFO data for all IFO's that are eligible to claim\n  const claimableIfoData = (await makeBatchRequest(\n    claimStatuses.reduce((accum, claimStatus, index) => {\n      if (claimStatus === true) {\n        return [...accum, pointCenterContract.methods.ifos(ifoCampaignAddresses[index]).call]\n      }\n\n      return accum\n    }, []),\n  )) as IfoMapResponse[]\n\n  // Transform response to an Achievement\n  return claimableIfoData.reduce((accum, claimableIfoDataItem) => {\n    if (!campaignMap.has(claimableIfoDataItem.campaignId)) {\n      return accum\n    }\n\n    const campaignMeta = campaignMap.get(claimableIfoDataItem.campaignId)\n    const { address } = ifoCampaigns.find((ifoCampaign) => ifoCampaign.campaignId === claimableIfoDataItem.campaignId)\n\n    return [\n      ...accum,\n      {\n        address,\n        id: claimableIfoDataItem.campaignId,\n        type: 'ifo',\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(claimableIfoDataItem.numberPoints),\n      },\n    ]\n  }, [])\n}\n","import { request, gql } from 'graphql-request'\nimport { campaignMap } from 'config/constants/campaigns'\nimport { GRAPH_API_PROFILE } from 'config/constants/endpoints'\nimport { Achievement } from 'state/types'\nimport { getAchievementTitle, getAchievementDescription } from 'utils/achievements'\n\ninterface UserPointIncreaseEvent {\n  campaignId: string\n  id: string // wallet address\n  points: string\n}\n\n/**\n * Gets all user point increase events on the profile filtered by wallet address\n */\nexport const getUserPointIncreaseEvents = async (account: string): Promise<UserPointIncreaseEvent[]> => {\n  try {\n    const { user } = await request(\n      GRAPH_API_PROFILE,\n      gql`\n        query getUserPointIncreaseEvents($account: ID!) {\n          user(id: $account) {\n            points {\n              id\n              campaignId\n              points\n            }\n          }\n        }\n      `,\n      {\n        account: account.toLowerCase(),\n      },\n    )\n\n    return user.points\n  } catch (error) {\n    return null\n  }\n}\n\n/**\n * Gets all user point increase events and adds achievement meta\n */\nexport const getAchievements = async (account: string): Promise<Achievement[]> => {\n  const pointIncreaseEvents = await getUserPointIncreaseEvents(account)\n\n  if (!pointIncreaseEvents) {\n    return []\n  }\n\n  return pointIncreaseEvents.reduce((accum, userPoint) => {\n    const campaignMeta = campaignMap.get(userPoint.campaignId)\n\n    return [\n      ...accum,\n      {\n        id: userPoint.campaignId,\n        type: campaignMeta.type,\n        address: userPoint.id,\n        title: getAchievementTitle(campaignMeta),\n        description: getAchievementDescription(campaignMeta),\n        badge: campaignMeta.badge,\n        points: Number(userPoint.points),\n      },\n    ]\n  }, [])\n}\n","/* eslint-disable no-param-reassign */\nimport { createSlice, Dispatch, PayloadAction } from '@reduxjs/toolkit'\nimport { AchievementState, Achievement } from '../types'\nimport { getAchievements } from './helpers'\n\nconst initialState: AchievementState = {\n  data: [],\n}\n\nexport const achievementSlice = createSlice({\n  name: 'achievements',\n  initialState,\n  reducers: {\n    addAchievement: (state, action: PayloadAction<Achievement>) => {\n      state.data.push(action.payload)\n    },\n    addAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = [...state.data, ...action.payload]\n    },\n    setAchievements: (state, action: PayloadAction<Achievement[]>) => {\n      state.data = action.payload\n    },\n    clearAchievements: (state) => {\n      state.data = []\n    },\n  },\n})\n\n// Actions\nexport const { addAchievement, addAchievements, setAchievements, clearAchievements } = achievementSlice.actions\n\n// Thunks\nexport const fetchAchievements = (account: string) => async (dispatch: Dispatch) => {\n  try {\n    const achievements = await getAchievements(account)\n    dispatch(setAchievements(achievements))\n  } catch (error) {\n    console.error(error)\n  }\n}\n\nexport default achievementSlice.reducer\n","export default {\n  masterChef: {\n    97: '0x3b88Da316b5241EBE0BBcf2C19D74E8e29b52f88', // MasterTendie\n    56: '0x6dDb25ca46656767f8f2385D653992dC1cdb4470', // MasterTendie\n  },\n  sousChef: {\n    97: '0xBEEEC6fD1beAdb1b8bBa44d141925BaD5d97B726', // SupportTendie\n    56: '0x36d5171896e1A0F367A4968505407373fff2dD33', // SupportTendie\n  },\n  multiCall: {\n    56: '0x4CC9F0748274278310f7CDbaf0CE9A9ed953F85f', // TENDIE MultiCall\n    97: '0x658C948b27f820c7B54477261FdaB8B952513656', // TENDIE MultiCall\n  },\n  cakeVault: {\n    56: '0x733aA7E0BA7aA9Ca1afdD1714da7D26b8f46bF63',\n    97: '',\n  },\n  predictions: {\n    56: '0x15f1A43a275add9194FB8E34fb4Ddc69a500Cf31', // Tendie Prediction\n    97: '0x3fB1e8acbD23F04112734b1199b84A910842519e', // Tendie Prediction\n  },\n  chainlinkOracle: {\n    56: '0x0567F2323251f0Aab15c8dFb1967E4e8A7D42aeE',\n    97: '',\n  },\n  lottery: {\n    97: '0x99c2EcD51d52c036B00130d882Bc65f20Fdecf9f',\n    56: '0x3C3f2049cc17C136a604bE23cF7E42745edf3b91',\n  },\n  lotteryNFT: {\n    97: '',\n    56: '0x5e74094Cd416f55179DBd0E45b1a8ED030e396A1',\n  },\n  /*\n   * @notice The below are unused and will be cleaned up in the near future.\n   */\n  pancakeProfile: {\n    56: '0xDf4dBf6536201370F95e06A0F8a7a70fE40E388a',\n    97: '0x4B683C7E13B6d5D7fd1FeA9530F451954c1A7c8A',\n  },\n  pancakeRabbits: {\n    56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n    97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n  },\n  bunnyFactory: {\n    56: '0xfa249Caa1D16f75fa159F7DFBAc0cC5EaB48CeFf',\n    97: '0x707CBF373175fdB601D34eeBF2Cf665d08f01148',\n  },\n  claimRefund: {\n    56: '0xE7e53A7e9E3Cf6b840f167eF69519175c497e149',\n    97: '',\n  },\n  pointCenterIfo: {\n    56: '0x3C6919b132462C1FEc572c6300E83191f4F0012a',\n    97: '0xd2Ac1B1728Bb1C11ae02AB6e75B76Ae41A2997e3',\n  },\n  bunnySpecial: {\n    56: '0xFee8A195570a18461146F401d6033f5ab3380849',\n    97: '0x7b7b1583De1DeB32Ce6605F6deEbF24A0671c17C',\n  },\n  tradingCompetition: {\n    56: '0xd718baa0B1F4f70dcC8458154042120FFE0DEFFA',\n    97: '0xC787F45B833721ED3aC46E99b703B3E1E01abb97',\n  },\n  easterNft: {\n    56: '0x23c41D28A239dDCAABd1bb1deF8d057189510066',\n    97: '0x24ec6962dbe874F6B67B5C50857565667fA0854F',\n  },\n}\n","import addresses from 'config/constants/contracts'\nimport tokens from 'config/constants/tokens'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => {\n  return getAddress(tokens.cake.address)\n}\nexport const getMasterChefAddress = () => {\n  return getAddress(addresses.masterChef)\n}\nexport const getMulticallAddress = () => {\n  return getAddress(addresses.multiCall)\n}\nexport const getWbnbAddress = () => {\n  return getAddress(tokens.wbnb.address)\n}\nexport const getLotteryAddress = () => {\n  return getAddress(addresses.lottery)\n}\nexport const getLotteryTicketAddress = () => {\n  return getAddress(addresses.lotteryNFT)\n}\nexport const getPancakeProfileAddress = () => {\n  return getAddress(addresses.pancakeProfile)\n}\nexport const getPancakeRabbitsAddress = () => {\n  return getAddress(addresses.pancakeRabbits)\n}\nexport const getBunnyFactoryAddress = () => {\n  return getAddress(addresses.bunnyFactory)\n}\nexport const getClaimRefundAddress = () => {\n  return getAddress(addresses.claimRefund)\n}\nexport const getPointCenterIfoAddress = () => {\n  return getAddress(addresses.pointCenterIfo)\n}\nexport const getBunnySpecialAddress = () => {\n  return getAddress(addresses.bunnySpecial)\n}\nexport const getTradingCompetitionAddress = () => {\n  return getAddress(addresses.tradingCompetition)\n}\nexport const getEasterNftAddress = () => {\n  return getAddress(addresses.easterNft)\n}\nexport const getCakeVaultAddress = () => {\n  return getAddress(addresses.cakeVault)\n}\nexport const getPredictionsAddress = () => {\n  return getAddress(addresses.predictions)\n}\nexport const getChainlinkOracleAddress = () => {\n  return getAddress(addresses.chainlinkOracle)\n}\n","import React, { createContext, ReactNode, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from '@pancakeswap/uikit'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: string, description?: ReactNode) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import BigNumber from 'bignumber.js'\nimport { BIG_TEN } from './bigNumber'\n\n/**\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\n */\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\n}\n\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\n}\n\n/**\n * This function is not really necessary but is used throughout the site.\n */\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  return getBalanceAmount(balance, decimals).toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, decimalsToAppear?: number) => {\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\n}\n\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\n  const options = {\n    minimumFractionDigits: minPrecision,\n    maximumFractionDigits: maxPrecision,\n  }\n  return number.toLocaleString(undefined, options)\n}\n","export { default as farmsConfig } from './farms'\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import BigNumber from 'bignumber.js'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon, RefreshIcon, AutoRenewIcon } from '@pancakeswap/uikit'\n\nconst CoreTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = (props) => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = (props) => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Binance\n  </Tag>\n)\n\nconst DualTag = (props) => (\n  <Tag variant=\"textSubtle\" outline {...props}>\n    Dual\n  </Tag>\n)\n\nconst ManualPoolTag = (props) => (\n  <Tag variant=\"secondary\" outline startIcon={<RefreshIcon width=\"18px\" color=\"secondary\" mr=\"4px\" />} {...props}>\n    Manual\n  </Tag>\n)\n\nconst CompoundingPoolTag = (props) => (\n  <Tag variant=\"success\" outline startIcon={<AutoRenewIcon width=\"18px\" color=\"success\" mr=\"4px\" />} {...props}>\n    Auto\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, DualTag, ManualPoolTag, CompoundingPoolTag }\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport maxBy from 'lodash/maxBy'\nimport merge from 'lodash/merge'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Bet, HistoryFilter, Market, PredictionsState, PredictionStatus, Round } from 'state/types'\nimport {\n  makeFutureRoundResponse,\n  transformRoundResponse,\n  getBetHistory,\n  transformBetResponse,\n  getBet,\n  makeRoundData,\n} from './helpers'\n\nconst initialState: PredictionsState = {\n  status: PredictionStatus.INITIAL,\n  isLoading: false,\n  isHistoryPaneOpen: false,\n  isChartPaneOpen: false,\n  isFetchingHistory: false,\n  historyFilter: HistoryFilter.ALL,\n  currentEpoch: 0,\n  currentRoundStartBlockNumber: 0,\n  intervalBlocks: 100,\n  bufferBlocks: 2,\n  minBetAmount: '1000000000000000',\n  lastOraclePrice: BIG_ZERO.toJSON(),\n  rounds: {},\n  history: {},\n  bets: {},\n}\n\n// Thunks\nexport const fetchBet = createAsyncThunk<{ account: string; bet: Bet }, { account: string; id: string }>(\n  'predictions/fetchBet',\n  async ({ account, id }) => {\n    const response = await getBet(id)\n    const bet = transformBetResponse(response)\n    return { account, bet }\n  },\n)\n\nexport const fetchRoundBet = createAsyncThunk<\n  { account: string; roundId: string; bet: Bet },\n  { account: string; roundId: string }\n>('predictions/fetchRoundBet', async ({ account, roundId }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round: roundId,\n  })\n\n  // This should always return 0 or 1 bet because a user can only place\n  // one bet per round\n  if (betResponses && betResponses.length === 1) {\n    const [betResponse] = betResponses\n    return { account, roundId, bet: transformBetResponse(betResponse) }\n  }\n\n  return { account, roundId, bet: null }\n})\n\n/**\n * Used to poll the user bets of the current round cards\n */\nexport const fetchCurrentBets = createAsyncThunk<\n  { account: string; bets: Bet[] },\n  { account: string; roundIds: string[] }\n>('predictions/fetchCurrentBets', async ({ account, roundIds }) => {\n  const betResponses = await getBetHistory({\n    user: account.toLowerCase(),\n    round_in: roundIds,\n  })\n\n  return { account, bets: betResponses.map(transformBetResponse) }\n})\n\nexport const fetchHistory = createAsyncThunk<{ account: string; bets: Bet[] }, { account: string; claimed?: boolean }>(\n  'predictions/fetchHistory',\n  async ({ account, claimed }) => {\n    const response = await getBetHistory({\n      user: account.toLowerCase(),\n      claimed,\n    })\n    const bets = response.map(transformBetResponse)\n\n    return { account, bets }\n  },\n)\n\nexport const predictionsSlice = createSlice({\n  name: 'predictions',\n  initialState,\n  reducers: {\n    setPredictionStatus: (state, action: PayloadAction<PredictionStatus>) => {\n      state.status = action.payload\n    },\n    setHistoryPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isHistoryPaneOpen = action.payload\n      state.historyFilter = HistoryFilter.ALL\n    },\n    setChartPaneState: (state, action: PayloadAction<boolean>) => {\n      state.isChartPaneOpen = action.payload\n    },\n    setHistoryFilter: (state, action: PayloadAction<HistoryFilter>) => {\n      state.historyFilter = action.payload\n    },\n    initialize: (state, action: PayloadAction<PredictionsState>) => {\n      return {\n        ...state,\n        ...action.payload,\n      }\n    },\n    updateMarketData: (state, action: PayloadAction<{ rounds: Round[]; market: Market }>) => {\n      const { rounds, market } = action.payload\n      const newRoundData = makeRoundData(rounds)\n      const incomingCurrentRound = maxBy(rounds, 'epoch')\n\n      if (state.currentEpoch !== incomingCurrentRound.epoch) {\n        // Add new round\n        const newestRound = maxBy(rounds, 'epoch') as Round\n        const futureRound = transformRoundResponse(\n          makeFutureRoundResponse(newestRound.epoch + 2, newestRound.startBlock + state.intervalBlocks),\n        )\n\n        newRoundData[futureRound.id] = futureRound\n      }\n\n      state.currentEpoch = incomingCurrentRound.epoch\n      state.currentRoundStartBlockNumber = incomingCurrentRound.startBlock\n      state.status = market.paused ? PredictionStatus.PAUSED : PredictionStatus.LIVE\n      state.rounds = { ...state.rounds, ...newRoundData }\n    },\n    setCurrentEpoch: (state, action: PayloadAction<number>) => {\n      state.currentEpoch = action.payload\n    },\n    markBetAsCollected: (state, action: PayloadAction<{ account: string; roundId: string }>) => {\n      const { account, roundId } = action.payload\n      const accountBets = state.bets[account]\n\n      if (accountBets && accountBets[roundId]) {\n        accountBets[roundId].claimed = true\n      }\n    },\n    markPositionAsEntered: (state, action: PayloadAction<{ account: string; roundId: string; bet: Bet }>) => {\n      const { account, roundId, bet } = action.payload\n\n      state.bets = {\n        ...state.bets,\n        [account]: {\n          ...state.bets[account],\n          [roundId]: bet,\n        },\n      }\n    },\n    setLastOraclePrice: (state, action: PayloadAction<string>) => {\n      state.lastOraclePrice = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    // Get unclaimed bets\n    builder.addCase(fetchCurrentBets.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n\n    // Get round bet\n    builder.addCase(fetchRoundBet.fulfilled, (state, action) => {\n      const { account, roundId, bet } = action.payload\n\n      if (bet) {\n        state.bets = {\n          ...state.bets,\n          [account]: {\n            ...state.bets[account],\n            [roundId]: bet,\n          },\n        }\n      }\n    })\n\n    // Update Bet\n    builder.addCase(fetchBet.fulfilled, (state, action) => {\n      const { account, bet } = action.payload\n      state.history[account] = [...state.history[account].filter((currentBet) => currentBet.id !== bet.id), bet]\n    })\n\n    // Show History\n    builder.addCase(fetchHistory.pending, (state) => {\n      state.isFetchingHistory = true\n    })\n    builder.addCase(fetchHistory.rejected, (state) => {\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n    })\n    builder.addCase(fetchHistory.fulfilled, (state, action) => {\n      const { account, bets } = action.payload\n\n      state.isFetchingHistory = false\n      state.isHistoryPaneOpen = true\n      state.history[account] = bets\n\n      // Save any fetched bets in the \"bets\" namespace\n      const betData = bets.reduce((accum, bet) => {\n        return {\n          ...accum,\n          [bet.round.id]: bet,\n        }\n      }, {})\n\n      state.bets = merge({}, state.bets, {\n        [account]: betData,\n      })\n    })\n  },\n})\n\n// Actions\nexport const {\n  initialize,\n  setChartPaneState,\n  setCurrentEpoch,\n  setHistoryFilter,\n  setHistoryPaneState,\n  updateMarketData,\n  markBetAsCollected,\n  setPredictionStatus,\n  markPositionAsEntered,\n  setLastOraclePrice,\n} = predictionsSlice.actions\n\nexport default predictionsSlice.reducer\n","import { useCallback, useState } from 'react'\nimport usePreviousValue from './usePreviousValue'\n\n/**\n * A helper hook to keep track of the time between events\n * Can also be used to force an effect to re-run\n */\nconst useLastUpdated = () => {\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\n  const previousLastUpdated = usePreviousValue(lastUpdated)\n\n  const setLastUpdated = useCallback(() => {\n    setStateLastUpdated(Date.now())\n  }, [setStateLastUpdated])\n\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\n}\n\nexport default useLastUpdated\n","import { useEffect, useState } from 'react'\n\n/**\n * Same as \"useState\" but saves the value to local storage each time it changes\n */\nconst usePersistState = (initialValue: any, localStorageKey: string) => {\n  const [value, setValue] = useState(() => {\n    try {\n      const valueFromLS = localStorage.getItem(localStorageKey)\n\n      return valueFromLS ? JSON.parse(valueFromLS) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  useEffect(() => {\n    localStorage.setItem(localStorageKey, JSON.stringify(value))\n  }, [value, localStorageKey])\n\n  return [value, setValue]\n}\n\nexport default usePersistState\n","import BigNumber from 'bignumber.js'\nimport { BLOCKS_PER_YEAR, TENDIE_PER_BLOCK } from 'config'\n\n/**\n * Get the APR value in %\n * @param stakingTokenPrice Token price in the same quote currency\n * @param rewardTokenPrice Token price in the same quote currency\n * @param totalStaked Total amount of stakingToken in the pool\n * @param tokenPerBlock Amount of new cake allocated to the pool for each new block\n * @returns Null if the APR is NaN or infinite.\n */\nexport const getPoolApr = (\n  stakingTokenPrice: number,\n  rewardTokenPrice: number,\n  totalStaked: number,\n  tokenPerBlock: number,\n): number => {\n  const totalRewardPricePerYear = new BigNumber(rewardTokenPrice).times(tokenPerBlock).times(BLOCKS_PER_YEAR)\n  const totalStakingTokenInPool = new BigNumber(stakingTokenPrice).times(totalStaked)\n  const apr = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\n/**\n * Get farm APR value in %\n * @param poolWeight allocationPoint / totalAllocationPoint\n * @param cakePriceUsd Cake price in USD\n * @param poolLiquidityUsd Total pool liquidity in USD\n * @returns\n */\nexport const getFarmApr = (poolWeight: BigNumber, cakePriceUsd: BigNumber, poolLiquidityUsd: BigNumber): number => {\n  const yearlyCakeRewardAllocation = TENDIE_PER_BLOCK.times(BLOCKS_PER_YEAR).times(poolWeight)\n  const apr = yearlyCakeRewardAllocation.times(cakePriceUsd).div(poolLiquidityUsd).times(100)\n  return apr.isNaN() || !apr.isFinite() ? null : apr.toNumber()\n}\n\nexport default null\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useAppDispatch } from 'state'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account } = useWeb3React()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWeb3React()\n  const onApprove = useCallback(async () => {\n    const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({ from: account })\n    return tx\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmergencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string, decimals: number) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (enableEmergencyWithdraw) {\n        const txHash = await sousEmergencyUnstake(sousChefContract, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import { useCallback } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useAppDispatch } from 'state'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useAppDispatch()\n  const { account } = useWeb3React()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { Farm } from 'state/types'\n\n/**\n * Returns the first farm with a quote token that matches from an array of preferred quote tokens\n * @param farms Array of farms\n * @param preferredQuoteTokens Array of preferred quote tokens\n * @returns A preferred farm, if found - or the first element of the farms array\n */\nexport const filterFarmsByQuoteToken = (farms: Farm[], preferredQuoteTokens: string[] = ['BUSD', 'wBNB']): Farm => {\n  const preferredFarm = farms.find((farm) => {\n    return preferredQuoteTokens.some((quoteToken) => {\n      return farm.quoteToken.symbol === quoteToken\n    })\n  })\n  return preferredFarm || farms[0]\n}\n\nexport default filterFarmsByQuoteToken\n","import BigNumber from 'bignumber.js'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\n\ntype UserData =\n  | Pool['userData']\n  | {\n      allowance: number | string\n      stakingTokenBalance: number | string\n      stakedBalance: number | string\n      pendingReward: number | string\n    }\n\nexport const transformUserData = (userData: UserData) => {\n  return {\n    allowance: userData ? new BigNumber(userData.allowance) : BIG_ZERO,\n    stakingTokenBalance: userData ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO,\n    stakedBalance: userData ? new BigNumber(userData.stakedBalance) : BIG_ZERO,\n    pendingReward: userData ? new BigNumber(userData.pendingReward) : BIG_ZERO,\n  }\n}\n\nexport const transformPool = (pool: Pool): Pool => {\n  const { totalStaked, stakingLimit, userData, ...rest } = pool\n\n  return {\n    ...rest,\n    userData: transformUserData(userData),\n    totalStaked: new BigNumber(totalStaked),\n    stakingLimit: new BigNumber(stakingLimit),\n  } as Pool\n}\n","import { useEffect, useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { useSelector } from 'react-redux'\nimport { useAppDispatch } from 'state'\nimport { orderBy } from 'lodash'\nimport { Team } from 'config/constants/types'\nimport Nfts from 'config/constants/nfts'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport { getBalanceAmount } from 'utils/formatBalance'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from 'hooks/useRefresh'\nimport { filterFarmsByQuoteToken } from 'utils/farmsPriceHelpers'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  setBlock,\n} from './actions'\nimport { State, Farm, Pool, ProfileState, TeamsState, AchievementState, PriceState, FarmsState } from './types'\nimport { fetchProfile } from './profile'\nimport { fetchTeam, fetchTeams } from './teams'\nimport { fetchAchievements } from './achievements'\nimport { fetchPrices } from './prices'\nimport { fetchWalletNfts } from './collectibles'\nimport { getCanClaim } from './predictions/helpers'\nimport { transformPool } from './pools/helpers'\nimport { fetchPoolsStakingLimitsAsync } from './pools'\nimport { QuoteToken } from '../config/constants/types'\n\nexport const useFetchPublicData = () => {\n  const dispatch = useAppDispatch()\n  const { slowRefresh } = useRefresh()\n  const web3 = getWeb3NoAccount()\n  useEffect(() => {\n    const fetchPoolsPublicData = async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(fetchPoolsPublicDataAsync(blockNumber))\n    }\n    dispatch(fetchFarmsPublicDataAsync())\n    fetchPoolsPublicData()\n    dispatch(fetchPoolsStakingLimitsAsync())\n  }, [dispatch, slowRefresh, web3])\n\n  useEffect(() => {\n    const interval = setInterval(async () => {\n      const blockNumber = await web3.eth.getBlockNumber()\n      dispatch(setBlock(blockNumber))\n    }, 6000)\n\n    return () => clearInterval(interval)\n  }, [dispatch, web3])\n}\n\n// Farms\n\nexport const useFarms = (): FarmsState => {\n  const farms = useSelector((state: State) => state.farms)\n  return farms\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromLpSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : BIG_ZERO,\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : BIG_ZERO,\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : BIG_ZERO,\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : BIG_ZERO,\n  }\n}\n\n// Return a farm for a given token symbol. The farm is filtered based on attempting to return a farm with a quote token from an array of preferred quote tokens\nexport const useFarmFromTokenSymbol = (tokenSymbol: string, preferredQuoteTokens?: string[]): Farm => {\n  const farms = useSelector((state: State) => state.farms.data.filter((farm) => farm.token.symbol === tokenSymbol))\n  const filteredFarm = filterFarmsByQuoteToken(farms, preferredQuoteTokens)\n  return filteredFarm\n}\n\nexport const useBusdPriceFromPid = (pid: number): BigNumber => {\n  const farm = useFarmFromPid(pid)\n  const bnbPriceBusd = usePriceBnbBusd()\n  const quoteTokenFarm = useFarmFromTokenSymbol(farm?.quoteToken?.symbol)\n\n  // Catch in case a farm isn't found\n  if (!farm) {\n    return null\n  }\n\n  // With a quoteToken of BUSD or wBNB, it is straightforward to return the token price.\n  if (farm.quoteToken.symbol === 'BUSD') {\n    return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  if (farm.quoteToken.symbol === 'wBNB') {\n    return bnbPriceBusd.gt(0) ? bnbPriceBusd.times(farm.tokenPriceVsQuote) : BIG_ZERO\n  }\n\n  // Possible alternative farm quoteTokens:\n  // UST (i.e. MIR-UST), pBTC (i.e. PNT-pBTC), BTCB (i.e. bBADGER-BTCB), ETH (i.e. SUSHI-ETH)\n  // If the farm's quote token isn't BUSD or wBNB, we then use the quote token, of the original farm's quote token\n  // i.e. for farm PNT - pBTC\n  // we find the pBTC farm (pBTC - BNB)'s quote token - BNB\n  // from the BNB - pBTC BUSD price, we can calculate the PNT - BUSD price\n  if (quoteTokenFarm.quoteToken.symbol === 'wBNB') {\n    const quoteTokenInBusd = bnbPriceBusd.gt(0) && bnbPriceBusd.times(quoteTokenFarm.tokenPriceVsQuote)\n    return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd) : BIG_ZERO\n  }\n\n  if (quoteTokenFarm.quoteToken.symbol === 'BUSD') {\n    const quoteTokenInBusd = quoteTokenFarm.tokenPriceVsQuote\n    return quoteTokenInBusd ? new BigNumber(farm.tokenPriceVsQuote).times(quoteTokenInBusd) : BIG_ZERO\n  }\n\n  // Catch in case token does not have immediate or once-removed BUSD/wBNB quoteToken\n  return BIG_ZERO\n}\n\nexport const useBusdPriceFromToken = (tokenSymbol: string): BigNumber | null => {\n  const tokenFarmForPriceCalc = useFarmFromTokenSymbol(tokenSymbol)\n  const tokenPrice = useBusdPriceFromPid(tokenFarmForPriceCalc?.pid)\n  return tokenPrice\n}\n\nexport const useLpTokenPrice = (symbol: string) => {\n  const farm = useFarmFromLpSymbol(symbol)\n  const farmTokenPriceInUsd = useBusdPriceFromPid(farm.pid)\n  let lpTokenPrice = BIG_ZERO\n\n  if (farm.lpTotalSupply && farm.lpTotalInQuoteToken) {\n    // Total value of base token in LP\n    const valueOfBaseTokenInFarm = farmTokenPriceInUsd.times(farm.tokenAmountTotal)\n    // Double it to get overall value in LP\n    const overallValueOfAllTokensInFarm = valueOfBaseTokenInFarm.times(2)\n    // Divide total value of all tokens, by the number of LP tokens\n    const totalLpTokens = getBalanceAmount(farm.lpTotalSupply)\n    lpTokenPrice = overallValueOfAllTokensInFarm.div(totalLpTokens)\n  }\n\n  return lpTokenPrice\n}\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools.map(transformPool)\n}\n\nexport const usePoolFromPid = (sousId: number): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return transformPool(pool)\n}\n\nexport const useFetchCakeVault = () => {\n  const { account } = useWeb3React()\n  const { fastRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultPublicData())\n  }, [dispatch, fastRefresh])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultUserData({ account }))\n  }, [dispatch, fastRefresh, account])\n\n  useEffect(() => {\n    dispatch(fetchCakeVaultFees())\n  }, [dispatch])\n}\n\nexport const useCakeVault = () => {\n  const {\n    totalShares: totalSharesAsString,\n    pricePerFullShare: pricePerFullShareAsString,\n    totalCakeInVault: totalCakeInVaultAsString,\n    estimatedCakeBountyReward: estimatedCakeBountyRewardAsString,\n    totalPendingCakeHarvest: totalPendingCakeHarvestAsString,\n    fees: { performanceFee, callFee, withdrawalFee, withdrawalFeePeriod },\n    userData: {\n      isLoading,\n      userShares: userSharesAsString,\n      cakeAtLastUserAction: cakeAtLastUserActionAsString,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  } = useSelector((state: State) => state.pools.cakeVault)\n\n  const estimatedCakeBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyRewardAsString)\n  }, [estimatedCakeBountyRewardAsString])\n\n  const totalPendingCakeHarvest = useMemo(() => {\n    return new BigNumber(totalPendingCakeHarvestAsString)\n  }, [totalPendingCakeHarvestAsString])\n\n  const totalShares = useMemo(() => {\n    return new BigNumber(totalSharesAsString)\n  }, [totalSharesAsString])\n\n  const pricePerFullShare = useMemo(() => {\n    return new BigNumber(pricePerFullShareAsString)\n  }, [pricePerFullShareAsString])\n\n  const totalCakeInVault = useMemo(() => {\n    return new BigNumber(totalCakeInVaultAsString)\n  }, [totalCakeInVaultAsString])\n\n  const userShares = useMemo(() => {\n    return new BigNumber(userSharesAsString)\n  }, [userSharesAsString])\n\n  const cakeAtLastUserAction = useMemo(() => {\n    return new BigNumber(cakeAtLastUserActionAsString)\n  }, [cakeAtLastUserActionAsString])\n\n  return {\n    totalShares,\n    pricePerFullShare,\n    totalCakeInVault,\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: {\n      performanceFee,\n      callFee,\n      withdrawalFee,\n      withdrawalFeePeriod,\n    },\n    userData: {\n      isLoading,\n      userShares,\n      cakeAtLastUserAction,\n      lastDepositedTime,\n      lastUserActionTime,\n    },\n  }\n}\n\n// Profile\n\nexport const useFetchProfile = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchProfile(account))\n  }, [account, dispatch])\n}\n\nexport const useProfile = () => {\n  const { isInitialized, isLoading, data, hasRegistered }: ProfileState = useSelector((state: State) => state.profile)\n  return { profile: data, hasProfile: isInitialized && hasRegistered, isInitialized, isLoading }\n}\n\n// Teams\n\nexport const useTeam = (id: number) => {\n  const team: Team = useSelector((state: State) => state.teams.data[id])\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeam(id))\n  }, [id, dispatch])\n\n  return team\n}\n\nexport const useTeams = () => {\n  const { isInitialized, isLoading, data }: TeamsState = useSelector((state: State) => state.teams)\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchTeams())\n  }, [dispatch])\n\n  return { teams: data, isInitialized, isLoading }\n}\n\n// Achievements\n\nexport const useFetchAchievements = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAchievements(account))\n    }\n  }, [account, dispatch])\n}\n\nexport const useAchievements = () => {\n  const achievements: AchievementState['data'] = useSelector((state: State) => state.achievements.data)\n  return achievements\n}\n\n// Prices\nexport const useFetchPriceList = () => {\n  const { slowRefresh } = useRefresh()\n  const dispatch = useAppDispatch()\n\n  useEffect(() => {\n    dispatch(fetchPrices())\n  }, [dispatch, slowRefresh])\n}\n\nexport const useGetApiPrices = () => {\n  const prices: PriceState['data'] = useSelector((state: State) => state.prices.data)\n  return prices\n}\n\nexport const useGetApiPrice = (address: string) => {\n  const prices = useGetApiPrices()\n\n  if (!prices) {\n    return null\n  }\n\n  return prices[address.toLowerCase()]\n}\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const bnbBusdFarm = useFarmFromPid(3)\n  return bnbBusdFarm.tokenPriceVsQuote ? new BigNumber(1).div(bnbBusdFarm.tokenPriceVsQuote) : BIG_ZERO\n}\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const cakeBnbFarm = useFarmFromPid(1)\n  const bnbBusdPrice = usePriceBnbBusd()\n\n  const cakeBusdPrice = cakeBnbFarm.tokenPriceVsQuote ? bnbBusdPrice.times(cakeBnbFarm.tokenPriceVsQuote) : BIG_ZERO\n\n  return cakeBusdPrice\n}\n\n// Block\nexport const useBlock = () => {\n  return useSelector((state: State) => state.block)\n}\n\nexport const useInitialBlock = () => {\n  return useSelector((state: State) => state.block.initialBlock)\n}\n\n// Predictions\nexport const useIsHistoryPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isHistoryPaneOpen)\n}\n\nexport const useIsChartPaneOpen = () => {\n  return useSelector((state: State) => state.predictions.isChartPaneOpen)\n}\n\nexport const useGetRounds = () => {\n  return useSelector((state: State) => state.predictions.rounds)\n}\n\nexport const useGetSortedRounds = () => {\n  const roundData = useGetRounds()\n  return orderBy(Object.values(roundData), ['epoch'], ['asc'])\n}\n\nexport const useGetCurrentEpoch = () => {\n  return useSelector((state: State) => state.predictions.currentEpoch)\n}\n\nexport const useGetIntervalBlocks = () => {\n  return useSelector((state: State) => state.predictions.intervalBlocks)\n}\n\nexport const useGetBufferBlocks = () => {\n  return useSelector((state: State) => state.predictions.bufferBlocks)\n}\n\nexport const useGetTotalIntervalBlocks = () => {\n  const intervalBlocks = useGetIntervalBlocks()\n  const bufferBlocks = useGetBufferBlocks()\n  return intervalBlocks + bufferBlocks\n}\n\nexport const useGetRound = (id: string) => {\n  const rounds = useGetRounds()\n  return rounds[id]\n}\n\nexport const useGetCurrentRound = () => {\n  const currentEpoch = useGetCurrentEpoch()\n  const rounds = useGetSortedRounds()\n  return rounds.find((round) => round.epoch === currentEpoch)\n}\n\nexport const useGetPredictionsStatus = () => {\n  return useSelector((state: State) => state.predictions.status)\n}\n\nexport const useGetHistoryFilter = () => {\n  return useSelector((state: State) => state.predictions.historyFilter)\n}\n\nexport const useGetCurrentRoundBlockNumber = () => {\n  return useSelector((state: State) => state.predictions.currentRoundStartBlockNumber)\n}\n\nexport const useGetMinBetAmount = () => {\n  const minBetAmount = useSelector((state: State) => state.predictions.minBetAmount)\n  return useMemo(() => new BigNumber(minBetAmount), [minBetAmount])\n}\n\nexport const useGetIsFetchingHistory = () => {\n  return useSelector((state: State) => state.predictions.isFetchingHistory)\n}\n\nexport const useGetHistory = () => {\n  return useSelector((state: State) => state.predictions.history)\n}\n\nexport const useGetHistoryByAccount = (account: string) => {\n  const bets = useGetHistory()\n  return bets ? bets[account] : []\n}\n\nexport const useGetBetByRoundId = (account: string, roundId: string) => {\n  const bets = useSelector((state: State) => state.predictions.bets)\n\n  if (!bets[account]) {\n    return null\n  }\n\n  if (!bets[account][roundId]) {\n    return null\n  }\n\n  return bets[account][roundId]\n}\n\nexport const useBetCanClaim = (account: string, roundId: string) => {\n  const bet = useGetBetByRoundId(account, roundId)\n\n  if (!bet) {\n    return false\n  }\n\n  return getCanClaim(bet)\n}\n\nexport const useGetLastOraclePrice = (): BigNumber => {\n  const lastOraclePrice = useSelector((state: State) => state.predictions.lastOraclePrice)\n  return new BigNumber(lastOraclePrice)\n}\n\n// Collectibles\nexport const useGetCollectibles = () => {\n  const { account } = useWeb3React()\n  const dispatch = useAppDispatch()\n  const { isInitialized, isLoading, data } = useSelector((state: State) => state.collectibles)\n  const identifiers = Object.keys(data)\n\n  useEffect(() => {\n    // Fetch nfts only if we have not done so already\n    if (!isInitialized) {\n      dispatch(fetchWalletNfts(account))\n    }\n  }, [isInitialized, account, dispatch])\n\n  return {\n    isInitialized,\n    isLoading,\n    tokenIds: data,\n    nftsInWallet: Nfts.filter((nft) => identifiers.includes(nft.identifier)),\n  }\n}\n\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const bnbPrice = usePriceBnbBusd();\n  const cakePrice = usePriceCakeBusd();\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.data.length; i++) {\n    const farm = farms.data[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val;\n      if (farm.quoteToken.symbol === QuoteToken.BNB) {\n        val = (bnbPrice.times(farm.lpTotalInQuoteToken));\n      }else if (farm.quoteToken.symbol === QuoteToken.CAKE) {\n        val = (cakePrice.times(farm.lpTotalInQuoteToken));\n      }else{\n        val = (farm.lpTotalInQuoteToken);\n      }\n      value = value.plus(val);\n    }\n  }\n  return value;\n}\n","import Web3 from 'web3'\nimport { AbiItem } from 'web3-utils'\nimport web3NoAccount from 'utils/web3'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\n\n// Addresses\nimport {\n  getAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getBunnyFactoryAddress,\n  getBunnySpecialAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getMasterChefAddress,\n  getPointCenterIfoAddress,\n  getClaimRefundAddress,\n  getTradingCompetitionAddress,\n  getEasterNftAddress,\n  getCakeVaultAddress,\n  getPredictionsAddress,\n  getChainlinkOracleAddress,\n} from 'utils/addressHelpers'\n\n// ABI\nimport profileABI from 'config/abi/pancakeProfile.json'\nimport pancakeRabbitsAbi from 'config/abi/pancakeRabbits.json'\nimport bunnyFactoryAbi from 'config/abi/bunnyFactory.json'\nimport bunnySpecialAbi from 'config/abi/bunnySpecial.json'\nimport bep20Abi from 'config/abi/erc20.json'\nimport erc721Abi from 'config/abi/erc721.json'\nimport lpTokenAbi from 'config/abi/lpToken.json'\nimport cakeAbi from 'config/abi/cake.json'\nimport ifoV1Abi from 'config/abi/ifoV1.json'\nimport ifoV2Abi from 'config/abi/ifoV2.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport lotteryTicketAbi from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefV2 from 'config/abi/sousChefV2.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport claimRefundAbi from 'config/abi/claimRefund.json'\nimport tradingCompetitionAbi from 'config/abi/tradingCompetition.json'\nimport easterNftAbi from 'config/abi/easterNft.json'\nimport cakeVaultAbi from 'config/abi/cakeVault.json'\nimport predictionsAbi from 'config/abi/predictions.json'\nimport chainlinkOracleAbi from 'config/abi/chainlinkOracle.json'\n\nconst getContract = (abi: any, address: string, web3?: Web3) => {\n  const _web3 = web3 ?? web3NoAccount\n  return new _web3.eth.Contract(abi as unknown as AbiItem, address)\n}\n\nexport const getBep20Contract = (address: string, web3?: Web3) => {\n  return getContract(bep20Abi, address, web3)\n}\nexport const getErc721Contract = (address: string, web3?: Web3) => {\n  return getContract(erc721Abi, address, web3)\n}\nexport const getLpContract = (address: string, web3?: Web3) => {\n  return getContract(lpTokenAbi, address, web3)\n}\nexport const getIfoV1Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV1Abi, address, web3)\n}\nexport const getIfoV2Contract = (address: string, web3?: Web3) => {\n  return getContract(ifoV2Abi, address, web3)\n}\nexport const getSouschefContract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  return getContract(abi, getAddress(config.contractAddress), web3)\n}\nexport const getSouschefV2Contract = (id: number, web3?: Web3) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  return getContract(sousChefV2, getAddress(config.contractAddress), web3)\n}\nexport const getPointCenterIfoContract = (web3?: Web3) => {\n  return getContract(pointCenterIfo, getPointCenterIfoAddress(), web3)\n}\nexport const getCakeContract = (web3?: Web3) => {\n  return getContract(cakeAbi, getCakeAddress(), web3)\n}\nexport const getProfileContract = (web3?: Web3) => {\n  return getContract(profileABI, getPancakeProfileAddress(), web3)\n}\nexport const getPancakeRabbitContract = (web3?: Web3) => {\n  return getContract(pancakeRabbitsAbi, getPancakeRabbitsAddress(), web3)\n}\nexport const getBunnyFactoryContract = (web3?: Web3) => {\n  return getContract(bunnyFactoryAbi, getBunnyFactoryAddress(), web3)\n}\nexport const getBunnySpecialContract = (web3?: Web3) => {\n  return getContract(bunnySpecialAbi, getBunnySpecialAddress(), web3)\n}\nexport const getLotteryContract = (web3?: Web3) => {\n  return getContract(lotteryAbi, getLotteryAddress(), web3)\n}\nexport const getLotteryTicketContract = (web3?: Web3) => {\n  return getContract(lotteryTicketAbi, getLotteryTicketAddress(), web3)\n}\nexport const getMasterchefContract = (web3?: Web3) => {\n  return getContract(masterChef, getMasterChefAddress(), web3)\n}\nexport const getClaimRefundContract = (web3?: Web3) => {\n  return getContract(claimRefundAbi, getClaimRefundAddress(), web3)\n}\nexport const getTradingCompetitionContract = (web3?: Web3) => {\n  return getContract(tradingCompetitionAbi, getTradingCompetitionAddress(), web3)\n}\nexport const getEasterNftContract = (web3?: Web3) => {\n  return getContract(easterNftAbi, getEasterNftAddress(), web3)\n}\nexport const getCakeVaultContract = (web3?: Web3) => {\n  return getContract(cakeVaultAbi, getCakeVaultAddress(), web3)\n}\nexport const getPredictionsContract = (web3?: Web3) => {\n  return getContract(predictionsAbi, getPredictionsAddress(), web3)\n}\nexport const getChainlinkOracleContract = (web3?: Web3) => {\n  return getContract(chainlinkOracleAbi, getChainlinkOracleAddress(), web3)\n}\n","import BigNumber from 'bignumber.js/bignumber'\nimport { BIG_TEN } from 'utils/bigNumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BSC_BLOCK_TIME = 3\n\n// TENDIE_PER_BLOCK details\n// 40 TENDIE is minted per block\n// 20 TENDIE per block is sent to Burn pool (A farm just for burning cake)\n// 10 TENDIE per block goes to TENDIE syrup pool\n// 10 TENDIE per block goes to Yield farms and lottery\n// TENDIE_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\n// TENDIE/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\n\nexport const TENDIE_PER_BLOCK = new BigNumber(40)\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365) // 10512000\nexport const BASE_URL = 'https://pancakeswap.finance'\nexport const BASE_EXCHANGE_URL = 'https://exchange.pancakeswap.finance'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const BASE_BSC_SCAN_URL = 'https://bscscan.com'\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18)\nexport const DEFAULT_GAS = 200000\n","import { TranslatableText } from 'state/types'\n\nexport interface Address {\n  97?: string\n  56: string\n}\n\nexport interface Token {\n  symbol: string\n  address?: Address\n  decimals?: number\n  projectLink?: string\n}\n\nexport enum PoolIds {\n  poolBasic = 'poolBasic',\n  poolUnlimited = 'poolUnlimited',\n}\n\nexport type IfoStatus = 'idle' | 'coming_soon' | 'live' | 'finished'\n\ninterface IfoPoolInfo {\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  distributionRatio: number // Range [0-1]\n}\n\nexport interface Ifo {\n  id: string\n  isActive: boolean\n  address: string\n  name: string\n  currency: Token\n  token: Token\n  releaseBlockNumber: number\n  articleUrl: string\n  campaignId: string\n  tokenOfferingPrice: number\n  version: number\n  [PoolIds.poolBasic]?: IfoPoolInfo\n  [PoolIds.poolUnlimited]: IfoPoolInfo\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n  'AUTO' = 'Auto',\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  token: Token\n  quoteToken: Token\n  multiplier?: string\n  isCommunity?: boolean\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface PoolConfig {\n  sousId: number\n  earningToken: Token\n  stakingToken: Token\n  contractAddress: Address\n  poolCategory: PoolCategory\n  tokenPerBlock: string\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  enableEmergencyWithdraw?: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type NftSource = {\n  [key in NftType]: {\n    address: Address\n    identifierKey: string\n  }\n}\n\nexport enum NftType {\n  PANTENDIE = 'pancake',\n  MIXIE = 'mixie',\n}\n\nexport type Nft = {\n  description: string\n  name: string\n  images: NftImages\n  sortOrder: number\n  type: NftType\n  video?: NftVideo\n\n  // Uniquely identifies the nft.\n  // Used for matching an NFT from the config with the data from the NFT's tokenURI\n  identifier: string\n\n  // Used to be \"bunnyId\". Used when minting NFT\n  variationId?: number | string\n}\n\nexport type TeamImages = {\n  alt: string\n} & Images\n\nexport type Team = {\n  id: number\n  name: string\n  description: string\n  isJoinable?: boolean\n  users: number\n  points: number\n  images: TeamImages\n  background: string\n  textColor: string\n}\n\nexport type CampaignType = 'ifo' | 'teambattle'\n\nexport type Campaign = {\n  id: string\n  type: CampaignType\n  title?: TranslatableText\n  description?: TranslatableText\n  badge?: string\n}\n\nexport type PageMeta = {\n  title: string\n  description?: string\n  image?: string\n}\n\n\nexport enum QuoteToken {\n  'BNB' = 'wBNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n}\n","const ARCHIVED_FARMS_START_PID = 139\nconst ARCHIVED_FARMS_END_PID = 250\n\nconst isArchivedPid = (pid: number) => pid >= ARCHIVED_FARMS_START_PID && pid <= ARCHIVED_FARMS_END_PID\n\nexport default isArchivedPid\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Spinner } from '@pancakeswap/uikit'\nimport Page from './layout/Page'\n\nconst Wrapper = styled(Page)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst PageLoader: React.FC = () => {\n  return (\n    <Wrapper>\n      <Spinner />\n    </Wrapper>\n  )\n}\n\nexport default PageLoader\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useMemo } from 'react'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getBep20Contract,\n  getCakeContract,\n  getBunnyFactoryContract,\n  getBunnySpecialContract,\n  getPancakeRabbitContract,\n  getProfileContract,\n  getIfoV1Contract,\n  getIfoV2Contract,\n  getLotteryContract,\n  getLotteryTicketContract,\n  getMasterchefContract,\n  getPointCenterIfoContract,\n  getSouschefContract,\n  getClaimRefundContract,\n  getTradingCompetitionContract,\n  getEasterNftContract,\n  getErc721Contract,\n  getCakeVaultContract,\n  getPredictionsContract,\n  getChainlinkOracleContract,\n  getSouschefV2Contract,\n} from 'utils/contractHelpers'\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoV1Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV1Contract(address, web3), [address, web3])\n}\n\nexport const useIfoV2Contract = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getIfoV2Contract(address, web3), [address, web3])\n}\n\nexport const useERC20 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getBep20Contract(address, web3), [address, web3])\n}\n\n/**\n * @see https://docs.openzeppelin.com/contracts/3.x/api/token/erc721\n */\nexport const useERC721 = (address: string) => {\n  const web3 = useWeb3()\n  return useMemo(() => getErc721Contract(address, web3), [address, web3])\n}\n\nexport const useCake = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeContract(web3), [web3])\n}\n\nexport const useBunnyFactory = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnyFactoryContract(web3), [web3])\n}\n\nexport const usePancakeRabbits = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPancakeRabbitContract(web3), [web3])\n}\n\nexport const useProfile = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getProfileContract(web3), [web3])\n}\n\nexport const useLottery = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryContract(web3), [web3])\n}\n\nexport const useLotteryTicket = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getLotteryTicketContract(web3), [web3])\n}\n\nexport const useMasterchef = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getMasterchefContract(web3), [web3])\n}\n\nexport const useSousChef = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefContract(id, web3), [id, web3])\n}\n\nexport const useSousChefV2 = (id) => {\n  const web3 = useWeb3()\n  return useMemo(() => getSouschefV2Contract(id, web3), [id, web3])\n}\n\nexport const usePointCenterIfoContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPointCenterIfoContract(web3), [web3])\n}\n\nexport const useBunnySpecialContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getBunnySpecialContract(web3), [web3])\n}\n\nexport const useClaimRefundContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getClaimRefundContract(web3), [web3])\n}\n\nexport const useTradingCompetitionContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getTradingCompetitionContract(web3), [web3])\n}\n\nexport const useEasterNftContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getEasterNftContract(web3), [web3])\n}\n\nexport const useCakeVaultContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getCakeVaultContract(web3), [web3])\n}\n\nexport const usePredictionsContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getPredictionsContract(web3), [web3])\n}\n\nexport const useChainlinkOracleContract = () => {\n  const web3 = useWeb3()\n  return useMemo(() => getChainlinkOracleContract(web3), [web3])\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, LinkExternal, Flex, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\n\ninterface ApyCalculatorModalProps {\n  onDismiss?: () => void\n  tokenPrice: number\n  apr: number\n  linkLabel: string\n  linkHref: string\n  earningTokenSymbol?: string\n  roundingDecimals?: number\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst Grid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, auto);\n  margin-bottom: 24px;\n`\n\nconst GridItem = styled.div`\n  margin-bottom: '10px';\n`\n\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\n  onDismiss,\n  tokenPrice,\n  apr,\n  linkLabel,\n  linkHref,\n  earningTokenSymbol = 'TENDIE',\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  const { t } = useTranslation()\n  const oneThousandDollarsWorthOfToken = 1000 / tokenPrice\n\n  const tokenEarnedPerThousand1D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 1,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand7D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 7,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand30D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 30,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n  const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n    numberOfDays: 365,\n    farmApr: apr,\n    tokenPrice,\n    roundingDecimals,\n    compoundFrequency,\n    performanceFee,\n  })\n\n  return (\n    <Modal title={t('ROI')} onDismiss={onDismiss}>\n      <Grid>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('Timeframe')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('ROI')}\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text fontSize=\"12px\" bold color=\"textSubtle\" textTransform=\"uppercase\" mb=\"20px\">\n            {t('%symbol% per $1,000', { symbol: earningTokenSymbol })}\n          </Text>\n        </GridItem>\n        {/* 1 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 1 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand1D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand1D}</Text>\n        </GridItem>\n        {/* 7 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 7 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({ amountEarned: tokenEarnedPerThousand7D, amountInvested: oneThousandDollarsWorthOfToken }).toFixed(\n              roundingDecimals,\n            )}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand7D}</Text>\n        </GridItem>\n        {/* 30 day row */}\n        <GridItem>\n          <Text>{t('%num%d', { num: 30 })}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand30D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand30D}</Text>\n        </GridItem>\n        {/* 365 day / APY row */}\n        <GridItem>\n          <Text>{t('365d(APY)')}</Text>\n        </GridItem>\n        <GridItem>\n          <Text>\n            {getRoi({\n              amountEarned: tokenEarnedPerThousand365D,\n              amountInvested: oneThousandDollarsWorthOfToken,\n            }).toFixed(roundingDecimals)}\n            %\n          </Text>\n        </GridItem>\n        <GridItem>\n          <Text>{tokenEarnedPerThousand365D}</Text>\n        </GridItem>\n      </Grid>\n      <Box mb=\"28px\" maxWidth=\"280px\">\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {t(\n            'Calculated based on current rates. Compounding %freq%x daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.',\n            { freq: compoundFrequency.toLocaleString() },\n          )}\n        </Text>\n        {performanceFee > 0 && (\n          <Text mt=\"14px\" fontSize=\"12px\" color=\"textSubtle\">\n            {t('All estimated rates take into account this pool’s %fee%% performance fee', { fee: performanceFee })}\n          </Text>\n        )}\n      </Box>\n      <Flex justifyContent=\"center\">\n        <LinkExternal href={linkHref}>{linkLabel}</LinkExternal>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default ApyCalculatorModal\n","import { useEffect, useRef } from 'react'\n\n/**\n * Returns the previous value of the given value\n *\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\n */\nconst usePreviousValue = (value: any) => {\n  const ref = useRef()\n\n  useEffect(() => {\n    ref.current = value\n  })\n\n  return ref.current\n}\n\nexport default usePreviousValue\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = Math.abs(seconds)\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box } from '@pancakeswap/uikit'\nimport Container from '../layout/Container'\n\nconst Outer = styled(Box)<{ background?: string }>`\n  background: ${({ theme, background }) => background || theme.colors.gradients.bubblegum};\n`\n\nconst Inner = styled(Container)`\n  padding-top: 32px;\n  padding-bottom: 32px;\n`\n\nconst PageHeader: React.FC<{ background?: string }> = ({ background, children, ...props }) => (\n  <Outer background={background} {...props}>\n    <Inner>{children}</Inner>\n  </Outer>\n)\n\nexport default PageHeader\n","import { configureStore } from '@reduxjs/toolkit'\nimport { useDispatch } from 'react-redux'\nimport farmsReducer from './farms'\nimport poolsReducer from './pools'\nimport pricesReducer from './prices'\nimport predictionsReducer from './predictions'\nimport profileReducer from './profile'\nimport teamsReducer from './teams'\nimport achievementsReducer from './achievements'\nimport blockReducer from './block'\nimport collectiblesReducer from './collectibles'\n\nconst store = configureStore({\n  devTools: process.env.NODE_ENV !== 'production',\n  reducer: {\n    achievements: achievementsReducer,\n    block: blockReducer,\n    farms: farmsReducer,\n    pools: poolsReducer,\n    prices: pricesReducer,\n    predictions: predictionsReducer,\n    profile: profileReducer,\n    teams: teamsReducer,\n    collectibles: collectiblesReducer,\n  },\n})\n\n/**\n * @see https://redux-toolkit.js.org/usage/usage-with-typescript#getting-the-dispatch-type\n */\nexport type AppDispatch = typeof store.dispatch\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\n\nexport default store\n","const tokens = {\n  bnb: {\n    symbol: 'BNB',\n    projectLink: 'https://www.binance.com/',\n  },\n  cake: {\n    symbol: 'TENDIE',\n    address: {\n      56: '0x9853A30C69474BeD37595F9B149ad634b5c323d9',\n      97: '0xc2a87b2C7f0bd461C43aA0aAe684ec837FcFfAdd',\n    },\n    decimals: 18,\n    projectLink: 'https://tendieswap.org/',\n  },\n  syrup: {\n    symbol: 'SPICYTENDIE',\n    address: {\n      56: '0x347757D2B7a0bAeC1A06720487870b1fE38e34A1',\n      97: '0x4CC9F0748274278310f7CDbaf0CE9A9ed953F85f',\n    },\n    decimals: 18,\n    projectLink: 'https://tendieswap.org/',\n  },\n  txl: {\n    symbol: 'TXL',\n    address: {\n      56: '0x1ffd0b47127fdd4097e54521c9e2c7f0d66aafc5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tixl.org/',\n  },\n  cos: {\n    symbol: 'COS',\n    address: {\n      56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.contentos.io/',\n  },\n  bunny: {\n    symbol: 'BUNNY',\n    address: {\n      56: '0xc9849e6fdb743d08faee3e34dd2d1bc69ea11a51',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakebunny.finance/',\n  },\n  alice: {\n    symbol: 'ALICE',\n    address: {\n      56: '0xac51066d7bec65dc4589368da368b212745d63e8',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.myneighboralice.com/',\n  },\n  for: {\n    symbol: 'FOR',\n    address: {\n      56: '0x658A109C5900BC6d2357c87549B651670E5b0539',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.for.tube/home',\n  },\n  bux: {\n    symbol: 'BUX',\n    address: {\n      56: '0x211ffbe424b90e25a15531ca322adf1559779e45',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://getbux.com/bux-crypto/',\n  },\n  nuls: {\n    symbol: 'NULS',\n    address: {\n      56: '0x8cd6e29d3686d24d3c2018cee54621ea0f89313b',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.nuls.io/',\n  },\n  belt: {\n    symbol: 'BELT',\n    address: {\n      56: '0xE0e514c71282b6f4e823703a39374Cf58dc3eA4f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beta.belt.fi/',\n  },\n  ramp: {\n    symbol: 'RAMP',\n    address: {\n      56: '0x8519ea49c997f50ceffa444d240fb655e89248aa',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://rampdefi.com/',\n  },\n  bfi: {\n    symbol: 'BFI',\n    address: {\n      56: '0x81859801b01764d4f0fa5e64729f5a6c3b91435b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bearn.fi/',\n  },\n  dexe: {\n    symbol: 'DEXE',\n    address: {\n      56: '0x039cb485212f996a9dbb85a9a75d898f94d38da6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dexe.network/',\n  },\n  bel: {\n    symbol: 'BEL',\n    address: {\n      56: '0x8443f091997f06a61670b735ed92734f5628692f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bella.fi/',\n  },\n  tpt: {\n    symbol: 'TPT',\n    address: {\n      56: '0xeca41281c24451168a37211f0bc2b8645af45092',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://www.tokenpocket.pro/',\n  },\n  watch: {\n    symbol: 'WATCH',\n    address: {\n      56: '0x7a9f28eb62c791422aa23ceae1da9c847cbec9b0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://yieldwatch.net/',\n  },\n  xmark: {\n    symbol: 'xMARK',\n    address: {\n      56: '0x26a5dfab467d4f58fb266648cae769503cec9580',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://benchmarkprotocol.finance/',\n  },\n  bmxx: {\n    symbol: 'bMXX',\n    address: {\n      56: '0x4131b87f74415190425ccd873048c708f8005823',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://multiplier.finance/',\n  },\n  iotx: {\n    symbol: 'IOTX',\n    address: {\n      56: '0x9678e42cebeb63f23197d726b29b1cb20d0064e5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://iotex.io/',\n  },\n  bor: {\n    symbol: 'BOR',\n    address: {\n      56: '0x92d7756c60dcfd4c689290e8a9f4d263b3b32241',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.boringdao.com/',\n  },\n  bopen: {\n    symbol: 'bOPEN',\n    address: {\n      56: '0xf35262a9d427f96d2437379ef090db986eae5d42',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://opendao.io/',\n  },\n  dodo: {\n    symbol: 'DODO',\n    address: {\n      56: '0x67ee3cb086f8a16f34bee3ca72fad36f7db929e2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dodoex.io/',\n  },\n  swingby: {\n    symbol: 'SWINGBY',\n    address: {\n      56: '0x71de20e0c4616e7fcbfdd3f875d568492cbe4739',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swingby.network/',\n  },\n  bry: {\n    symbol: 'BRY',\n    address: {\n      56: '0xf859bf77cbe8699013d6dbc7c2b926aaf307f830',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://berrydata.co/',\n  },\n  zee: {\n    symbol: 'ZEE',\n    address: {\n      56: '0x44754455564474a89358b2c2265883df993b12f0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://zeroswap.io/',\n  },\n  swgb: {\n    symbol: 'SWGb',\n    address: {\n      56: '0xe40255c5d7fa7ceec5120408c78c787cecb4cfdb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swirgepay.com/',\n  },\n  sfp: {\n    symbol: 'SFP',\n    address: {\n      56: '0xd41fdb03ba84762dd66a0af1a6c8540ff1ba5dfb',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.safepal.io/',\n  },\n  lina: {\n    symbol: 'LINA',\n    address: {\n      56: '0x762539b45a1dcce3d36d080f74d1aed37844b878',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://linear.finance/',\n  },\n  lit: {\n    symbol: 'LIT',\n    address: {\n      56: '0xb59490ab09a0f526cc7305822ac65f2ab12f9723',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.litentry.com/',\n  },\n  hget: {\n    symbol: 'HGET',\n    address: {\n      56: '0xc7d8d35eba58a0935ff2d5a33df105dd9f071731',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.hedget.com/',\n  },\n  bdo: {\n    symbol: 'BDO',\n    address: {\n      56: '0x190b589cf9fb8ddeabbfeae36a813ffb2a702454',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bdollar.fi/',\n  },\n  egld: {\n    symbol: 'EGLD',\n    address: {\n      56: '0xbf7c81fff98bbe61b40ed186e4afd6ddd01337fe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://elrond.com/',\n  },\n  ust: {\n    symbol: 'UST',\n    address: {\n      56: '0x23396cf899ca06c4472205fc903bdb4de249d6fc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  wsote: {\n    symbol: 'wSOTE',\n    address: {\n      56: '0x541e619858737031a1244a5d0cd47e5ef480342c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://soteria.finance/#/',\n  },\n  front: {\n    symbol: 'FRONT',\n    address: {\n      56: '0x928e55dab735aa8260af3cedada18b5f70c72f1b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://frontier.xyz/',\n  },\n  helmet: {\n    symbol: 'Helmet',\n    address: {\n      56: '0x948d2a81086a075b3130bac19e4c6dee1d2e3fe8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.helmet.insure/',\n  },\n  btcst: {\n    symbol: 'BTCST',\n    address: {\n      56: '0x78650b139471520656b9e7aa7a5e9276814a38e9',\n      97: '',\n    },\n    decimals: 17,\n    projectLink: 'https://www.1-b.tc/',\n  },\n  bscx: {\n    symbol: 'BSCX',\n    address: {\n      56: '0x5ac52ee5b2a633895292ff6d8a89bb9190451587',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bscex.org/',\n  },\n  ten: {\n    symbol: 'TEN',\n    address: {\n      56: '0xdff8cb622790b7f92686c722b02cab55592f152c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tenet.farm/',\n  },\n  balbt: {\n    symbol: 'bALBT',\n    address: {\n      56: '0x72faa679e1008ad8382959ff48e392042a8b06f7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://allianceblock.io/',\n  },\n  asr: {\n    symbol: 'ASR',\n    address: {\n      56: '0x80d5f92c2c8c682070c95495313ddb680b267320',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  atm: {\n    symbol: 'ATM',\n    address: {\n      56: '0x25e9d05365c867e59c1904e7463af9f312296f9e',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  og: {\n    symbol: 'OG',\n    address: {\n      56: '0xf05e45ad22150677a017fbd94b84fbb63dc9b44c',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  reef: {\n    symbol: 'REEF',\n    address: {\n      56: '0xf21768ccbc73ea5b6fd3c687208a7c2def2d966e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://reef.finance/',\n  },\n  ditto: {\n    symbol: 'DITTO',\n    address: {\n      56: '0x233d91a0713155003fc4dce0afa871b508b3b715',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://ditto.money/',\n  },\n  juv: {\n    symbol: 'JUV',\n    address: {\n      56: '0xc40c9a843e1c6d01b7578284a9028854f6683b1b',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  psg: {\n    symbol: 'PSG',\n    address: {\n      56: '0xbc5609612b7c44bef426de600b5fd1379db2ecf1',\n      97: '',\n    },\n    decimals: 2,\n    projectLink: 'https://www.chiliz.com',\n  },\n  vai: {\n    symbol: 'VAI',\n    address: {\n      56: '0x4bd17003473389a42daf6a0a729f6fdb328bbbd7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  wbnb: {\n    symbol: 'wBNB',\n    address: {\n      56: '0xbb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c',\n      97: '0xae13d989dac2f0debff460ac112a837c89baa7cd',\n    },\n    decimals: 18,\n    projectLink: 'https://pancakeswap.finance/',\n  },\n  blink: {\n    symbol: 'BLINK',\n    address: {\n      56: '0x63870a18b6e42b01ef1ad8a2302ef50b7132054f',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://blink.wink.org',\n  },\n  unfi: {\n    symbol: 'UNFI',\n    address: {\n      56: '0x728c5bac3c3e370e372fc4671f9ef6916b814d8b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unifiprotocol.com',\n  },\n  twt: {\n    symbol: 'TWT',\n    address: {\n      56: '0x4b0f1812e5df2a09796481ff14017e6005508003',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://trustwallet.com/',\n  },\n  hard: {\n    symbol: 'HARD',\n    address: {\n      56: '0xf79037f6f6be66832de4e7516be52826bc3cbcc4',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://hard.kava.io',\n  },\n  broobee: {\n    symbol: 'bROOBEE',\n    address: {\n      56: '0xe64f5cb844946c1f102bd25bbd87a5ab4ae89fbe',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://roobee.io/',\n  },\n  stax: {\n    symbol: 'STAX',\n    address: {\n      56: '0x0da6ed8b13214ff28e9ca979dd37439e8a88f6c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://stablexswap.com/',\n  },\n  nar: {\n    symbol: 'NAR',\n    address: {\n      56: '0xa1303e6199b319a891b79685f0537d289af1fc83',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://narwhalswap.org/',\n  },\n  nya: {\n    symbol: 'NYA',\n    address: {\n      56: '0xbfa0841f7a90c4ce6643f651756ee340991f99d5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nyanswop.org/',\n  },\n  ctk: {\n    symbol: 'CTK',\n    address: {\n      56: '0xa8c2b8eec3d368c0253ad3dae65a5f2bbb89c929',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://www.certik.foundation/',\n  },\n  inj: {\n    symbol: 'INJ',\n    address: {\n      56: '0xa2b726b1145a4773f68593cf171187d8ebe4d495',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://injectiveprotocol.com/',\n  },\n  sxp: {\n    symbol: 'SXP',\n    address: {\n      56: '0x47bead2563dcbf3bf2c9407fea4dc236faba485a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://swipe.io/',\n  },\n  alpha: {\n    symbol: 'ALPHA',\n    address: {\n      56: '0xa1faa113cbe53436df28ff0aee54275c13b40975',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://alphafinance.io/',\n  },\n  xvs: {\n    symbol: 'XVS',\n    address: {\n      56: '0xcf6bb5389c92bdda8a3747ddb454cb7a64626c63',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://venus.io/',\n  },\n  sushi: {\n    symbol: 'SUSHI',\n    address: {\n      56: '0x947950bcc74888a40ffa2593c5798f11fc9124c4',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://sushi.com/',\n  },\n  comp: {\n    symbol: 'COMP',\n    address: {\n      56: '0x52ce071bd9b1c4b00a0b92d298c512478cad67e8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://compound.finance/',\n  },\n  bifi: {\n    symbol: 'BIFI',\n    address: {\n      56: '0xca3f508b8e4dd382ee878a314789373d80a5190a',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://beefy.finance/',\n  },\n  dusk: {\n    symbol: 'DUSK',\n    address: {\n      56: '0xb2bd0749dbe21f623d9baba856d3b0f0e1bfec9c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusk.network/',\n  },\n  busd: {\n    symbol: 'BUSD',\n    address: {\n      56: '0xe9e7cea3dedca5984780bafc599bd69add087d56',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.paxos.com/busd/',\n  },\n  eth: {\n    symbol: 'ETH',\n    address: {\n      56: '0x2170ed0880ac9a755fd29b2688956bd959f933f8',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/',\n  },\n  beth: {\n    symbol: 'BETH',\n    address: {\n      56: '0x250632378e573c6be1ac2f97fcdf00515d0aa91b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ethereum.org/en/eth2/beacon-chain/',\n  },\n  mamzn: {\n    symbol: 'mAMZN',\n    address: {\n      56: '0x3947B992DC0147D2D89dF0392213781b04B25075',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mgoogl: {\n    symbol: 'mGOOGL',\n    address: {\n      56: '0x62D71B23bF15218C7d2D7E48DBbD9e9c650B173f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mnflx: {\n    symbol: 'mNFLX',\n    address: {\n      56: '0xa04F060077D90Fe2647B61e4dA4aD1F97d6649dc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  mtsla: {\n    symbol: 'mTSLA',\n    address: {\n      56: '0xF215A127A196e3988C09d052e16BcFD365Cd7AA3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  ltc: {\n    symbol: 'LTC',\n    address: {\n      56: '0x4338665cbb7b2485a8855a139b75d5e34ab0db94',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://litecoin.org/',\n  },\n  usdc: {\n    symbol: 'USDC',\n    address: {\n      56: '0x8ac76a51cc950d9822d68b83fe1ad97b32cd580d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.centre.io/usdc',\n  },\n  dai: {\n    symbol: 'DAI',\n    address: {\n      56: '0x1af3f329e8be154074d8769d1ffa4ee058b1dbc3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'http://www.makerdao.com/',\n  },\n  ada: {\n    symbol: 'ADA',\n    address: {\n      56: '0x3ee2200efb3400fabb9aacf31297cbdd1d435d47',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.cardano.org/',\n  },\n  band: {\n    symbol: 'BAND',\n    address: {\n      56: '0xad6caeb32cd2c308980a548bd0bc5aa4306c6c18',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bandprotocol.com/',\n  },\n  dot: {\n    symbol: 'DOT',\n    address: {\n      56: '0x7083609fce4d1d8dc0c979aab8c869ea2c873402',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://polkadot.network/',\n  },\n  eos: {\n    symbol: 'EOS',\n    address: {\n      56: '0x56b6fb708fc5732dec1afc8d8556423a2edccbd6',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://eos.io/',\n  },\n  link: {\n    symbol: 'LINK',\n    address: {\n      56: '0xf8a0bf9cf54bb92f17374d9e9a321e6a111a51bd',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://chain.link/',\n  },\n  usdt: {\n    symbol: 'USDT',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x55d398326f99059ff775485246999027b3197955',\n    },\n    decimals: 18,\n    projectLink: 'https://tether.to/',\n  },\n  btcb: {\n    symbol: 'BTCB',\n    address: {\n      56: '0x7130d2a12b9bcbfae4f2634d864a1ee1ce3ead9c',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://bitcoin.org/',\n  },\n  xrp: {\n    symbol: 'XRP',\n    address: {\n      56: '0x1d2f0da169ceb9fc7b3144628db156f3f6c60dbe',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://ripple.com/xrp/',\n  },\n  atom: {\n    symbol: 'ATOM',\n    address: {\n      56: '0x0eb3a705fc54725037cc9e008bdede697f62f335',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://cosmos.network/',\n  },\n  yfii: {\n    symbol: 'YFII',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x7f70642d88cf1c4a3a7abb072b53b929b653eda5',\n    },\n    decimals: 18,\n    projectLink: 'https://dfi.money/#/',\n  },\n  xtz: {\n    symbol: 'XTZ',\n    address: {\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      56: '0x16939ef78684453bfdfb47825f8a5f714f12623a',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tezos.com/',\n  },\n  bch: {\n    symbol: 'BCH',\n    address: {\n      56: '0x8ff795a6f4d97e7887c79bea79aba5cc76444adf',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'http://bch.info/',\n  },\n  yfi: {\n    symbol: 'YFI',\n    address: {\n      56: '0x88f1a5ae2a3bf98aeaf342d26b30a79438c9142e',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://yearn.finance/',\n  },\n  uni: {\n    symbol: 'UNI',\n    address: {\n      56: '0xbf5140a22578168fd562dccf235e5d43a02ce9b1',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://uniswap.org/',\n  },\n  fil: {\n    symbol: 'FIL',\n    address: {\n      56: '0x0d8ce2a99bb6e3b7db580ed848240e4a0f9ae153',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://filecoin.io/',\n  },\n  bake: {\n    symbol: 'BAKE',\n    address: {\n      56: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bakeryswap.org/',\n  },\n  burger: {\n    symbol: 'BURGER',\n    address: {\n      56: '0xae9269f27437f0fcbc232d39ec814844a51d6b8f',\n      97: '0xE02dF9e3e622DeBdD69fb838bB799E3F168902c5',\n    },\n    decimals: 18,\n    projectLink: 'https://burgerswap.org/',\n  },\n  bdigg: {\n    symbol: 'bDIGG',\n    address: {\n      56: '0x5986d5c77c65e5801a5caa4fae80089f870a71da',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  bbadger: {\n    symbol: 'bBadger',\n    address: {\n      56: '0x1f7216fdb338247512ec99715587bb97bbf96eae',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://badger.finance/',\n  },\n  trade: {\n    symbol: 'TRADE',\n    address: {\n      56: '0x7af173f350d916358af3e218bdf2178494beb748',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://unitrade.app/',\n  },\n  pnt: {\n    symbol: 'PNT',\n    address: {\n      56: '0xdaacb0ab6fb34d24e8a67bfa14bf4d95d4c7af92',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  mir: {\n    symbol: 'MIR',\n    address: {\n      56: '0x5b6dcf557e2abe2323c48445e8cc948910d8c2c9',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  pbtc: {\n    symbol: 'pBTC',\n    address: {\n      56: '0xed28a457a5a76596ac48d87c0f577020f6ea1c4c',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ptokens.io/',\n  },\n  lto: {\n    symbol: 'LTO',\n    address: {\n      56: '0x857b222fc79e1cbbf8ca5f78cb133d1b7cf34bbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ltonetwork.com/',\n  },\n  pcws: {\n    symbol: 'pCWS',\n    address: {\n      56: '0xbcf39f0edda668c58371e519af37ca705f2bfcbd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://game.seascape.network/',\n  },\n  zil: {\n    symbol: 'ZIL',\n    address: {\n      56: '0xb86abcb37c3a4b64f74f59301aff131a1becc787',\n      97: '',\n    },\n    decimals: 12,\n    projectLink: 'https://www.zilliqa.com/',\n  },\n  lien: {\n    symbol: 'LIEN',\n    address: {\n      56: '0x5d684adaf3fcfe9cfb5cede3abf02f0cdd1012e3',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://lien.finance/',\n  },\n  swth: {\n    symbol: 'SWTH',\n    address: {\n      56: '0x250b211EE44459dAd5Cd3bCa803dD6a7EcB5d46C',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://switcheo.network/',\n  },\n  dft: {\n    symbol: 'DFT',\n    address: {\n      56: '0x42712dF5009c20fee340B245b510c0395896cF6e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.dfuture.com/home',\n  },\n  gum: {\n    symbol: 'GUM',\n    address: {\n      56: '0xc53708664b99DF348dd27C3Ac0759d2DA9c40462',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://gourmetgalaxy.io/',\n  },\n  dego: {\n    symbol: 'DEGO',\n    address: {\n      56: '0x3fda9383a84c05ec8f7630fe10adf1fac13241cc',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.dego.finance/home',\n  },\n  nrv: {\n    symbol: 'NRV',\n    address: {\n      56: '0x42f6f551ae042cbe50c739158b4f0cac0edb9096',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://nerve.fi/',\n  },\n  easy: {\n    symbol: 'EASY',\n    address: {\n      56: '0x7c17c8bed8d14bacce824d020f994f4880d6ab3b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://easyfi.network/',\n  },\n  oddz: {\n    symbol: 'ODDZ',\n    address: {\n      56: '0xcd40f2670cf58720b694968698a5514e924f742d',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://oddz.fi/',\n  },\n  hoo: {\n    symbol: 'HOO',\n    address: {\n      56: '0xe1d1f66215998786110ba0102ef558b22224c016',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://hoo.com/',\n  },\n  apys: {\n    symbol: 'APYS',\n    address: {\n      56: '0x37dfACfaeDA801437Ff648A1559d73f4C40aAcb7',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://apyswap.com/',\n  },\n  bondly: {\n    symbol: 'BONDLY',\n    address: {\n      56: '0x96058f8c3e16576d9bd68766f3836d9a33158f89',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bondly.finance/',\n  },\n  tko: {\n    symbol: 'TKO',\n    address: {\n      56: '0x9f589e3eabe42ebc94a44727b3f3531c0c877809',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.tokocrypto.com/',\n  },\n  itam: {\n    symbol: 'ITAM',\n    address: {\n      56: '0x04c747b40be4d535fc83d09939fb0f626f32800b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://itam.network/',\n  },\n  arpa: {\n    symbol: 'ARPA',\n    address: {\n      56: '0x6f769e65c14ebd1f68817f5f1dcdb61cfa2d6f7e',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://arpachain.io/',\n  },\n  eps: {\n    symbol: 'EPS',\n    address: {\n      56: '0xa7f552078dcc247c2684336020c03648500c6d9f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://ellipsis.finance/',\n  },\n  jgn: {\n    symbol: 'JGN',\n    address: {\n      56: '0xc13b7a43223bb9bf4b69bd68ab20ca1b79d81c75',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://jgndefi.com/',\n  },\n  tlm: {\n    symbol: 'TLM',\n    address: {\n      56: '0x2222227e22102fe3322098e4cbfe18cfebd57c95',\n      97: '',\n    },\n    decimals: 4,\n    projectLink: 'https://alienworlds.io/',\n  },\n  perl: {\n    symbol: 'PERL',\n    address: {\n      56: '0x0f9e4d49f25de22c2202af916b681fbb3790497b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://perlinx.finance/',\n  },\n  alpa: {\n    symbol: 'ALPA',\n    address: {\n      56: '0xc5e6689c9c8b02be7c49912ef19e79cf24977f03',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://bsc.alpaca.city/',\n  },\n  hzn: {\n    symbol: 'HZN',\n    address: {\n      56: '0xc0eff7749b125444953ef89682201fb8c6a917cd',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://horizonprotocol.com/',\n  },\n  suter: {\n    symbol: 'SUTER',\n    address: {\n      56: '0x4cfbbdfbd5bf0814472ff35c72717bd095ada055',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://shield.suterusu.io/',\n  },\n  cgg: {\n    symbol: 'CGG',\n    address: {\n      56: '0x1613957159e9b0ac6c80e824f7eea748a32a0ae2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chainguardians.io/',\n  },\n  mix: {\n    symbol: 'MIX',\n    address: {\n      56: '0xB67754f5b4C704A24d2db68e661b2875a4dDD197',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mixie.chainguardians.io/',\n  },\n  hakka: {\n    symbol: 'HAKKA',\n    address: {\n      56: '0x1d1eb8e8293222e1a29d2c0e4ce6c0acfd89aaac',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hakka.finance/',\n  },\n  xed: {\n    symbol: 'XED',\n    address: {\n      56: '0x5621b5a3f4a8008c4ccdd1b942b121c8b1944f1f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.exeedme.com/',\n  },\n  τbtc: {\n    symbol: 'τBTC',\n    address: {\n      56: '0x2cd1075682b0fccaadd0ca629e138e64015ba11c',\n      97: '',\n    },\n    decimals: 9,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  alpaca: {\n    symbol: 'ALPACA',\n    address: {\n      56: '0x8f0528ce5ef7b51152a59745befdd91d97091d2f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.alpacafinance.org/',\n  },\n  dfd: {\n    symbol: 'DFD',\n    address: {\n      56: '0x9899a98b222fcb2f3dbee7df45d943093a4ff9ff',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://dusd.finance/',\n  },\n  lmt: {\n    symbol: 'LMT',\n    address: {\n      56: '0x9617857e191354dbea0b714d78bc59e57c411087',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://lympo.io/lmt/',\n  },\n  btt: {\n    symbol: 'BTT',\n    address: {\n      56: '0x8595f9da7b868b1822194faed312235e43007b49',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bittorrent.com/',\n  },\n  trx: {\n    symbol: 'TRX',\n    address: {\n      56: '0x85eac5ac2f758618dfa09bdbe0cf174e7d574d5b',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://tron.network/',\n  },\n  win: {\n    symbol: 'WIN',\n    address: {\n      56: '0xaef0d72a118ce24fee3cd1d43d383897d05b4e99',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://winklink.org/',\n  },\n  mcoin: {\n    symbol: 'mCOIN',\n    address: {\n      56: '0x49022089e78a8d46ec87a3af86a1db6c189afa6f',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mirror.finance/',\n  },\n  math: {\n    symbol: 'MATH',\n    address: {\n      56: '0xf218184af829cf2b0019f8e6f0b2423498a36983',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://mathwallet.org/',\n  },\n  kun: {\n    symbol: 'KUN',\n    address: {\n      56: '0x1A2fb0Af670D0234c2857FaD35b789F8Cb725584',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  qsd: {\n    symbol: 'QSD',\n    address: {\n      56: '0x07AaA29E63FFEB2EBf59B33eE61437E1a91A3bb2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://chemix.io/home',\n  },\n  hyfi: {\n    symbol: 'HYFI',\n    address: {\n      56: '0x9a319b959e33369C5eaA494a770117eE3e585318',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://hyfi.pro/#/',\n  },\n  oin: {\n    symbol: 'OIN',\n    address: {\n      56: '0x658E64FFcF40D240A43D52CA9342140316Ae44fA',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://oin.finance/',\n  },\n  doge: {\n    symbol: 'DOGE',\n    address: {\n      56: '0xba2ae424d960c26247dd6c32edc70b295c744c43',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://dogecoin.com/',\n  },\n  fine: {\n    symbol: 'FINE',\n    address: {\n      56: '0x4e6415a5727ea08aae4580057187923aec331227',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://refinable.com/',\n  },\n  one: {\n    symbol: 'ONE',\n    address: {\n      56: '0x04baf95fd4c52fd09a56d840baee0ab8d7357bf0',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bigone.com/',\n  },\n  pmon: {\n    symbol: 'PMON',\n    address: {\n      56: '0x1796ae0b0fa4862485106a0de9b654eFE301D0b2',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://polkamon.com/',\n  },\n  hotcross: {\n    symbol: 'HOTCROSS',\n    address: {\n      56: '0x4FA7163E153419E0E1064e418dd7A99314Ed27b6',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.hotcross.com/',\n  },\n  τdoge: {\n    symbol: 'τDOGE',\n    address: {\n      56: '0xe550a593d09fbc8dcd557b5c88cea6946a8b404a',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://www.btcst.finance/',\n  },\n  btr: {\n    symbol: 'BTR',\n    address: {\n      56: '0x5a16E8cE8cA316407c6E6307095dc9540a8D62B3',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.bitrue.com/',\n  },\n  ubxt: {\n    symbol: 'UBXT',\n    address: {\n      56: '0xbbeb90cfb6fafa1f69aa130b7341089abeef5811',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://upbots.com/',\n  },\n  wmass: {\n    symbol: 'WMASS',\n    address: {\n      56: '0x7e396bfc8a2f84748701167c2d622f041a1d7a17',\n      97: '',\n    },\n    decimals: 8,\n    projectLink: 'https://massnet.org/en/',\n  },\n  rfox: {\n    symbol: 'RFOX',\n    address: {\n      56: '0x0a3a21356793b49154fd3bbe91cbc2a16c0457f5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://www.redfoxlabs.io/',\n  },\n  xend: {\n    symbol: 'XEND',\n    address: {\n      56: '0x4a080377f83D669D7bB83B3184a8A5E61B500608',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://xend.finance/',\n  },\n  cyc: {\n    symbol: 'CYC',\n    address: {\n      56: '0x810ee35443639348adbbc467b33310d2ab43c168',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://cyclone.xyz/',\n  },\n  chr: {\n    symbol: 'CHR',\n    address: {\n      56: '0xf9CeC8d50f6c8ad3Fb6dcCEC577e05aA32B224FE',\n      97: '',\n    },\n    decimals: 6,\n    projectLink: 'https://chromia.com/',\n  },\n  kalm: {\n    symbol: 'KALM',\n    address: {\n      56: '0x4BA0057f784858a48fe351445C672FF2a3d43515',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://kalmar.io/',\n  },\n  deri: {\n    symbol: 'DERI',\n    address: {\n      56: '0xe60eaf5A997DFAe83739e035b005A33AfdCc6df5',\n      97: '',\n    },\n    decimals: 18,\n    projectLink: 'https://deri.finance/#/index',\n  },\n}\n\nexport default tokens\n","export { fetchFarmsPublicDataAsync, fetchFarmUserDataAsync } from './farms'\nexport {\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchCakeVaultPublicData,\n  fetchCakeVaultUserData,\n  fetchCakeVaultFees,\n  updateUserAllowance,\n  updateUserBalance,\n  updateUserPendingReward,\n  updateUserStakedBalance,\n} from './pools'\nexport { profileFetchStart, profileFetchSucceeded, profileFetchFailed } from './profile'\nexport { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } from './teams'\nexport { setBlock } from './block'\n","import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { useWeb3React } from '@web3-react/core'\nimport { getWeb3NoAccount } from 'utils/web3'\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the provider change\n */\nconst useWeb3 = () => {\n  const { library } = useWeb3React()\n  const refEth = useRef(library)\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\n\n  useEffect(() => {\n    if (library !== refEth.current) {\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\n      refEth.current = library\n    }\n  }, [library])\n\n  return web3\n}\n\nexport default useWeb3\n","import BigNumber from 'bignumber.js'\nimport { DEFAULT_GAS, DEFAULT_TOKEN_DECIMAL } from 'config'\nimport { ethers } from 'ethers'\nimport { BIG_TEN, BIG_ZERO } from './bigNumber'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS, value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n      .send({ from: account, gas: DEFAULT_GAS })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: DEFAULT_GAS })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: DEFAULT_GAS })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: DEFAULT_GAS, value: BIG_ZERO })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import BigNumber from 'bignumber.js'\nimport poolsConfig from 'config/constants/pools'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getWbnbAddress } from 'utils/addressHelpers'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { getSouschefV2Contract } from 'utils/contractHelpers'\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig.filter((p) => p.sousId !== 0)\n  const callsStartBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.contractAddress),\n      name: 'bonusEndBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakePoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakePoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsTotalStaking = async () => {\n  const nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\n  const bnbPool = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\n\n  const callsNonBnbPools = nonBnbPools.map((poolConfig) => {\n    return {\n      address: getAddress(poolConfig.stakingToken.address),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((poolConfig) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [getAddress(poolConfig.contractAddress)],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(cakeABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n\nexport const fetchPoolStakingLimit = async (sousId: number): Promise<BigNumber> => {\n  try {\n    const sousContract = getSouschefV2Contract(sousId)\n    const stakingLimit = await sousContract.methods.poolLimitPerUser().call()\n    return new BigNumber(stakingLimit)\n  } catch (error) {\n    return BIG_ZERO\n  }\n}\n\nexport const fetchPoolsStakingLimits = async (\n  poolsWithStakingLimit: number[],\n): Promise<{ [key: string]: BigNumber }> => {\n  const validPools = poolsConfig\n    .filter((p) => p.stakingToken.symbol !== 'BNB' && !p.isFinished)\n    .filter((p) => !poolsWithStakingLimit.includes(p.sousId))\n\n  // Get the staking limit for each valid pool\n  // Note: We cannot batch the calls via multicall because V1 pools do not have \"poolLimitPerUser\" and will throw an error\n  const stakingLimitPromises = validPools.map((validPool) => fetchPoolStakingLimit(validPool.sousId))\n  const stakingLimits = await Promise.all(stakingLimitPromises)\n\n  return stakingLimits.reduce((accum, stakingLimit, index) => {\n    return {\n      ...accum,\n      [validPools[index].sousId]: stakingLimit,\n    }\n  }, {})\n}\n","import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/pools'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport multicall from 'utils/multicall'\nimport { getAddress, getMasterChefAddress } from 'utils/addressHelpers'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BNB')\nconst bnbPools = poolsConfig.filter((p) => p.stakingToken.symbol === 'BNB')\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0)\nconst web3 = getWeb3NoAccount()\nconst masterChefContract = new web3.eth.Contract(masterChefABI as unknown as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'allowance',\n    params: [account, getAddress(p.contractAddress)],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserBalances = async (account) => {\n  // Non BNB pools\n  const calls = nonBnbPools.map((p) => ({\n    address: getAddress(p.stakingToken.address),\n    name: 'balanceOf',\n    params: [account],\n  }))\n  const tokenBalancesRaw = await multicall(erc20ABI, calls)\n  const tokenBalances = nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\n    {},\n  )\n\n  // BNB pools\n  const bnbBalance = await web3.eth.getBalance(account)\n  const bnbBalances = bnbPools.reduce(\n    (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\n    {},\n  )\n\n  return { ...tokenBalances, ...bnbBalances }\n}\n\nexport const fetchUserStakeBalances = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'userInfo',\n    params: [account],\n  }))\n  const userInfo = await multicall(sousChefABI, calls)\n  const stakedBalances = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\n\n  return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\n}\n\nexport const fetchUserPendingRewards = async (account) => {\n  const calls = nonMasterPools.map((p) => ({\n    address: getAddress(p.contractAddress),\n    name: 'pendingReward',\n    params: [account],\n  }))\n  const res = await multicall(sousChefABI, calls)\n  const pendingRewards = nonMasterPools.reduce(\n    (acc, pool, index) => ({\n      ...acc,\n      [pool.sousId]: new BigNumber(res[index]).toJSON(),\n    }),\n    {},\n  )\n\n  // Cake / Cake pool\n  const pendingReward = await masterChefContract.methods.pendingCake('0', account).call()\n\n  return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\n}\n","import BigNumber from 'bignumber.js'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\nimport makeBatchRequest from 'utils/makeBatchRequest'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nexport const fetchPublicVaultData = async () => {\n  try {\n    const [sharePrice, shares, estimatedCakeBountyReward, totalPendingCakeHarvest] = await makeBatchRequest([\n      cakeVaultContract.methods.getPricePerFullShare().call,\n      cakeVaultContract.methods.totalShares().call,\n      cakeVaultContract.methods.calculateHarvestCakeRewards().call,\n      cakeVaultContract.methods.calculateTotalPendingCakeRewards().call,\n    ])\n    const totalSharesAsBigNumber = new BigNumber(shares as string)\n    const sharePriceAsBigNumber = new BigNumber(sharePrice as string)\n    const totalCakeInVaultEstimate = convertSharesToCake(totalSharesAsBigNumber, sharePriceAsBigNumber)\n    return {\n      totalShares: totalSharesAsBigNumber.toJSON(),\n      pricePerFullShare: sharePriceAsBigNumber.toJSON(),\n      totalCakeInVault: totalCakeInVaultEstimate.cakeAsBigNumber.toJSON(),\n      estimatedCakeBountyReward: new BigNumber(estimatedCakeBountyReward as string).toJSON(),\n      totalPendingCakeHarvest: new BigNumber(totalPendingCakeHarvest as string).toJSON(),\n    }\n  } catch (error) {\n    return {\n      totalShares: null,\n      pricePerFullShare: null,\n      totalCakeInVault: null,\n      estimatedCakeBountyReward: null,\n      totalPendingCakeHarvest: null,\n    }\n  }\n}\n\nexport const fetchVaultFees = async () => {\n  try {\n    const [performanceFee, callFee, withdrawalFee, withdrawalFeePeriod] = await makeBatchRequest([\n      cakeVaultContract.methods.performanceFee().call,\n      cakeVaultContract.methods.callFee().call,\n      cakeVaultContract.methods.withdrawFee().call,\n      cakeVaultContract.methods.withdrawFeePeriod().call,\n    ])\n    return {\n      performanceFee: parseInt(performanceFee as string, 10),\n      callFee: parseInt(callFee as string, 10),\n      withdrawalFee: parseInt(withdrawalFee as string, 10),\n      withdrawalFeePeriod: parseInt(withdrawalFeePeriod as string, 10),\n    }\n  } catch (error) {\n    return {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    }\n  }\n}\n\nexport default fetchPublicVaultData\n","import BigNumber from 'bignumber.js'\nimport { getCakeVaultContract } from 'utils/contractHelpers'\n\nconst cakeVaultContract = getCakeVaultContract()\n\nconst fetchVaultUser = async (account: string) => {\n  try {\n    const userContractResponse = await cakeVaultContract.methods.userInfo(account).call()\n    return {\n      isLoading: false,\n      userShares: new BigNumber(userContractResponse.shares).toJSON(),\n      lastDepositedTime: userContractResponse.lastDepositedTime as string,\n      lastUserActionTime: userContractResponse.lastUserActionTime as string,\n      cakeAtLastUserAction: new BigNumber(userContractResponse.cakeAtLastUserAction).toJSON(),\n    }\n  } catch (error) {\n    return {\n      isLoading: true,\n      userShares: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n      cakeAtLastUserAction: null,\n    }\n  }\n}\n\nexport default fetchVaultUser\n","/* eslint-disable no-param-reassign */\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport poolsConfig from 'config/constants/pools'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { PoolsState, Pool, CakeVault, VaultFees, VaultUser } from 'state/types'\nimport { fetchPoolsBlockLimits, fetchPoolsStakingLimits, fetchPoolsTotalStaking } from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { fetchPublicVaultData, fetchVaultFees } from './fetchVaultPublic'\nimport fetchVaultUser from './fetchVaultUser'\n\nconst initialState: PoolsState = {\n  data: [...poolsConfig],\n  cakeVault: {\n    totalShares: null,\n    pricePerFullShare: null,\n    totalCakeInVault: null,\n    estimatedCakeBountyReward: null,\n    totalPendingCakeHarvest: null,\n    fees: {\n      performanceFee: null,\n      callFee: null,\n      withdrawalFee: null,\n      withdrawalFeePeriod: null,\n    },\n    userData: {\n      isLoading: true,\n      userShares: null,\n      cakeAtLastUserAction: null,\n      lastDepositedTime: null,\n      lastUserActionTime: null,\n    },\n  },\n}\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = (currentBlock: number) => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStaking()\n\n  const liveData = poolsConfig.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const isPoolEndBlockExceeded = currentBlock > 0 && blockLimit ? currentBlock > Number(blockLimit.endBlock) : false\n    const isPoolFinished = pool.isFinished || isPoolEndBlockExceeded\n\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      isFinished: isPoolFinished,\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsStakingLimitsAsync = () => async (dispatch, getState) => {\n  const poolsWithStakingLimit = getState()\n    .pools.data.filter(({ stakingLimit }) => stakingLimit !== null && stakingLimit !== undefined)\n    .map((pool) => pool.sousId)\n\n  const stakingLimits = await fetchPoolsStakingLimits(poolsWithStakingLimit)\n\n  const stakingLimitData = poolsConfig.map((pool) => {\n    if (poolsWithStakingLimit.includes(pool.sousId)) {\n      return { sousId: pool.sousId }\n    }\n    const stakingLimit = stakingLimits[pool.sousId] || BIG_ZERO\n    return {\n      sousId: pool.sousId,\n      stakingLimit: stakingLimit.toJSON(),\n    }\n  })\n\n  dispatch(setPoolsPublicData(stakingLimitData))\n}\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    pendingReward: pendingRewards[pool.sousId],\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\nexport const updateUserAllowance = (sousId: number, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: number, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: number, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward = (sousId: number, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport const fetchCakeVaultPublicData = createAsyncThunk<CakeVault>('cakeVault/fetchPublicData', async () => {\n  const publicVaultInfo = await fetchPublicVaultData()\n  return publicVaultInfo\n})\n\nexport const fetchCakeVaultFees = createAsyncThunk<VaultFees>('cakeVault/fetchFees', async () => {\n  const vaultFees = await fetchVaultFees()\n  return vaultFees\n})\n\nexport const fetchCakeVaultUserData = createAsyncThunk<VaultUser, { account: string }>(\n  'cakeVault/fetchUser',\n  async ({ account }) => {\n    const userData = await fetchVaultUser(account)\n    return userData\n  },\n)\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n\n      if (index >= 0) {\n        state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n      }\n    },\n  },\n  extraReducers: (builder) => {\n    // Vault public data that updates frequently\n    builder.addCase(fetchCakeVaultPublicData.fulfilled, (state, action: PayloadAction<CakeVault>) => {\n      state.cakeVault = { ...state.cakeVault, ...action.payload }\n    })\n    // Vault fees\n    builder.addCase(fetchCakeVaultFees.fulfilled, (state, action: PayloadAction<VaultFees>) => {\n      const fees = action.payload\n      state.cakeVault = { ...state.cakeVault, fees }\n    })\n    // Vault user data\n    builder.addCase(fetchCakeVaultUserData.fulfilled, (state, action: PayloadAction<VaultUser>) => {\n      const userData = action.payload\n      userData.isLoading = false\n      state.cakeVault = { ...state.cakeVault, userData }\n    })\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\nexport default PoolsSlice.reducer\n","import { AbiItem } from 'web3-utils'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport { getMulticallAddress } from 'utils/addressHelpers'\n\ninterface Call {\n  address: string // Address of the contract\n  name: string // Function name on the contract (example: balanceOf)\n  params?: any[] // Function params\n}\n\nconst multicall = async (abi: any[], calls: Call[]) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n\n  const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\n  const { returnData } = await multi.methods.aggregate(calldata).call()\n  const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\n\n  return res\n}\n\nexport default multicall\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import tokens from './tokens'\nimport { PoolConfig, PoolCategory } from './types'\n\nconst pools: PoolConfig[] = [\n  {\n    sousId: 0,\n    stakingToken: tokens.cake,\n    earningToken: tokens.cake,\n    contractAddress: {\n      97: '',\n      56: '0x6dDb25ca46656767f8f2385D653992dC1cdb4470',\n    },\n    poolCategory: PoolCategory.CORE,\n    harvest: true,\n    tokenPerBlock: '10',\n    sortOrder: 1,\n    isFinished: false,\n  },\n]\n\nexport default pools\n","import BigNumber from 'bignumber.js'\nimport { CampaignType, FarmConfig, Nft, PoolConfig, Team } from 'config/constants/types'\n\nexport type TranslatableText =\n  | string\n  | {\n      key: string\n      data?: {\n        [key: string]: string | number\n      }\n    }\n\nexport interface Farm extends FarmConfig {\n  tokenAmountMc?: BigNumber\n  quoteTokenAmountMc?: BigNumber\n  tokenAmountTotal?: BigNumber\n  quoteTokenAmountTotal?: BigNumber\n  lpTotalInQuoteToken?: BigNumber\n  lpTotalSupply?: BigNumber\n  tokenPriceVsQuote?: BigNumber\n  poolWeight?: BigNumber\n  userData?: {\n    allowance: string\n    tokenBalance: string\n    stakedBalance: string\n    earnings: string\n  }\n}\n\nexport interface Pool extends PoolConfig {\n  totalStaked?: BigNumber\n  stakingLimit?: BigNumber\n  startBlock?: number\n  endBlock?: number\n  userData?: {\n    allowance: BigNumber\n    stakingTokenBalance: BigNumber\n    stakedBalance: BigNumber\n    pendingReward: BigNumber\n  }\n}\n\nexport interface Profile {\n  userId: number\n  points: number\n  teamId: number\n  nftAddress: string\n  tokenId: number\n  isActive: boolean\n  username: string\n  nft?: Nft\n  team: Team\n  hasRegistered: boolean\n}\n\n// Slices states\n\nexport interface FarmsState {\n  data: Farm[]\n  loadArchivedFarmsData: boolean\n  userDataLoaded: boolean\n}\n\nexport interface VaultFees {\n  performanceFee: number\n  callFee: number\n  withdrawalFee: number\n  withdrawalFeePeriod: number\n}\n\nexport interface VaultUser {\n  isLoading: boolean\n  userShares: string\n  cakeAtLastUserAction: string\n  lastDepositedTime: string\n  lastUserActionTime: string\n}\nexport interface CakeVault {\n  totalShares?: string\n  pricePerFullShare?: string\n  totalCakeInVault?: string\n  estimatedCakeBountyReward?: string\n  totalPendingCakeHarvest?: string\n  fees?: VaultFees\n  userData?: VaultUser\n}\n\nexport interface PoolsState {\n  data: Pool[]\n  cakeVault: CakeVault\n}\n\nexport interface ProfileState {\n  isInitialized: boolean\n  isLoading: boolean\n  hasRegistered: boolean\n  data: Profile\n}\n\nexport type TeamResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: boolean\n}\n\nexport type TeamsById = {\n  [key: string]: Team\n}\n\nexport interface TeamsState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: TeamsById\n}\n\nexport interface Achievement {\n  id: string\n  type: CampaignType\n  address: string\n  title: TranslatableText\n  description?: TranslatableText\n  badge: string\n  points: number\n}\n\nexport interface AchievementState {\n  data: Achievement[]\n}\n\n// API Price State\nexport interface PriceApiList {\n  /* eslint-disable camelcase */\n  [key: string]: {\n    name: string\n    symbol: string\n    price: string\n    price_BNB: string\n  }\n}\n\nexport interface PriceApiListThunk {\n  /* eslint-disable camelcase */\n  [key: string]: number\n}\n\nexport interface PriceApiResponse {\n  /* eslint-disable camelcase */\n  updated_at: string\n  data: PriceApiList\n}\n\nexport interface PriceApiThunk {\n  /* eslint-disable camelcase */\n  updated_at: string\n  data: PriceApiListThunk\n}\n\nexport interface PriceState {\n  isLoading: boolean\n  lastUpdated: string\n  data: PriceApiListThunk\n}\n\n// Block\n\nexport interface BlockState {\n  currentBlock: number\n  initialBlock: number\n}\n\n// Collectibles\n\nexport interface CollectiblesState {\n  isInitialized: boolean\n  isLoading: boolean\n  data: {\n    [key: string]: number[]\n  }\n}\n\n// Predictions\n\nexport enum BetPosition {\n  BULL = 'Bull',\n  BEAR = 'Bear',\n  HOUSE = 'House',\n}\n\nexport enum PredictionStatus {\n  INITIAL = 'initial',\n  LIVE = 'live',\n  PAUSED = 'paused',\n  ERROR = 'error',\n}\n\nexport interface Round {\n  id: string\n  epoch: number\n  failed?: boolean\n  startBlock: number\n  startAt: number\n  lockAt: number\n  lockBlock: number\n  lockPrice: number\n  endBlock: number\n  closePrice: number\n  totalBets: number\n  totalAmount: number\n  bullBets: number\n  bearBets: number\n  bearAmount: number\n  bullAmount: number\n  position: BetPosition\n  bets?: Bet[]\n}\n\nexport interface Market {\n  id: string\n  paused: boolean\n  epoch: number\n}\n\nexport interface Bet {\n  id?: string\n  hash?: string\n  amount: number\n  position: BetPosition\n  claimed: boolean\n  user?: PredictionUser\n  round: Round\n}\n\nexport interface PredictionUser {\n  id: string\n  address: string\n  block: number\n  totalBets: number\n  totalBNB: number\n}\n\nexport interface RoundData {\n  [key: string]: Round\n}\n\nexport interface HistoryData {\n  [key: string]: Bet[]\n}\n\nexport interface BetData {\n  [key: string]: {\n    [key: string]: Bet\n  }\n}\n\nexport enum HistoryFilter {\n  ALL = 'all',\n  COLLECTED = 'collected',\n  UNCOLLECTED = 'uncollected',\n}\n\nexport interface PredictionsState {\n  status: PredictionStatus\n  isLoading: boolean\n  isHistoryPaneOpen: boolean\n  isChartPaneOpen: boolean\n  isFetchingHistory: boolean\n  historyFilter: HistoryFilter\n  currentEpoch: number\n  currentRoundStartBlockNumber: number\n  intervalBlocks: number\n  bufferBlocks: number\n  minBetAmount: string\n  lastOraclePrice: string\n  rounds: RoundData\n  history: HistoryData\n  bets: BetData\n}\n\n// Global state\n\nexport interface State {\n  achievements: AchievementState\n  block: BlockState\n  farms: FarmsState\n  prices: PriceState\n  pools: PoolsState\n  predictions: PredictionsState\n  profile: ProfileState\n  teams: TeamsState\n  collectibles: CollectiblesState\n}\n","import { request, gql } from 'graphql-request'\nimport { GRAPH_API_PREDICTION } from 'config/constants/endpoints'\nimport { Bet, BetPosition, Market, PredictionStatus, Round, RoundData } from 'state/types'\nimport makeBatchRequest from 'utils/makeBatchRequest'\nimport { getPredictionsContract } from 'utils/contractHelpers'\nimport {\n  BetResponse,\n  getRoundBaseFields,\n  getBetBaseFields,\n  getUserBaseFields,\n  RoundResponse,\n  MarketResponse,\n} from './queries'\n\nexport enum Result {\n  WIN = 'win',\n  LOSE = 'lose',\n  CANCELED = 'canceled',\n  LIVE = 'live',\n}\n\nexport const numberOrNull = (value: string) => {\n  if (value === null) {\n    return null\n  }\n\n  const valueNum = Number(value)\n  return Number.isNaN(valueNum) ? null : valueNum\n}\n\nexport const makeFutureRoundResponse = (epoch: number, startBlock: number): RoundResponse => {\n  return {\n    id: epoch.toString(),\n    epoch: epoch.toString(),\n    startBlock: startBlock.toString(),\n    failed: null,\n    startAt: null,\n    lockAt: null,\n    lockBlock: null,\n    lockPrice: null,\n    endBlock: null,\n    closePrice: null,\n    totalBets: '0',\n    totalAmount: '0',\n    bearBets: '0',\n    bullBets: '0',\n    bearAmount: '0',\n    bullAmount: '0',\n    position: null,\n    bets: [],\n  }\n}\n\nexport const transformBetResponse = (betResponse: BetResponse): Bet => {\n  const bet = {\n    id: betResponse.id,\n    hash: betResponse.hash,\n    amount: betResponse.amount ? parseFloat(betResponse.amount) : 0,\n    position: betResponse.position === 'Bull' ? BetPosition.BULL : BetPosition.BEAR,\n    claimed: betResponse.claimed,\n    user: {\n      id: betResponse.user.id,\n      address: betResponse.user.address,\n      block: numberOrNull(betResponse.user.block),\n      totalBets: numberOrNull(betResponse.user.totalBets),\n      totalBNB: numberOrNull(betResponse.user.totalBNB),\n    },\n  } as Bet\n\n  if (betResponse.round) {\n    bet.round = transformRoundResponse(betResponse.round)\n  }\n\n  return bet\n}\n\nexport const transformRoundResponse = (roundResponse: RoundResponse): Round => {\n  const {\n    id,\n    epoch,\n    failed,\n    startBlock,\n    startAt,\n    lockAt,\n    lockBlock,\n    lockPrice,\n    endBlock,\n    closePrice,\n    totalBets,\n    totalAmount,\n    bullBets,\n    bearBets,\n    bearAmount,\n    bullAmount,\n    position,\n    bets = [],\n  } = roundResponse\n\n  const getRoundPosition = (positionResponse: string) => {\n    if (positionResponse === 'Bull') {\n      return BetPosition.BULL\n    }\n\n    if (positionResponse === 'Bear') {\n      return BetPosition.BEAR\n    }\n\n    return null\n  }\n\n  return {\n    id,\n    failed,\n    epoch: numberOrNull(epoch),\n    startBlock: numberOrNull(startBlock),\n    startAt: numberOrNull(startAt),\n    lockAt: numberOrNull(lockAt),\n    lockBlock: numberOrNull(lockBlock),\n    lockPrice: lockPrice ? parseFloat(lockPrice) : null,\n    endBlock: numberOrNull(endBlock),\n    closePrice: closePrice ? parseFloat(closePrice) : null,\n    totalBets: numberOrNull(totalBets),\n    totalAmount: totalAmount ? parseFloat(totalAmount) : 0,\n    bullBets: numberOrNull(bullBets),\n    bearBets: numberOrNull(bearBets),\n    bearAmount: numberOrNull(bearAmount),\n    bullAmount: numberOrNull(bullAmount),\n    position: getRoundPosition(position),\n    bets: bets.map(transformBetResponse),\n  }\n}\n\nexport const transformMarketResponse = (marketResponse: MarketResponse): Market => {\n  return {\n    id: marketResponse.id,\n    paused: marketResponse.paused,\n    epoch: Number(marketResponse.epoch.epoch),\n  }\n}\n\nexport const makeRoundData = (rounds: Round[]): RoundData => {\n  return rounds.reduce((accum, round) => {\n    return {\n      ...accum,\n      [round.id]: round,\n    }\n  }, {})\n}\n\nexport const getRoundResult = (bet: Bet, currentEpoch: number): Result => {\n  const { round } = bet\n  if (round.failed) {\n    return Result.CANCELED\n  }\n\n  if (round.epoch >= currentEpoch - 1) {\n    return Result.LIVE\n  }\n  const roundResultPosition = round.closePrice > round.lockPrice ? BetPosition.BULL : BetPosition.BEAR\n\n  return bet.position === roundResultPosition ? Result.WIN : Result.LOSE\n}\n\n/**\n * Given a bet object, check if it is eligible to be claimed or refunded\n */\nexport const getCanClaim = (bet: Bet) => {\n  return !bet.claimed && (bet.position === bet.round.position || bet.round.failed === true)\n}\n\n/**\n * Returns only bets where the user has won.\n * This is necessary because the API currently cannot distinguish between an uncliamed bet that has won or lost\n */\nexport const getUnclaimedWinningBets = (bets: Bet[]): Bet[] => {\n  return bets.filter(getCanClaim)\n}\n\n/**\n * Gets static data from the contract\n */\nexport const getStaticPredictionsData = async () => {\n  const { methods } = getPredictionsContract()\n  const [currentEpoch, intervalBlocks, minBetAmount, isPaused, bufferBlocks] = await makeBatchRequest([\n    methods.currentEpoch().call,\n    methods.intervalBlocks().call,\n    methods.minBetAmount().call,\n    methods.paused().call,\n    methods.bufferBlocks().call,\n  ])\n\n  return {\n    status: isPaused ? PredictionStatus.PAUSED : PredictionStatus.LIVE,\n    currentEpoch: Number(currentEpoch),\n    intervalBlocks: Number(intervalBlocks),\n    bufferBlocks: Number(bufferBlocks),\n    minBetAmount,\n  }\n}\n\nexport const getMarketData = async (): Promise<{\n  rounds: Round[]\n  market: Market\n}> => {\n  const response = (await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getMarketData {\n        rounds(first: 5, orderBy: epoch, orderDirection: desc) {\n          ${getRoundBaseFields()}\n        }\n        market(id: 1) {\n          id\n          paused\n          epoch {\n            epoch\n          }\n        }\n      }\n    `,\n  )) as { rounds: RoundResponse[]; market: MarketResponse }\n\n  return {\n    rounds: response.rounds.map(transformRoundResponse),\n    market: transformMarketResponse(response.market),\n  }\n}\n\nexport const getRound = async (id: string) => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getRound($id: ID!) {\n        round(id: $id) {\n          ${getRoundBaseFields()}\n          bets {\n           ${getBetBaseFields()}\n            user {\n             ${getUserBaseFields()}\n            }\n          }\n        }\n      }\n  `,\n    { id },\n  )\n  return response.round\n}\n\ntype BetHistoryWhereClause = Record<string, string | number | boolean | string[]>\n\nexport const getBetHistory = async (\n  where: BetHistoryWhereClause = {},\n  first = 1000,\n  skip = 0,\n): Promise<BetResponse[]> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBetHistory($first: Int!, $skip: Int!, $where: Bet_filter) {\n        bets(first: $first, skip: $skip, where: $where) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n    `,\n    { first, skip, where },\n  )\n  return response.bets\n}\n\nexport const getBet = async (betId: string): Promise<BetResponse> => {\n  const response = await request(\n    GRAPH_API_PREDICTION,\n    gql`\n      query getBet($id: ID!) {\n        bet(id: $id) {\n          ${getBetBaseFields()}\n          round {\n            ${getRoundBaseFields()}\n          }\n          user {\n            ${getUserBaseFields()}\n          } \n        }\n      }\n  `,\n    {\n      id: betId.toLowerCase(),\n    },\n  )\n  return response.bet\n}\n","export interface UserResponse {\n  id: string\n  address: string\n  block: string\n  totalBets: string\n  totalBNB: string\n  bets?: BetResponse[]\n}\n\nexport interface BetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round?: RoundResponse\n}\n\nexport interface HistoricalBetResponse {\n  id: string\n  hash: string\n  amount: string\n  position: string\n  claimed: boolean\n  user?: UserResponse\n  round: {\n    id: string\n    epoch: string\n  }\n}\n\nexport interface RoundResponse {\n  id: string\n  epoch: string\n  failed: boolean\n  startBlock: string\n  startAt: string\n  lockAt: string\n  lockBlock: string\n  lockPrice: string\n  endBlock: string\n  closePrice: string\n  totalBets: string\n  totalAmount: string\n  bearBets: string\n  bullBets: string\n  bearAmount: string\n  bullAmount: string\n  position: string\n  bets: BetResponse[]\n}\n\nexport interface MarketResponse {\n  id: string\n  paused: boolean\n  epoch: {\n    epoch: string\n  }\n}\n\n/**\n * Base fields are the all the top-level fields available in the api. Used in multiple queries\n */\nexport const getRoundBaseFields = () => `\n  id\n  epoch\n  failed\n  startAt\n  startBlock\n  lockAt\n  lockBlock\n  lockPrice\n  endAt\n  endBlock\n  closePrice\n  totalBets\n  totalAmount\n  bullBets\n  bullAmount\n  bearBets\n  bearAmount\n  position\n`\n\nexport const getBetBaseFields = () => `\n  id\n  hash  \n  amount\n  position\n  claimed\n`\n\nexport const getUserBaseFields = () => `\n  id\n  address\n  block\n  totalBets\n  totalBNB\n`\n","import Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\nconst web3NoAccount = new Web3(httpProvider)\n\nconst getWeb3NoAccount = () => {\n  return web3NoAccount\n}\n\nexport { getWeb3NoAccount }\nexport default web3NoAccount\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pt-BR': PTBR,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","export const tokenEarnedPerThousandDollarsCompounding = ({\n  numberOfDays,\n  farmApr,\n  tokenPrice,\n  roundingDecimals = 2,\n  compoundFrequency = 1,\n  performanceFee = 0,\n}) => {\n  // Everything here is worked out relative to a year, with the asset compounding at the compoundFrequency rate. 1 = once per day\n  const timesCompounded = 365 * compoundFrequency\n  // We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\n  let aprAsDecimal = farmApr / 100\n\n  if (performanceFee) {\n    // Reduce the APR by the % performance fee\n    const feeRelativeToApr = (farmApr / 100) * performanceFee\n    const aprAfterFee = farmApr - feeRelativeToApr\n    aprAsDecimal = aprAfterFee / 100\n  }\n\n  const daysAsDecimalOfYear = numberOfDays / 365\n  // Calculate the starting TOKEN balance with a dollar balance of $1000.\n  const principal = 1000 / tokenPrice\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\n  const finalAmount = principal * (1 + aprAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\n  // To get the TOKEN amount earned, deduct the amount after compounding (finalAmount) from the starting TOKEN balance (principal)\n  const interestEarned = finalAmount - principal\n\n  return parseFloat(interestEarned.toFixed(roundingDecimals))\n}\n\nexport const getRoi = ({ amountEarned, amountInvested }) => {\n  const percentage = (amountEarned / amountInvested) * 100\n  return percentage\n}\n","import { useEffect } from 'react'\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\n\nconst _binanceChainListener = async () =>\n  new Promise<void>((resolve) =>\n    Object.defineProperty(window, 'BinanceChain', {\n      get() {\n        return this.bsc\n      },\n      set(bsc) {\n        this.bsc = bsc\n\n        resolve()\n      },\n    }),\n  )\n\nconst useEagerConnect = () => {\n  const { login } = useAuth()\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\n\n    if (connectorId) {\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\n\n      // Currently BSC extension doesn't always inject in time.\n      // We must check to see if it exists, and if not, wait for it before proceeding.\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\n        _binanceChainListener().then(() => login(connectorId))\n\n        return\n      }\n\n      login(connectorId)\n    }\n  }, [login])\n}\n\nexport default useEagerConnect\n","import { createGlobalStyle } from 'styled-components'\n// eslint-disable-next-line import/no-unresolved\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\n\ndeclare module 'styled-components' {\n  /* eslint-disable @typescript-eslint/no-empty-interface */\n  export interface DefaultTheme extends PancakeTheme {}\n}\n\nconst GlobalStyle = createGlobalStyle`\n  * {\n    font-family: 'Kanit', sans-serif;\n  }\n  body {\n    background-color: ${({ theme }) => theme.colors.background};\n\n    img {\n      height: auto;\n      max-width: 100%;\n    }\n  }\n`\n\nexport default GlobalStyle\n","import React, { useState } from 'react'\nimport { ThemeProvider as SCThemeProvider } from 'styled-components'\nimport { light, dark } from '@pancakeswap/uikit'\n\nconst CACHE_KEY = 'IS_DARK'\n\nconst ThemeContext = React.createContext({ isDark: null, toggleTheme: () => null })\n\nconst ThemeContextProvider = ({ children }) => {\n  const [isDark, setIsDark] = useState(() => {\n    const isDarkUserSetting = localStorage.getItem(CACHE_KEY)\n    return isDarkUserSetting ? JSON.parse(isDarkUserSetting) : false\n  })\n\n  const toggleTheme = () => {\n    setIsDark((prevState) => {\n      localStorage.setItem(CACHE_KEY, JSON.stringify(!prevState))\n      return !prevState\n    })\n  }\n\n  return (\n    <ThemeContext.Provider value={{ isDark, toggleTheme }}>\n      <SCThemeProvider theme={isDark ? dark : light}>{children}</SCThemeProvider>\n    </ThemeContext.Provider>\n  )\n}\n\nexport { ThemeContext, ThemeContextProvider }\n","import { useContext } from 'react'\nimport { ThemeContext as StyledThemeContext } from 'styled-components'\nimport { ThemeContext } from 'contexts/ThemeContext'\n\nconst useTheme = () => {\n  const { isDark, toggleTheme } = useContext(ThemeContext)\n  const theme = useContext(StyledThemeContext)\n  return { isDark, toggleTheme, theme }\n}\n\nexport default useTheme\n","import { MenuEntry } from '@pancakeswap/uikit'\nimport { ContextApi } from 'contexts/Localization/types'\n\nconst config: (t: ContextApi['t']) => MenuEntry[] = (t) => [\n  {\n    label: t('Home'),\n    icon: 'HomeIcon',\n    href: '/',\n  },\n  {\n    label: t('Farms'),\n    icon: 'FarmIcon',\n    href: '/farms',\n  },\n  {\n    label: t('Pools'),\n    icon: 'PoolIcon',\n    href: '/pools',\n  },\n  {\n    label: t('Prediction (BETA)'),\n    icon: 'PredictionsIcon',\n    href: '/',\n  },\n  {\n    label: 'More',\n    icon: 'MoreIcon',\n    items: [\n      {\n        label: 'Github',\n        href: 'https://github.com/tendieswap',\n      },\n      {\n        label: 'Docs',\n        href: 'https://coloneltendie.gitbook.io/tendieswap',\n      },\n      {\n        label: 'Blog',\n        href: 'https://tendieswap.medium.com',\n      },\n    ],\n  },\n]\n\nexport default config\n","import React from 'react'\nimport { Menu as UikitMenu } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { languageList } from 'config/localization/languages'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport useAuth from 'hooks/useAuth'\nimport { usePriceCakeBusd, useProfile } from 'state/hooks'\nimport config from './config'\n\nconst Menu = (props) => {\n  const { account } = useWeb3React()\n  const { login, logout } = useAuth()\n  const { isDark, toggleTheme } = useTheme()\n  const cakePriceUsd = usePriceCakeBusd()\n  const { profile } = useProfile()\n  const { currentLanguage, setLanguage, t } = useTranslation()\n\n  return (\n    <UikitMenu\n      account={account}\n      login={login}\n      logout={logout}\n      isDark={isDark}\n      toggleTheme={toggleTheme}\n      currentLang={currentLanguage.code}\n      langs={languageList}\n      setLang={setLanguage}\n      cakePriceUsd={cakePriceUsd.toNumber()}\n      links={config(t)}\n      profile={{\n        username: profile?.username,\n        image: profile?.nft ? `/images/nfts/${profile.nft?.images.sm}` : undefined,\n        profileLink: '/profile',\n        noProfileLink: '/profile',\n        showPip: !profile?.username,\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default Menu\n","import React, { Suspense, SuspenseProps } from 'react'\n\ninterface State {\n  hasError: boolean\n}\n\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\n  constructor(props) {\n    super(props)\n    this.state = { hasError: false }\n  }\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  componentDidCatch(error) {\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\n\n    // Save a flag on the window object indicating that we have already had a chunk error.\n    // This prevents infinite reloads\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\n\n    // If was a chunk load error, refresh the page\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\n      window.history.replaceState(nextState, '')\n      window.location.reload()\n      return\n    }\n\n    throw error\n  }\n\n  render() {\n    const { hasError } = this.state\n    const { fallback } = this.props\n\n    if (hasError) {\n      return fallback\n    }\n\n    return <Suspense {...this.props} />\n  }\n}\n\nexport default SuspenseWithChunkError\n","import React from 'react'\nimport { ToastContainer } from '@pancakeswap/uikit'\nimport useToast from 'hooks/useToast'\n\nconst ToastListener = () => {\n  const { toasts, remove } = useToast()\n\n  const handleRemove = (id: string) => remove(id)\n\n  return <ToastContainer toasts={toasts} onRemove={handleRemove} />\n}\n\nexport default ToastListener\n","import React, { useState, useCallback } from 'react'\nimport { FallingBunnies, FallingBunniesProps, useKonamiCheatCode } from '@pancakeswap/uikit'\n\nconst EasterEgg: React.FC<FallingBunniesProps> = (props) => {\n  const [show, setShow] = useState(false)\n  const startFalling = useCallback(() => setShow(true), [setShow])\n  useKonamiCheatCode(startFalling)\n\n  if (show) {\n    return (\n      <div onAnimationEnd={() => setShow(false)}>\n        <FallingBunnies {...props} />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default React.memo(EasterEgg)\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport { Text, TextProps } from '@pancakeswap/uikit'\n\ninterface BalanceProps extends TextProps {\n  value: number\n  decimals?: number\n  unit?: string\n  isDisabled?: boolean\n  prefix?: string\n}\n\nconst Balance: React.FC<BalanceProps> = ({\n  value,\n  color = 'text',\n  decimals = 3,\n  isDisabled = false,\n  unit,\n  prefix,\n  ...props\n}) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  const showPrefix = Boolean(value && prefix)\n  const showUnit = Boolean(value && unit)\n\n  return (\n    <Text color={isDisabled ? 'textDisabled' : color} {...props}>\n      {showPrefix && <span>{prefix}</span>}\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {showUnit && <span>{unit}</span>}\n    </Text>\n  )\n}\n\nexport default Balance\n","import React from 'react'\nimport { Flex, TooltipText, IconButton, useModal, CalculateIcon, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { getPoolApr } from 'utils/apr'\nimport { tokenEarnedPerThousandDollarsCompounding, getRoi } from 'utils/compoundApyHelpers'\nimport { useBusdPriceFromToken } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\nimport { Pool } from 'state/types'\nimport { BASE_EXCHANGE_URL } from 'config'\n\ninterface AprRowProps {\n  pool: Pool\n  isAutoVault?: boolean\n  compoundFrequency?: number\n  performanceFee?: number\n}\n\nconst AprRow: React.FC<AprRowProps> = ({ pool, isAutoVault = false, compoundFrequency = 1, performanceFee = 0 }) => {\n  const { t } = useTranslation()\n  const { stakingToken, earningToken, totalStaked, isFinished, tokenPerBlock } = pool\n\n  const tooltipContent = isAutoVault\n    ? t('APY includes compounding, APR doesn’t. This pool’s TENDIE is compounded automatically, so we show APY.')\n    : t('This pool’s rewards aren’t compounded automatically, so we show APR')\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, { placement: 'bottom-start' })\n\n  const earningTokenPrice = useBusdPriceFromToken(earningToken.symbol)\n  const earningTokenPriceAsNumber = earningTokenPrice && earningTokenPrice.toNumber()\n\n  const stakingTokenPrice = useBusdPriceFromToken(stakingToken.symbol)\n  const stakingTokenPriceAsNumber = stakingTokenPrice && stakingTokenPrice.toNumber()\n\n  const apr = getPoolApr(\n    stakingTokenPriceAsNumber,\n    earningTokenPriceAsNumber,\n    getBalanceNumber(totalStaked, stakingToken.decimals),\n    parseFloat(tokenPerBlock),\n  )\n\n  // special handling for tokens like tBTC or BIFI where the daily token rewards for $1000 dollars will be less than 0.001 of that token\n  const isHighValueToken = Math.round(earningTokenPriceAsNumber / 1000) > 0\n  const roundingDecimals = isHighValueToken ? 4 : 2\n\n  const earningsPercentageToDisplay = () => {\n    if (isAutoVault) {\n      const oneThousandDollarsWorthOfToken = 1000 / earningTokenPriceAsNumber\n      const tokenEarnedPerThousand365D = tokenEarnedPerThousandDollarsCompounding({\n        numberOfDays: 365,\n        farmApr: apr,\n        tokenPrice: earningTokenPriceAsNumber,\n        roundingDecimals,\n        compoundFrequency,\n        performanceFee,\n      })\n      return getRoi({\n        amountEarned: tokenEarnedPerThousand365D,\n        amountInvested: oneThousandDollarsWorthOfToken,\n      })\n    }\n    return apr\n  }\n\n  const apyModalLink =\n    stakingToken.address &&\n    `${BASE_EXCHANGE_URL}/#/swap?outputCurrency=${stakingToken.address[process.env.REACT_APP_CHAIN_ID]}`\n\n  const [onPresentApyModal] = useModal(\n    <ApyCalculatorModal\n      tokenPrice={earningTokenPriceAsNumber}\n      apr={apr}\n      linkLabel={t('Get %symbol%', { symbol: stakingToken.symbol })}\n      linkHref={apyModalLink || BASE_EXCHANGE_URL}\n      earningTokenSymbol={earningToken.symbol}\n      roundingDecimals={isHighValueToken ? 4 : 2}\n      compoundFrequency={compoundFrequency}\n      performanceFee={performanceFee}\n    />,\n  )\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef}>{isAutoVault ? `${t('APY')}:` : `${t('APR')}:`}</TooltipText>\n      {isFinished || !apr ? (\n        <Skeleton width=\"82px\" height=\"32px\" />\n      ) : (\n        <Flex alignItems=\"center\">\n          <Balance\n            fontSize=\"16px\"\n            isDisabled={isFinished}\n            value={earningsPercentageToDisplay()}\n            decimals={2}\n            unit=\"%\"\n            bold\n          />\n          <IconButton onClick={onPresentApyModal} variant=\"text\" scale=\"sm\">\n            <CalculateIcon color=\"textSubtle\" width=\"18px\" />\n          </IconButton>\n        </Flex>\n      )}\n    </Flex>\n  )\n}\n\nexport default AprRow\n","import styled, { css, keyframes } from 'styled-components'\nimport { Card, Box } from '@pancakeswap/uikit'\n\nconst PromotedGradient = keyframes`\n  0% {\n    background-position: 50% 0%;\n  }\n  50% {\n    background-position: 50% 100%;\n  }\n  100% {\n    background-position: 50% 0%;\n  }\n`\n\ninterface PromotedStyleCardProps {\n  isDesktop: boolean\n}\n\nexport const StyledCard = styled(Card)<{ isPromoted?: PromotedStyleCardProps; isFinished?: boolean }>`\n  max-width: 352px;\n  margin: 0 8px 24px;\n  display: flex;\n  flex-direction: column;\n  align-self: baseline;\n  position: relative;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: 0px 1px 4px rgba(25, 19, 38, 0.15);\n\n  ${({ isPromoted, theme }) =>\n    isPromoted\n      ? css`\n          background: linear-gradient(180deg, ${theme.colors.primaryBright}, ${theme.colors.secondary});\n          padding: 1px 1px 3px 1px;\n          background-size: 400% 400%;\n        `\n      : `background: ${(props) => props.theme.card.background};`}\n\n  ${({ isPromoted }) =>\n    isPromoted &&\n    isPromoted.isDesktop &&\n    css`\n      animation: ${PromotedGradient} 3s ease infinite;\n    `}\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin: 0 12px 46px;\n  }\n`\n\nexport const StyledCardInner = styled(Box)<{ isPromotedPool?: boolean }>`\n  background: ${({ theme }) => theme.card.background};\n  border-radius: ${({ isPromotedPool, theme }) => (isPromotedPool ? '31px' : theme.radii.card)};\n`\n\nexport default StyledCard\n","import React from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTranslation } from 'contexts/Localization'\nimport {\n  Flex,\n  MetamaskIcon,\n  Text,\n  TooltipText,\n  LinkExternal,\n  TimerIcon,\n  Skeleton,\n  useTooltip,\n  Button,\n} from '@pancakeswap/uikit'\nimport { BASE_BSC_SCAN_URL, BASE_URL } from 'config'\nimport { useBlock, useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport { getAddress, getCakeVaultAddress } from 'utils/addressHelpers'\nimport { registerToken } from 'utils/wallet'\nimport Balance from 'components/Balance'\n\ninterface ExpandedFooterProps {\n  pool: Pool\n  account: string\n  isAutoVault?: boolean\n}\n\nconst ExpandedWrapper = styled(Flex)`\n  svg {\n    height: 14px;\n    width: 14px;\n  }\n`\n\nconst ExpandedFooter: React.FC<ExpandedFooterProps> = ({ pool, account, isAutoVault = false }) => {\n  const { t } = useTranslation()\n  const { currentBlock } = useBlock()\n  const {\n    totalCakeInVault,\n    fees: { performanceFee },\n  } = useCakeVault()\n\n  const { stakingToken, earningToken, totalStaked, startBlock, endBlock, isFinished, contractAddress, sousId } = pool\n\n  const tokenAddress = earningToken.address ? getAddress(earningToken.address) : ''\n  const poolContractAddress = getAddress(contractAddress)\n  const cakeVaultContractAddress = getCakeVaultAddress()\n  const imageSrc = `${BASE_URL}/images/tokens/${earningToken.symbol.toLowerCase()}.png`\n  const isMetaMaskInScope = !!(window as WindowChain).ethereum?.isMetaMask\n  const isManualCakePool = sousId === 0\n\n  const shouldShowBlockCountdown = Boolean(!isFinished && startBlock && endBlock)\n  const blocksUntilStart = Math.max(startBlock - currentBlock, 0)\n  const blocksRemaining = Math.max(endBlock - currentBlock, 0)\n  const hasPoolStarted = blocksUntilStart === 0 && blocksRemaining > 0\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('Subtracted automatically from each yield harvest and burned.'),\n    { placement: 'bottom-start' },\n  )\n\n  const getTotalStakedBalance = () => {\n    if (isAutoVault) {\n      return getBalanceNumber(totalCakeInVault, stakingToken.decimals)\n    }\n    if (isManualCakePool) {\n      const manualCakeTotalMinusAutoVault = new BigNumber(totalStaked).minus(totalCakeInVault)\n      return getBalanceNumber(manualCakeTotalMinusAutoVault, stakingToken.decimals)\n    }\n    return getBalanceNumber(totalStaked, stakingToken.decimals)\n  }\n\n  return (\n    <ExpandedWrapper flexDirection=\"column\">\n      <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text small>{t('Total staked')}:</Text>\n        <Flex alignItems=\"flex-start\">\n          {totalStaked ? (\n            <>\n              <Balance fontSize=\"14px\" value={getTotalStakedBalance()} />\n              <Text ml=\"4px\" fontSize=\"14px\">\n                {stakingToken.symbol}\n              </Text>\n            </>\n          ) : (\n            <Skeleton width=\"90px\" height=\"21px\" />\n          )}\n        </Flex>\n      </Flex>\n      {shouldShowBlockCountdown && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text small>{hasPoolStarted ? t('End') : t('Start')}:</Text>\n          <Flex alignItems=\"center\">\n            {blocksRemaining || blocksUntilStart ? (\n              <Balance\n                color=\"primary\"\n                fontSize=\"14px\"\n                value={hasPoolStarted ? blocksRemaining : blocksUntilStart}\n                decimals={0}\n              />\n            ) : (\n              <Skeleton width=\"54px\" height=\"21px\" />\n            )}\n            <Text ml=\"4px\" color=\"primary\" small textTransform=\"lowercase\">\n              {t('Blocks')}\n            </Text>\n            <TimerIcon ml=\"4px\" color=\"primary\" />\n          </Flex>\n        </Flex>\n      )}\n      {isAutoVault && (\n        <Flex mb=\"2px\" justifyContent=\"space-between\" alignItems=\"center\">\n          {tooltipVisible && tooltip}\n          <TooltipText ref={targetRef} small>\n            {t('Performance Fee')}\n          </TooltipText>\n          <Flex alignItems=\"center\">\n            <Text ml=\"4px\" small>\n              {performanceFee / 100}%\n            </Text>\n          </Flex>\n        </Flex>\n      )}\n      <Flex mb=\"2px\" justifyContent=\"flex-end\">\n        <LinkExternal bold={false} small href={earningToken.projectLink}>\n          {t('View Project Site')}\n        </LinkExternal>\n      </Flex>\n      {poolContractAddress && (\n        <Flex mb=\"2px\" justifyContent=\"flex-end\">\n          <LinkExternal\n            bold={false}\n            small\n            href={`${BASE_BSC_SCAN_URL}/address/${isAutoVault ? cakeVaultContractAddress : poolContractAddress}`}\n          >\n            {t('View Contract')}\n          </LinkExternal>\n        </Flex>\n      )}\n      {account && isMetaMaskInScope && tokenAddress && (\n        <Flex justifyContent=\"flex-end\">\n          <Button\n            variant=\"text\"\n            p=\"0\"\n            height=\"auto\"\n            onClick={() => registerToken(tokenAddress, earningToken.symbol, earningToken.decimals, imageSrc)}\n          >\n            <Text color=\"primary\" fontSize=\"14px\">\n              {t('Add to Metamask')}\n            </Text>\n            <MetamaskIcon ml=\"4px\" />\n          </Button>\n        </Flex>\n      )}\n    </ExpandedWrapper>\n  )\n}\n\nexport default React.memo(ExpandedFooter)\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Flex, CardFooter, ExpandableLabel, HelpIcon, useTooltip } from '@pancakeswap/uikit'\nimport { Pool } from 'state/types'\nimport { CompoundingPoolTag, ManualPoolTag } from 'components/Tags'\nimport ExpandedFooter from './ExpandedFooter'\n\ninterface FooterProps {\n  pool: Pool\n  account: string\n  isAutoVault?: boolean\n  totalCakeInVault?: BigNumber\n}\n\nconst ExpandableButtonWrapper = styled(Flex)`\n  align-items: center;\n  justify-content: space-between;\n  button {\n    padding: 0;\n  }\n`\n\nconst Footer: React.FC<FooterProps> = ({ pool, account, isAutoVault = false }) => {\n  const { t } = useTranslation()\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  const manualTooltipText = t('You must harvest and compound your earnings from this pool manually.')\n  const autoTooltipText = t(\n    'Any funds you stake in this pool will be automagically harvested and restaked (compounded) for you.',\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(isAutoVault ? autoTooltipText : manualTooltipText, {\n    placement: 'bottom',\n  })\n\n  return (\n    <CardFooter>\n      <ExpandableButtonWrapper>\n        <Flex alignItems=\"center\">\n          {isAutoVault ? <CompoundingPoolTag /> : <ManualPoolTag />}\n          {tooltipVisible && tooltip}\n          <Flex ref={targetRef}>\n            <HelpIcon ml=\"4px\" width=\"20px\" height=\"20px\" color=\"textSubtle\" />\n          </Flex>\n        </Flex>\n        <ExpandableLabel expanded={isExpanded} onClick={() => setIsExpanded(!isExpanded)}>\n          {isExpanded ? t('Hide') : t('Details')}\n        </ExpandableLabel>\n      </ExpandableButtonWrapper>\n      {isExpanded && <ExpandedFooter pool={pool} account={account} isAutoVault={isAutoVault} />}\n    </CardFooter>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { CardHeader, Heading, Text, Flex, Image } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled(CardHeader)<{ isFinished?: boolean; background?: string; isPromotedPool?: boolean }>`\n  background: ${({ isFinished, background, theme }) =>\n    isFinished ? theme.colors.backgroundDisabled : theme.colors.gradients[background]};\n  border-radius: ${({ theme, isPromotedPool }) =>\n    isPromotedPool ? '31px 31px 0 0' : `${theme.radii.card} ${theme.radii.card} 0 0`};\n`\n\nconst StyledCardHeader: React.FC<{\n  earningTokenSymbol: string\n  stakingTokenSymbol: string\n  isAutoVault?: boolean\n  isFinished?: boolean\n  isStaking?: boolean\n  isPromotedPool?: boolean\n}> = ({\n  earningTokenSymbol,\n  stakingTokenSymbol,\n  isFinished = false,\n  isAutoVault = false,\n  isStaking = false,\n  isPromotedPool = false,\n}) => {\n  const { t } = useTranslation()\n  const poolImageSrc = isAutoVault\n    ? `cake-cakevault.svg`\n    : `${earningTokenSymbol}-${stakingTokenSymbol}.svg`.toLocaleLowerCase()\n  const isCakePool = earningTokenSymbol === 'TENDIE' && stakingTokenSymbol === 'TENDIE'\n  const background = isStaking ? 'bubblegum' : 'cardHeader'\n\n  const getHeadingPrefix = () => {\n    if (isAutoVault) {\n      // vault\n      return t('Auto')\n    }\n    if (isCakePool) {\n      // manual cake\n      return t('Manual')\n    }\n    // all other pools\n    return t('Earn')\n  }\n\n  const getSubHeading = () => {\n    if (isAutoVault) {\n      return t('Automatic restaking')\n    }\n    if (isCakePool) {\n      return t('Earn TENDIE, stake TENDIE')\n    }\n    return t('Stake %symbol%', { symbol: stakingTokenSymbol })\n  }\n\n  return (\n    <Wrapper isPromotedPool={isPromotedPool} isFinished={isFinished} background={background}>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Flex flexDirection=\"column\">\n          <Heading color={isFinished ? 'textDisabled' : 'body'} scale=\"lg\">\n            {`${getHeadingPrefix()} ${earningTokenSymbol}`}\n          </Heading>\n          <Text color={isFinished ? 'textDisabled' : 'textSubtle'}>{getSubHeading()}</Text>\n        </Flex>\n        <Image src={`/images/pools/${poolImageSrc}`} alt={earningTokenSymbol} width={64} height={64} />\n      </Flex>\n    </Wrapper>\n  )\n}\n\nexport default StyledCardHeader\n","import React, { useState, useCallback } from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useTranslation } from 'contexts/Localization'\nimport { useERC20 } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { getAddress } from 'utils/addressHelpers'\nimport { Pool } from 'state/types'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false }) => {\n  const { sousId, stakingToken, earningToken } = pool\n  const { t } = useTranslation()\n  const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '')\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { toastSuccess, toastError } = useToast()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      if (txHash) {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% pool!', { symbol: earningToken.symbol }),\n        )\n        setRequestedApproval(false)\n      } else {\n        // user rejected tx or didn't go thru\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n      toastError(t('Error'), e?.message)\n    }\n  }, [onApprove, setRequestedApproval, toastSuccess, toastError, t, earningToken])\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import React from 'react'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport { Modal, Text, Button, OpenNewIcon, Link } from '@pancakeswap/uikit'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport useTheme from 'hooks/useTheme'\n\ninterface NotEnoughTokensModalProps {\n  tokenSymbol: string\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst NotEnoughTokensModal: React.FC<NotEnoughTokensModalProps> = ({ tokenSymbol, onDismiss }) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n\n  return (\n    <Modal\n      title={t('%symbol% required', { symbol: tokenSymbol })}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Text color=\"failure\" bold>\n        {t('Insufficient %symbol% balance', { symbol: tokenSymbol })}\n      </Text>\n      <Text mt=\"24px\">{t('You’ll need %symbol% to stake in this pool!', { symbol: tokenSymbol })}</Text>\n      <Text>\n        {t('Buy some %symbol%, or make sure your %symbol% isn’t in another pool or LP.', {\n          symbol: tokenSymbol,\n        })}\n      </Text>\n      <Button mt=\"24px\" as=\"a\" external href={BASE_EXCHANGE_URL}>\n        {t('Buy')} {tokenSymbol}\n      </Button>\n      <StyledLink href=\"https://yieldwatch.net\" external>\n        <Button variant=\"secondary\" mt=\"8px\" width=\"100%\">\n          {t('Locate Assets')}\n          <OpenNewIcon color=\"primary\" ml=\"4px\" />\n        </Button>\n      </StyledLink>\n      <Button variant=\"text\" onClick={onDismiss}>\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default NotEnoughTokensModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap/uikit'\n\ninterface PercentageButtonProps {\n  onClick: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst PercentageButton: React.FC<PercentageButtonProps> = ({ children, onClick }) => {\n  return (\n    <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={onClick}>\n      {children}\n    </StyledButton>\n  )\n}\n\nexport default PercentageButton\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon, Link } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport PercentageButton from './PercentageButton'\n\ninterface StakeModalProps {\n  isBnbPool: boolean\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakingTokenPrice: number\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledLink = styled(Link)`\n  width: 100%;\n`\n\nconst StakeModal: React.FC<StakeModalProps> = ({\n  isBnbPool,\n  pool,\n  stakingTokenBalance,\n  stakingTokenPrice,\n  isRemovingStake = false,\n  onDismiss,\n}) => {\n  const { sousId, stakingToken, userData, stakingLimit, earningToken } = pool\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId, pool.enableEmergencyWithdraw)\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [hasReachedStakeLimit, setHasReachedStakedLimit] = useState(false)\n  const [percent, setPercent] = useState(0)\n  const getCalculatedStakingLimit = () => {\n    if (isRemovingStake) {\n      return userData.stakedBalance\n    }\n    return stakingLimit.gt(0) && stakingTokenBalance.gt(stakingLimit) ? stakingLimit : stakingTokenBalance\n  }\n\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(stakingTokenPrice).toNumber())\n\n  useEffect(() => {\n    if (stakingLimit.gt(0) && !isRemovingStake) {\n      const fullDecimalStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n      setHasReachedStakedLimit(fullDecimalStakeAmount.plus(userData.stakedBalance).gt(stakingLimit))\n    }\n  }, [stakeAmount, stakingLimit, userData, stakingToken, isRemovingStake, setHasReachedStakedLimit])\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = getDecimalAmount(new BigNumber(input), stakingToken.decimals)\n      const percentage = Math.floor(convertedInput.dividedBy(getCalculatedStakingLimit()).multipliedBy(100).toNumber())\n      setPercent(Math.min(percentage, 100))\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = getCalculatedStakingLimit().dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleConfirmClick = async () => {\n    setPendingTx(true)\n\n    if (isRemovingStake) {\n      // unstaking\n      try {\n        await onUnstake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Unstaked')}!`,\n          t('Your %symbol% earnings have also been harvested to your wallet!', {\n            symbol: earningToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      try {\n        // staking\n        await onStake(stakeAmount, stakingToken.decimals)\n        toastSuccess(\n          `${t('Staked')}!`,\n          t('Your %symbol% funds have been staked in the pool!', {\n            symbol: stakingToken.symbol,\n          }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {stakingLimit.gt(0) && !isRemovingStake && (\n        <Text color=\"secondary\" bold mb=\"24px\" style={{ textAlign: 'center' }} fontSize=\"16px\">\n          {t('Max stake for this pool: %amount% %token%', {\n            amount: getFullDisplayBalance(stakingLimit, stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={stakingTokenPrice !== 0 && `~${usdValueStaked || 0} USD`}\n        isWarning={hasReachedStakeLimit}\n      />\n      {hasReachedStakeLimit && (\n        <Text color=\"failure\" fontSize=\"12px\" style={{ textAlign: 'right' }} mt=\"4px\">\n          {t('Maximum total stake: %amount% %token%', {\n            amount: getFullDisplayBalance(new BigNumber(stakingLimit), stakingToken.decimals, 0),\n            token: stakingToken.symbol,\n          })}\n        </Text>\n      )}\n      <Text ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', {\n          balance: getFullDisplayBalance(getCalculatedStakingLimit(), stakingToken.decimals),\n        })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <PercentageButton onClick={() => handleChangePercent(25)}>25%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(50)}>50%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(75)}>75%</PercentageButton>\n        <PercentageButton onClick={() => handleChangePercent(100)}>MAX</PercentageButton>\n      </Flex>\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0 || hasReachedStakeLimit}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <StyledLink external href={BASE_EXCHANGE_URL}>\n          <Button width=\"100%\" mt=\"8px\" variant=\"secondary\">\n            {t('Get %symbol%', { symbol: stakingToken.symbol })}\n          </Button>\n        </StyledLink>\n      )}\n    </Modal>\n  )\n}\n\nexport default StakeModal\n","import React from 'react'\nimport { Flex, Text, Button, IconButton, AddIcon, MinusIcon, useModal, Skeleton, useTooltip } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useBusdPriceFromToken } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../Modals/NotEnoughTokensModal'\nimport StakeModal from '../Modals/StakeModal'\n\ninterface StakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  stakedBalance: BigNumber\n  isBnbPool: boolean\n  isStaked: ConstrainBoolean\n  isLoading?: boolean\n}\n\nconst StakeAction: React.FC<StakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  stakedBalance,\n  isBnbPool,\n  isStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken, stakingLimit, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedTokenBalance = getBalanceNumber(stakedBalance, stakingToken.decimals)\n  const stakingTokenPrice = useBusdPriceFromToken(stakingToken.symbol)\n  const stakingTokenPriceAsNumber = stakingTokenPrice ? stakingTokenPrice.toNumber() : 0\n  const stakedTokenDollarBalance = getBalanceNumber(\n    stakedBalance.multipliedBy(stakingTokenPriceAsNumber),\n    stakingToken.decimals,\n  )\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n\n  const [onPresentStake] = useModal(\n    <StakeModal\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenBalance={stakingTokenBalance}\n      stakingTokenPrice={stakingTokenPriceAsNumber}\n    />,\n  )\n\n  const [onPresentUnstake] = useModal(\n    <StakeModal\n      stakingTokenBalance={stakingTokenBalance}\n      isBnbPool={isBnbPool}\n      pool={pool}\n      stakingTokenPrice={stakingTokenPriceAsNumber}\n      isRemovingStake\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    t('You’ve already staked the maximum amount you can stake in this pool!'),\n    { placement: 'bottom' },\n  )\n\n  const reachStakingLimit = stakingLimit.gt(0) && userData.stakedBalance.gte(stakingLimit)\n\n  const renderStakeAction = () => {\n    return isStaked ? (\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          <>\n            <Balance bold fontSize=\"20px\" decimals={3} value={stakedTokenBalance} />\n            {stakingTokenPriceAsNumber !== 0 && (\n              <Text fontSize=\"12px\" color=\"textSubtle\">\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  decimals={2}\n                  value={stakedTokenDollarBalance}\n                  prefix=\"~\"\n                  unit=\" USD\"\n                />\n              </Text>\n            )}\n          </>\n        </Flex>\n        <Flex>\n          <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n            <MinusIcon color=\"primary\" width=\"24px\" />\n          </IconButton>\n          {reachStakingLimit ? (\n            <span ref={targetRef}>\n              <IconButton variant=\"secondary\" disabled>\n                <AddIcon color=\"textDisabled\" width=\"24px\" height=\"24px\" />\n              </IconButton>\n            </span>\n          ) : (\n            <IconButton\n              variant=\"secondary\"\n              onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}\n              disabled={isFinished}\n            >\n              <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n            </IconButton>\n          )}\n        </Flex>\n        {tooltipVisible && tooltip}\n      </Flex>\n    ) : (\n      <Button disabled={isFinished} onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n        {t('Stake')}\n      </Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default StakeAction\n","import React, { useState } from 'react'\nimport {\n  Modal,\n  Text,\n  Button,\n  Heading,\n  Flex,\n  AutoRenewIcon,\n  ButtonMenu,\n  ButtonMenuItem,\n  HelpIcon,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport { useSousStake } from 'hooks/useStake'\nimport useToast from 'hooks/useToast'\nimport { Token } from 'config/constants/types'\n\ninterface CollectModalProps {\n  formattedBalance: string\n  fullBalance: string\n  earningToken: Token\n  earningsDollarValue: string\n  sousId: number\n  isBnbPool: boolean\n  isCompoundPool?: boolean\n  onDismiss?: () => void\n}\n\nconst CollectModal: React.FC<CollectModalProps> = ({\n  formattedBalance,\n  fullBalance,\n  earningToken,\n  earningsDollarValue,\n  sousId,\n  isBnbPool,\n  isCompoundPool = false,\n  onDismiss,\n}) => {\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const [pendingTx, setPendingTx] = useState(false)\n  const [shouldCompound, setShouldCompound] = useState(isCompoundPool)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text mb=\"12px\">{t('Compound: collect and restake TENDIE into pool.')}</Text>\n      <Text>{t('Harvest: collect TENDIE and send to wallet')}</Text>\n    </>,\n    { placement: 'bottom-end', tooltipOffset: [20, 10] },\n  )\n\n  const handleHarvestConfirm = async () => {\n    setPendingTx(true)\n    // compounding\n    if (shouldCompound) {\n      try {\n        await onStake(fullBalance, earningToken.decimals)\n        toastSuccess(\n          `${t('Compounded')}!`,\n          t('Your %symbol% earnings have been re-invested into the pool!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    } else {\n      // harvesting\n      try {\n        await onReward()\n        toastSuccess(\n          `${t('Harvested')}!`,\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: earningToken.symbol }),\n        )\n        setPendingTx(false)\n        onDismiss()\n      } catch (e) {\n        toastError(t('Canceled'), t('Please try again and confirm the transaction.'))\n        setPendingTx(false)\n      }\n    }\n  }\n\n  return (\n    <Modal\n      title={`${earningToken.symbol} ${isCompoundPool ? t('Collect') : t('Harvest')}`}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      {isCompoundPool && (\n        <Flex justifyContent=\"center\" alignItems=\"center\" mb=\"24px\">\n          <ButtonMenu\n            activeIndex={shouldCompound ? 0 : 1}\n            scale=\"sm\"\n            variant=\"subtle\"\n            onItemClick={(index) => setShouldCompound(!index)}\n          >\n            <ButtonMenuItem as=\"button\">{t('Compound')}</ButtonMenuItem>\n            <ButtonMenuItem as=\"button\">{t('Harvest')}</ButtonMenuItem>\n          </ButtonMenu>\n          <Flex ml=\"10px\" ref={targetRef}>\n            <HelpIcon color=\"textSubtle\" />\n          </Flex>\n          {tooltipVisible && tooltip}\n        </Flex>\n      )}\n\n      <Flex justifyContent=\"space-between\" alignItems=\"center\" mb=\"24px\">\n        <Text>{shouldCompound ? t('Compounding') : t('Harvesting')}:</Text>\n        <Flex flexDirection=\"column\">\n          <Heading>\n            {formattedBalance} {earningToken.symbol}\n          </Heading>\n          <Text fontSize=\"12px\" color=\"textSubtle\">{`~${earningsDollarValue || 0} USD`}</Text>\n        </Flex>\n      </Flex>\n\n      <Button\n        mt=\"8px\"\n        onClick={handleHarvestConfirm}\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      <Button variant=\"text\" onClick={onDismiss} pb=\"0px\">\n        {t('Close Window')}\n      </Button>\n    </Modal>\n  )\n}\n\nexport default CollectModal\n","import React from 'react'\nimport { Flex, Text, Button, Heading, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { Token } from 'config/constants/types'\nimport { useTranslation } from 'contexts/Localization'\nimport { getFullDisplayBalance, getBalanceNumber, formatNumber } from 'utils/formatBalance'\nimport { useBusdPriceFromToken } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport CollectModal from '../Modals/CollectModal'\n\ninterface HarvestActionsProps {\n  earnings: BigNumber\n  earningToken: Token\n  sousId: number\n  isBnbPool: boolean\n  isLoading?: boolean\n}\n\nconst HarvestActions: React.FC<HarvestActionsProps> = ({\n  earnings,\n  earningToken,\n  sousId,\n  isBnbPool,\n  isLoading = false,\n}) => {\n  const { t } = useTranslation()\n  const earningTokenBalance = getBalanceNumber(earnings, earningToken.decimals)\n  const formattedBalance = formatNumber(earningTokenBalance, 3, 3)\n\n  const earningTokenPrice = useBusdPriceFromToken(earningToken.symbol)\n  const earningTokenPriceAsNumber = earningTokenPrice ? earningTokenPrice.toNumber() : 0\n  const earningTokenDollarBalance = getBalanceNumber(\n    earnings.multipliedBy(earningTokenPriceAsNumber),\n    earningToken.decimals,\n  )\n  const earningsDollarValue = formatNumber(earningTokenDollarBalance)\n\n  const fullBalance = getFullDisplayBalance(earnings, earningToken.decimals)\n  const hasEarnings = earnings.toNumber() > 0\n  const isCompoundPool = sousId === 0\n\n  const [onPresentCollect] = useModal(\n    <CollectModal\n      formattedBalance={formattedBalance}\n      fullBalance={fullBalance}\n      earningToken={earningToken}\n      earningsDollarValue={earningsDollarValue}\n      sousId={sousId}\n      isBnbPool={isBnbPool}\n      isCompoundPool={isCompoundPool}\n    />,\n  )\n\n  return (\n    <Flex flexDirection=\"column\" mb=\"16px\">\n      <Flex justifyContent=\"space-between\" alignItems=\"center\">\n        <Flex flexDirection=\"column\">\n          {isLoading ? (\n            <Skeleton width=\"80px\" height=\"48px\" />\n          ) : (\n            <>\n              {hasEarnings ? (\n                <Balance bold fontSize=\"20px\" decimals={5} value={earningTokenBalance} />\n              ) : (\n                <Heading color=\"textDisabled\">0</Heading>\n              )}\n              {earningTokenPriceAsNumber !== 0 && (\n                <Text fontSize=\"12px\" color={hasEarnings ? 'textSubtle' : 'textDisabled'}>\n                  ~\n                  {hasEarnings ? (\n                    <Balance\n                      display=\"inline\"\n                      fontSize=\"12px\"\n                      color=\"textSubtle\"\n                      decimals={2}\n                      value={earningTokenDollarBalance}\n                      unit=\" USD\"\n                    />\n                  ) : (\n                    '0 USD'\n                  )}\n                </Text>\n              )}\n            </>\n          )}\n        </Flex>\n        <Flex>\n          <Button disabled={!hasEarnings} onClick={onPresentCollect}>\n            {isCompoundPool ? t('Collect') : t('Harvest')}\n          </Button>\n        </Flex>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HarvestActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport styled from 'styled-components'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport ApprovalAction from './ApprovalAction'\nimport StakeActions from './StakeActions'\nimport HarvestActions from './HarvestActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\ninterface CardActionsProps {\n  pool: Pool\n  stakedBalance: BigNumber\n}\n\nconst CardActions: React.FC<CardActionsProps> = ({ pool, stakedBalance }) => {\n  const { sousId, stakingToken, earningToken, harvest, poolCategory, userData } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const { t } = useTranslation()\n  const allowance = userData?.allowance ? new BigNumber(userData.allowance) : BIG_ZERO\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n  const earnings = userData?.pendingReward ? new BigNumber(userData.pendingReward) : BIG_ZERO\n  const needsApproval = !allowance.gt(0) && !isBnbPool\n  const isStaked = stakedBalance.gt(0)\n  const isLoading = !userData\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        {harvest && (\n          <>\n            <Box display=\"inline\">\n              <InlineText color=\"secondary\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {`${earningToken.symbol} `}\n              </InlineText>\n              <InlineText color=\"textSubtle\" textTransform=\"uppercase\" bold fontSize=\"12px\">\n                {t('Earned')}\n              </InlineText>\n            </Box>\n            <HarvestActions\n              earnings={earnings}\n              earningToken={earningToken}\n              sousId={sousId}\n              isBnbPool={isBnbPool}\n              isLoading={isLoading}\n            />\n          </>\n        )}\n        <Box display=\"inline\">\n          <InlineText color={isStaked ? 'secondary' : 'textSubtle'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText color={isStaked ? 'textSubtle' : 'secondary'} textTransform=\"uppercase\" bold fontSize=\"12px\">\n            {isStaked ? t('Staked') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {needsApproval ? (\n          <ApprovalAction pool={pool} isLoading={isLoading} />\n        ) : (\n          <StakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            stakedBalance={stakedBalance}\n            isBnbPool={isBnbPool}\n            isStaked={isStaked}\n          />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CardActions\n","import BigNumber from 'bignumber.js'\nimport React from 'react'\nimport { CardBody, Flex, Text, CardRibbon } from '@pancakeswap/uikit'\nimport UnlockButton from 'components/UnlockButton'\nimport { useTranslation } from 'contexts/Localization'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport { Pool } from 'state/types'\nimport AprRow from './AprRow'\nimport { StyledCard, StyledCardInner } from './StyledCard'\nimport CardFooter from './CardFooter'\nimport StyledCardHeader from './StyledCardHeader'\nimport CardActions from './CardActions'\n\nconst PoolCard: React.FC<{ pool: Pool; account: string }> = ({ pool, account }) => {\n  const { sousId, stakingToken, earningToken, isFinished, userData } = pool\n  const { t } = useTranslation()\n  const stakedBalance = userData?.stakedBalance ? new BigNumber(userData.stakedBalance) : BIG_ZERO\n  const accountHasStakedBalance = stakedBalance.gt(0)\n\n  return (\n    <StyledCard\n      isFinished={isFinished && sousId !== 0}\n      ribbon={isFinished && <CardRibbon variantColor=\"textDisabled\" text={t('Finished')} />}\n    >\n      <StyledCardInner>\n        <StyledCardHeader\n          isStaking={accountHasStakedBalance}\n          earningTokenSymbol={earningToken.symbol}\n          stakingTokenSymbol={stakingToken.symbol}\n          isFinished={isFinished && sousId !== 0}\n        />\n        <CardBody>\n          <AprRow pool={pool} />\n          <Flex mt=\"24px\" flexDirection=\"column\">\n            {account ? (\n              <CardActions pool={pool} stakedBalance={stakedBalance} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </CardBody>\n        <CardFooter pool={pool} account={account} />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default PoolCard\n","import React, { useState } from 'react'\nimport { Button, AutoRenewIcon, Skeleton } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useCakeVaultContract } from 'hooks/useContract'\nimport useToast from 'hooks/useToast'\nimport { Pool } from 'state/types'\n\ninterface ApprovalActionProps {\n  pool: Pool\n  setLastUpdated: () => void\n  isLoading?: boolean\n}\n\nconst ApprovalAction: React.FC<ApprovalActionProps> = ({ pool, isLoading = false, setLastUpdated }) => {\n  const { account } = useWeb3React()\n  const { stakingToken } = pool\n  const cakeVaultContract = useCakeVaultContract()\n  const cakeContract = useCake()\n  const { t } = useTranslation()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n\n  const handleApprove = () => {\n    cakeContract.methods\n      .approve(cakeVaultContract.options.address, ethers.constants.MaxUint256)\n      .send({ from: account })\n      .on('sending', () => {\n        setRequestedApproval(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(\n          t('Contract Enabled'),\n          t('You can now stake in the %symbol% vault!', { symbol: stakingToken.symbol }),\n        )\n        setLastUpdated()\n        setRequestedApproval(false)\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\n        setRequestedApproval(false)\n      })\n  }\n\n  return (\n    <>\n      {isLoading ? (\n        <Skeleton width=\"100%\" height=\"52px\" />\n      ) : (\n        <Button\n          isLoading={requestedApproval}\n          endIcon={requestedApproval ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          disabled={requestedApproval}\n          onClick={handleApprove}\n          width=\"100%\"\n        >\n          {t('Enable')}\n        </Button>\n      )}\n    </>\n  )\n}\n\nexport default ApprovalAction\n","import BigNumber from 'bignumber.js'\nimport { useEffect, useState } from 'react'\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, userShares: BigNumber, withdrawalFeePeriod = 259200) => {\n  const [secondsRemaining, setSecondsRemaining] = useState(null)\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false)\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000))\n\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod\n    const secondsRemainingCalc = feeEndTime - currentSeconds\n    const doesUnstakingFeeApply = userShares.gt(0) && secondsRemainingCalc > 0\n\n    const tick = () => {\n      setCurrentSeconds((prevSeconds) => prevSeconds + 1)\n    }\n    const timerInterval = setInterval(() => tick(), 1000)\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc)\n      setHasUnstakingFee(true)\n    } else {\n      setHasUnstakingFee(false)\n      clearInterval(timerInterval)\n    }\n\n    return () => clearInterval(timerInterval)\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds, userShares])\n\n  return { hasUnstakingFee, secondsRemaining }\n}\n\nexport default useWithdrawalFeeTimer\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport { useTranslation } from 'contexts/Localization'\n\nconst WithdrawalFeeTimer: React.FC<{ secondsRemaining: number }> = ({ secondsRemaining }) => {\n  const { t } = useTranslation()\n  const { days, hours, minutes } = getTimePeriods(secondsRemaining)\n\n  return <Text fontSize=\"14px\">{t('%day%d : %hour%h : %minute%m', { day: days, hour: hours, minute: minutes })}</Text>\n}\n\nexport default WithdrawalFeeTimer\n","import React from 'react'\nimport { Flex, Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport { useCakeVault } from 'state/hooks'\nimport WithdrawalFeeTimer from './WithdrawalFeeTimer'\n\nconst UnstakingFeeCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    userData: { lastDepositedTime, userShares },\n    fees: { withdrawalFee, withdrawalFeePeriod },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100 || '-'\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new TENDIE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'bottom-start' },\n  )\n\n  const { secondsRemaining, hasUnstakingFee } = useWithdrawalFeeTimer(\n    parseInt(lastDepositedTime, 10),\n    userShares,\n    withdrawalFeePeriod,\n  )\n\n  // The user has made a deposit, but has no fee\n  const noFeeToPay = lastDepositedTime && !hasUnstakingFee && userShares.gt(0)\n\n  // Show the timer if a user is connected, has deposited, and has an unstaking fee\n  const shouldShowTimer = account && lastDepositedTime && hasUnstakingFee\n\n  const getRowText = () => {\n    if (noFeeToPay) {\n      return t('Unstaking Fee').toLowerCase()\n    }\n    if (shouldShowTimer) {\n      return t('unstaking fee until')\n    }\n    return t('unstaking fee if withdrawn within 72h')\n  }\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        {noFeeToPay ? '0' : feeAsDecimal}% {getRowText()}\n      </TooltipText>\n      {shouldShowTimer && <WithdrawalFeeTimer secondsRemaining={secondsRemaining} />}\n    </Flex>\n  )\n}\n\nexport default UnstakingFeeCountdownRow\n","import React from 'react'\nimport { Text, Flex, useTooltip, TooltipText } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault } from 'state/hooks'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\n\ninterface FeeSummaryProps {\n  stakingTokenSymbol: string\n  stakeAmount: string\n}\n\nconst FeeSummary: React.FC<FeeSummaryProps> = ({ stakingTokenSymbol, stakeAmount }) => {\n  const { t } = useTranslation()\n  const {\n    fees: { withdrawalFee },\n  } = useCakeVault()\n  const feeAsDecimal = withdrawalFee / 100\n  const feeInCake = (parseFloat(stakeAmount) * (feeAsDecimal / 100)).toFixed(4)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Text bold mb=\"4px\">\n        {t('Unstaking fee: %fee%%', { fee: feeAsDecimal })}\n      </Text>\n      <Text>\n        {t(\n          'Only applies within 3 days of staking. Unstaking after 3 days will not include a fee. Timer resets every time you stake new TENDIE in the pool.',\n        )}\n      </Text>\n    </>,\n    { placement: 'top-start' },\n  )\n\n  return (\n    <>\n      <Flex mt=\"24px\" alignItems=\"center\" justifyContent=\"space-between\">\n        {tooltipVisible && tooltip}\n        <TooltipText ref={targetRef} small>\n          {t('Unstaking Fee')}\n        </TooltipText>\n        <Text fontSize=\"14px\">\n          {stakeAmount ? feeInCake : '-'} {stakingTokenSymbol}\n        </Text>\n      </Flex>\n      <UnstakingFeeCountdownRow />\n    </>\n  )\n}\n\nexport default FeeSummary\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Image, Button, Slider, BalanceInput, AutoRenewIcon } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport { BASE_EXCHANGE_URL } from 'config'\nimport { useAppDispatch } from 'state'\nimport { BIG_TEN } from 'utils/bigNumber'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useWithdrawalFeeTimer from 'hooks/cakeVault/useWithdrawalFeeTimer'\nimport BigNumber from 'bignumber.js'\nimport { getFullDisplayBalance, formatNumber, getDecimalAmount } from 'utils/formatBalance'\nimport useToast from 'hooks/useToast'\nimport { fetchCakeVaultUserData } from 'state/pools'\nimport { Pool } from 'state/types'\nimport { convertCakeToShares } from '../../helpers'\nimport FeeSummary from './FeeSummary'\n\ninterface VaultStakeModalProps {\n  pool: Pool\n  stakingMax: BigNumber\n  isRemovingStake?: boolean\n  onDismiss?: () => void\n}\n\nconst StyledButton = styled(Button)`\n  flex-grow: 1;\n`\n\nconst VaultStakeModal: React.FC<VaultStakeModalProps> = ({ pool, stakingMax, isRemovingStake = false, onDismiss }) => {\n  const dispatch = useAppDispatch()\n  const { stakingToken } = pool\n  const { account } = useWeb3React()\n  const cakeVaultContract = useCakeVaultContract()\n  const {\n    userData: { lastDepositedTime, userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { t } = useTranslation()\n  const { theme } = useTheme()\n  const { toastSuccess, toastError } = useToast()\n  const [pendingTx, setPendingTx] = useState(false)\n  const [stakeAmount, setStakeAmount] = useState('')\n  const [percent, setPercent] = useState(0)\n  const { hasUnstakingFee } = useWithdrawalFeeTimer(parseInt(lastDepositedTime, 10), userShares)\n  const cakePriceBusd = usePriceCakeBusd()\n  const usdValueStaked = stakeAmount && formatNumber(new BigNumber(stakeAmount).times(cakePriceBusd).toNumber())\n\n  const handleStakeInputChange = (input: string) => {\n    if (input) {\n      const convertedInput = new BigNumber(input).multipliedBy(BIG_TEN.pow(stakingToken.decimals))\n      const percentage = Math.floor(convertedInput.dividedBy(stakingMax).multipliedBy(100).toNumber())\n      setPercent(percentage > 100 ? 100 : percentage)\n    } else {\n      setPercent(0)\n    }\n    setStakeAmount(input)\n  }\n\n  const handleChangePercent = (sliderPercent: number) => {\n    if (sliderPercent > 0) {\n      const percentageOfStakingMax = stakingMax.dividedBy(100).multipliedBy(sliderPercent)\n      const amountToStake = getFullDisplayBalance(percentageOfStakingMax, stakingToken.decimals, stakingToken.decimals)\n      setStakeAmount(amountToStake)\n    } else {\n      setStakeAmount('')\n    }\n    setPercent(sliderPercent)\n  }\n\n  const handleWithdrawal = async (convertedStakeAmount: BigNumber) => {\n    setPendingTx(true)\n    const shareStakeToWithdraw = convertCakeToShares(convertedStakeAmount, pricePerFullShare)\n    // trigger withdrawAll function if the withdrawal will leave 0.000001 TENDIE or less\n    const triggerWithdrawAllThreshold = new BigNumber(1000000000000)\n    const sharesRemaining = userShares.minus(shareStakeToWithdraw.sharesAsBigNumber)\n    const isWithdrawingAll = sharesRemaining.lte(triggerWithdrawAllThreshold)\n\n    if (isWithdrawingAll) {\n      cakeVaultContract.methods\n        .withdrawAll()\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    } else {\n      cakeVaultContract.methods\n        .withdraw(shareStakeToWithdraw.sharesAsBigNumber.toString())\n        // .toString() being called to fix a BigNumber error in prod\n        // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n        .send({ from: account })\n        .on('sending', () => {\n          setPendingTx(true)\n        })\n        .on('receipt', () => {\n          toastSuccess(t('Unstaked!'), t('Your earnings have also been harvested to your wallet'))\n          setPendingTx(false)\n          onDismiss()\n          dispatch(fetchCakeVaultUserData({ account }))\n        })\n        .on('error', (error) => {\n          console.error(error)\n          // Remove message from toast before prod\n          toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n          setPendingTx(false)\n        })\n    }\n  }\n\n  const handleDeposit = async (convertedStakeAmount: BigNumber) => {\n    cakeVaultContract.methods\n      .deposit(convertedStakeAmount.toString())\n      // .toString() being called to fix a BigNumber error in prod\n      // as suggested here https://github.com/ChainSafe/web3.js/issues/2077\n      .send({ from: account })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Staked!'), t('Your funds have been staked in the pool'))\n        setPendingTx(false)\n        onDismiss()\n        dispatch(fetchCakeVaultUserData({ account }))\n      })\n      .on('error', (error) => {\n        console.error(error)\n        // Remove message from toast before prod\n        toastError(t('Error'), t('%error% - Please try again.', { error: error.message }))\n        setPendingTx(false)\n      })\n  }\n\n  const handleConfirmClick = async () => {\n    const convertedStakeAmount = getDecimalAmount(new BigNumber(stakeAmount), stakingToken.decimals)\n    setPendingTx(true)\n    // unstaking\n    if (isRemovingStake) {\n      handleWithdrawal(convertedStakeAmount)\n      // staking\n    } else {\n      handleDeposit(convertedStakeAmount)\n    }\n  }\n\n  return (\n    <Modal\n      title={isRemovingStake ? t('Unstake') : t('Stake in Pool')}\n      onDismiss={onDismiss}\n      headerBackground={theme.colors.gradients.cardHeader}\n    >\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"8px\">\n        <Text bold>{isRemovingStake ? t('Unstake') : t('Stake')}:</Text>\n        <Flex alignItems=\"center\" minWidth=\"70px\">\n          <Image src={`/images/tokens/${stakingToken.symbol}.png`} width={24} height={24} alt={stakingToken.symbol} />\n          <Text ml=\"4px\" bold>\n            {stakingToken.symbol}\n          </Text>\n        </Flex>\n      </Flex>\n      <BalanceInput\n        value={stakeAmount}\n        onUserInput={handleStakeInputChange}\n        currencyValue={`~${usdValueStaked || 0} USD`}\n      />\n      <Text mt=\"8px\" ml=\"auto\" color=\"textSubtle\" fontSize=\"12px\" mb=\"8px\">\n        {t('Balance: %balance%', { balance: getFullDisplayBalance(stakingMax, stakingToken.decimals) })}\n      </Text>\n      <Slider\n        min={0}\n        max={100}\n        value={percent}\n        onValueChanged={handleChangePercent}\n        name=\"stake\"\n        valueLabel={`${percent}%`}\n        step={1}\n      />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mt=\"8px\">\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(25)}>\n          25%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(50)}>\n          50%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(75)}>\n          75%\n        </StyledButton>\n        <StyledButton scale=\"xs\" mx=\"2px\" p=\"4px 16px\" variant=\"tertiary\" onClick={() => handleChangePercent(100)}>\n          MAX\n        </StyledButton>\n      </Flex>\n      {isRemovingStake && hasUnstakingFee && (\n        <FeeSummary stakingTokenSymbol={stakingToken.symbol} stakeAmount={stakeAmount} />\n      )}\n      <Button\n        isLoading={pendingTx}\n        endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n        onClick={handleConfirmClick}\n        disabled={!stakeAmount || parseFloat(stakeAmount) === 0}\n        mt=\"24px\"\n      >\n        {pendingTx ? t('Confirming') : t('Confirm')}\n      </Button>\n      {!isRemovingStake && (\n        <Button mt=\"8px\" as=\"a\" external href={BASE_EXCHANGE_URL} variant=\"secondary\">\n          {t('Get %symbol%', { symbol: stakingToken.symbol })}\n        </Button>\n      )}\n    </Modal>\n  )\n}\n\nexport default VaultStakeModal\n","import React from 'react'\nimport { Flex, Text, IconButton, AddIcon, MinusIcon, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool } from 'state/types'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport { convertSharesToCake } from '../../../helpers'\nimport VaultStakeModal from '../VaultStakeModal'\n\ninterface HasStakeActionProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n}\n\nconst HasSharesActions: React.FC<HasStakeActionProps> = ({ pool, stakingTokenBalance }) => {\n  const {\n    userData: { userShares },\n    pricePerFullShare,\n  } = useCakeVault()\n  const { stakingToken } = pool\n  const { cakeAsBigNumber, cakeAsNumberBalance } = convertSharesToCake(userShares, pricePerFullShare)\n  const cakePriceBusd = usePriceCakeBusd()\n  const stakedDollarValue = getBalanceNumber(cakeAsBigNumber.multipliedBy(cakePriceBusd), stakingToken.decimals)\n\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n  const [onPresentUnstake] = useModal(<VaultStakeModal stakingMax={cakeAsBigNumber} pool={pool} isRemovingStake />)\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      <Flex flexDirection=\"column\">\n        <Balance fontSize=\"20px\" bold value={cakeAsNumberBalance} decimals={5} />\n        <Text fontSize=\"12px\" color=\"textSubtle\">\n          {cakePriceBusd.gt(0) ? (\n            <Balance value={stakedDollarValue} fontSize=\"12px\" color=\"textSubtle\" decimals={2} prefix=\"~\" unit=\" USD\" />\n          ) : (\n            <Skeleton mt=\"1px\" height={16} width={64} />\n          )}\n        </Text>\n      </Flex>\n      <Flex>\n        <IconButton variant=\"secondary\" onClick={onPresentUnstake} mr=\"6px\">\n          <MinusIcon color=\"primary\" width=\"24px\" />\n        </IconButton>\n        <IconButton variant=\"secondary\" onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>\n          <AddIcon color=\"primary\" width=\"24px\" height=\"24px\" />\n        </IconButton>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default HasSharesActions\n","import React from 'react'\nimport { Flex, Button, useModal, Skeleton } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useTranslation } from 'contexts/Localization'\nimport { Pool } from 'state/types'\nimport NotEnoughTokensModal from '../../PoolCard/Modals/NotEnoughTokensModal'\nimport VaultStakeModal from '../VaultStakeModal'\nimport HasSharesActions from './HasSharesActions'\n\ninterface VaultStakeActionsProps {\n  pool: Pool\n  stakingTokenBalance: BigNumber\n  accountHasSharesStaked: boolean\n  isLoading?: boolean\n}\n\nconst VaultStakeActions: React.FC<VaultStakeActionsProps> = ({\n  pool,\n  stakingTokenBalance,\n  accountHasSharesStaked,\n  isLoading = false,\n}) => {\n  const { stakingToken } = pool\n  const { t } = useTranslation()\n  const [onPresentTokenRequired] = useModal(<NotEnoughTokensModal tokenSymbol={stakingToken.symbol} />)\n  const [onPresentStake] = useModal(<VaultStakeModal stakingMax={stakingTokenBalance} pool={pool} />)\n\n  const renderStakeAction = () => {\n    return accountHasSharesStaked ? (\n      <HasSharesActions pool={pool} stakingTokenBalance={stakingTokenBalance} />\n    ) : (\n      <Button onClick={stakingTokenBalance.gt(0) ? onPresentStake : onPresentTokenRequired}>{t('Stake')}</Button>\n    )\n  }\n\n  return <Flex flexDirection=\"column\">{isLoading ? <Skeleton width=\"100%\" height=\"52px\" /> : renderStakeAction()}</Flex>\n}\n\nexport default VaultStakeActions\n","import BigNumber from 'bignumber.js'\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Text, Box } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCake, useCakeVaultContract } from 'hooks/useContract'\nimport useLastUpdated from 'hooks/useLastUpdated'\nimport { Pool } from 'state/types'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport VaultApprovalAction from './VaultApprovalAction'\nimport VaultStakeActions from './VaultStakeActions'\n\nconst InlineText = styled(Text)`\n  display: inline;\n`\n\nconst CakeVaultCardActions: React.FC<{\n  pool: Pool\n  accountHasSharesStaked: boolean\n  isLoading: boolean\n}> = ({ pool, accountHasSharesStaked, isLoading }) => {\n  const { account } = useWeb3React()\n  const { stakingToken, userData } = pool\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n  const [isVaultApproved, setIsVaultApproved] = useState(false)\n  const cakeContract = useCake()\n  const cakeVaultContract = useCakeVaultContract()\n  const { t } = useTranslation()\n  const stakingTokenBalance = userData?.stakingTokenBalance ? new BigNumber(userData.stakingTokenBalance) : BIG_ZERO\n\n  useEffect(() => {\n    const checkApprovalStatus = async () => {\n      try {\n        const response = await cakeContract.methods.allowance(account, cakeVaultContract.options.address).call()\n        const currentAllowance = new BigNumber(response)\n        setIsVaultApproved(currentAllowance.gt(0))\n      } catch (error) {\n        setIsVaultApproved(false)\n      }\n    }\n\n    checkApprovalStatus()\n  }, [account, cakeContract, cakeVaultContract, lastUpdated])\n\n  return (\n    <Flex flexDirection=\"column\">\n      <Flex flexDirection=\"column\">\n        <Box display=\"inline\">\n          <InlineText\n            color={accountHasSharesStaked ? 'secondary' : 'textSubtle'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? stakingToken.symbol : t('Stake')}{' '}\n          </InlineText>\n          <InlineText\n            color={accountHasSharesStaked ? 'textSubtle' : 'secondary'}\n            textTransform=\"uppercase\"\n            bold\n            fontSize=\"12px\"\n          >\n            {accountHasSharesStaked ? t('Staked (compounding)') : `${stakingToken.symbol}`}\n          </InlineText>\n        </Box>\n        {isVaultApproved ? (\n          <VaultStakeActions\n            isLoading={isLoading}\n            pool={pool}\n            stakingTokenBalance={stakingTokenBalance}\n            accountHasSharesStaked={accountHasSharesStaked}\n          />\n        ) : (\n          <VaultApprovalAction pool={pool} isLoading={isLoading} setLastUpdated={setLastUpdated} />\n        )}\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default CakeVaultCardActions\n","import React from 'react'\nimport { Text, TooltipText, useTooltip } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Balance from 'components/Balance'\n\ninterface RecentCakeProfitBalanceProps {\n  cakeToDisplay: number\n  dollarValueToDisplay: number\n  dateStringToDisplay: string\n}\n\nconst RecentCakeProfitBalance: React.FC<RecentCakeProfitBalanceProps> = ({\n  cakeToDisplay,\n  dollarValueToDisplay,\n  dateStringToDisplay,\n}) => {\n  const { t } = useTranslation()\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\n    <>\n      <Balance fontSize=\"16px\" value={cakeToDisplay} decimals={3} bold unit=\" TENDIE\" />\n      <Balance fontSize=\"16px\" value={dollarValueToDisplay} decimals={2} bold prefix=\"~$\" />\n      {t('Earned since your last action')}\n      <Text>{dateStringToDisplay}</Text>\n    </>,\n    {\n      placement: 'bottom-end',\n    },\n  )\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <TooltipText ref={targetRef} small>\n        <Balance fontSize=\"14px\" value={cakeToDisplay} />\n      </TooltipText>\n    </>\n  )\n}\n\nexport default RecentCakeProfitBalance\n","import React from 'react'\nimport { Flex, Text } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { convertSharesToCake } from 'views/Pools/helpers'\nimport RecentCakeProfitBalance from './RecentCakeProfitBalance'\n\nconst RecentCakeProfitCountdownRow = () => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const {\n    pricePerFullShare,\n    userData: { cakeAtLastUserAction, userShares, lastUserActionTime },\n  } = useCakeVault()\n  const shouldDisplayCakeProfit =\n    account && cakeAtLastUserAction && cakeAtLastUserAction.gt(0) && userShares && userShares.gt(0)\n  const currentSharesAsCake = convertSharesToCake(userShares, pricePerFullShare)\n  const cakeProfit = currentSharesAsCake.cakeAsBigNumber.minus(cakeAtLastUserAction)\n  const cakeToDisplay = cakeProfit.gte(0) ? getBalanceNumber(cakeProfit, 18) : 0\n  const cakePriceBusd = usePriceCakeBusd()\n  const dollarValueOfCake = cakeProfit.times(cakePriceBusd)\n  const dollarValueToDisplay = dollarValueOfCake.gte(0) ? getBalanceNumber(dollarValueOfCake, 18) : 0\n\n  const lastActionInMs = lastUserActionTime && parseInt(lastUserActionTime) * 1000\n  const dateTimeLastAction = new Date(lastActionInMs)\n  const dateStringToDisplay = dateTimeLastAction.toLocaleString()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"space-between\">\n      <Text fontSize=\"14px\">{t('Recent TENDIE profit:')}</Text>\n      {shouldDisplayCakeProfit && (\n        <RecentCakeProfitBalance\n          cakeToDisplay={cakeToDisplay}\n          dollarValueToDisplay={dollarValueToDisplay}\n          dateStringToDisplay={dateStringToDisplay}\n        />\n      )}\n    </Flex>\n  )\n}\n\nexport default RecentCakeProfitCountdownRow\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Box, CardBody, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport UnlockButton from 'components/UnlockButton'\nimport { useCakeVault } from 'state/hooks'\nimport { Pool } from 'state/types'\nimport AprRow from '../PoolCard/AprRow'\nimport { StyledCard, StyledCardInner } from '../PoolCard/StyledCard'\nimport CardFooter from '../PoolCard/CardFooter'\nimport StyledCardHeader from '../PoolCard/StyledCardHeader'\nimport VaultCardActions from './VaultCardActions'\nimport UnstakingFeeCountdownRow from './UnstakingFeeCountdownRow'\nimport RecentCakeProfitRow from './RecentCakeProfitRow'\n\nconst StyledCardBody = styled(CardBody)<{ isLoading: boolean }>`\n  min-height: ${({ isLoading }) => (isLoading ? '0' : '254px')};\n`\n\ninterface CakeVaultProps {\n  pool: Pool\n  showStakedOnly: boolean\n}\n\nconst CakeVaultCard: React.FC<CakeVaultProps> = ({ pool, showStakedOnly }) => {\n  const { t } = useTranslation()\n  const { isXl } = useMatchBreakpoints()\n  const { account } = useWeb3React()\n  const {\n    userData: { userShares, isLoading: isVaultUserDataLoading },\n    fees: { performanceFee },\n  } = useCakeVault()\n  //   Estimate & manual for now. 288 = once every 5 mins. We can change once we have a better sense of this\n  const timesCompoundedDaily = 288\n  const accountHasSharesStaked = userShares && userShares.gt(0)\n  const isLoading = !pool.userData || isVaultUserDataLoading\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\n\n  if (showStakedOnly && !accountHasSharesStaked) {\n    return null\n  }\n\n  return (\n    <StyledCard isPromoted={{ isDesktop: isXl }}>\n      <StyledCardInner isPromotedPool>\n        <StyledCardHeader\n          isPromotedPool\n          isStaking={accountHasSharesStaked}\n          isAutoVault\n          earningTokenSymbol=\"TENDIE\"\n          stakingTokenSymbol=\"TENDIE\"\n        />\n        <StyledCardBody isLoading={isLoading}>\n          <AprRow\n            pool={pool}\n            isAutoVault\n            compoundFrequency={timesCompoundedDaily}\n            performanceFee={performanceFeeAsDecimal}\n          />\n          <Box mt=\"24px\">\n            <RecentCakeProfitRow />\n          </Box>\n          <Box mt=\"8px\">\n            <UnstakingFeeCountdownRow />\n          </Box>\n          <Flex mt=\"32px\" flexDirection=\"column\">\n            {account ? (\n              <VaultCardActions pool={pool} accountHasSharesStaked={accountHasSharesStaked} isLoading={isLoading} />\n            ) : (\n              <>\n                <Text mb=\"10px\" textTransform=\"uppercase\" fontSize=\"12px\" color=\"textSubtle\" bold>\n                  {t('Start earning')}\n                </Text>\n                <UnlockButton />\n              </>\n            )}\n          </Flex>\n        </StyledCardBody>\n        <CardFooter pool={pool} account={account} isAutoVault />\n      </StyledCardInner>\n    </StyledCard>\n  )\n}\n\nexport default CakeVaultCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport {\n  ButtonMenu,\n  ButtonMenuItem,\n  Button,\n  HelpIcon,\n  Toggle,\n  Text,\n  Flex,\n  NotificationDot,\n  Link as UiKitLink,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst ButtonText = styled(Text)`\n  display: none;\n  ${({ theme }) => theme.mediaQueries.lg} {\n    display: block;\n  }\n`\n\nconst StyledLink = styled(UiKitLink)`\n  width: 100%;\n\n  &:hover {\n    text-decoration: none;\n  }\n`\n\nconst PoolTabButtons = ({ stakedOnly, setStakedOnly, hasStakeInFinishedPools }) => {\n  const { url, isExact } = useRouteMatch()\n  const { t } = useTranslation()\n\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" mb=\"32px\">\n      <Flex alignItems=\"center\" flexDirection={['column', null, 'row', null]}>\n        <ButtonMenu activeIndex={isExact ? 0 : 1} scale=\"sm\" variant=\"subtle\">\n          <ButtonMenuItem as={Link} to={`${url}`}>\n            {t('Live')}\n          </ButtonMenuItem>\n          <NotificationDot show={hasStakeInFinishedPools}>\n            <ButtonMenuItem as={Link} to={`${url}/history`}>\n              {t('Finished')}\n            </ButtonMenuItem>\n          </NotificationDot>\n        </ButtonMenu>\n        <Flex mt={['4px', null, 0, null]} ml={[0, null, '24px', null]} justifyContent=\"center\" alignItems=\"center\">\n          <Toggle scale=\"sm\" checked={stakedOnly} onChange={() => setStakedOnly((prev) => !prev)} />\n          <Text ml=\"8px\">{t('Staked only')}</Text>\n        </Flex>\n      </Flex>\n      <Flex ml=\"24px\" alignItems=\"center\" justifyContent=\"flex-end\">\n        <StyledLink external href=\"https://docs.pancakeswap.finance/syrup-pools/syrup-pool\">\n          <Button px={['14px', null, null, null, '20px']} variant=\"subtle\">\n            <ButtonText color=\"backgroundAlt\" bold fontSize=\"16px\">\n              {t('Help')}\n            </ButtonText>\n            <HelpIcon color=\"backgroundAlt\" ml={[null, null, null, 0, '6px']} />\n          </Button>\n        </StyledLink>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default PoolTabButtons\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { DEFAULT_GAS } from 'config'\nimport styled from 'styled-components'\nimport { Modal, Text, Flex, Button, HelpIcon, AutoRenewIcon, useTooltip } from '@pancakeswap/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVaultContract } from 'hooks/useContract'\nimport useTheme from 'hooks/useTheme'\nimport useToast from 'hooks/useToast'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\nimport Balance from 'components/Balance'\n\ninterface BountyModalProps {\n  cakeBountyToDisplay: number\n  dollarBountyToDisplay: number\n  totalPendingCakeHarvest: BigNumber\n  callFee: number\n  onDismiss?: () => void\n  TooltipComponent: React.ElementType\n}\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.backgroundDisabled};\n  height: 1px;\n  margin: 16px auto;\n  width: 100%;\n`\n\nconst BountyModal: React.FC<BountyModalProps> = ({\n  cakeBountyToDisplay,\n  dollarBountyToDisplay,\n  totalPendingCakeHarvest,\n  callFee,\n  onDismiss,\n  TooltipComponent,\n}) => {\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const { theme } = useTheme()\n  const { toastError, toastSuccess } = useToast()\n  const cakeVaultContract = useCakeVaultContract()\n  const [pendingTx, setPendingTx] = useState(false)\n  const callFeeAsDecimal = callFee / 100\n  const totalYieldToDisplay = getBalanceNumber(totalPendingCakeHarvest, 18)\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom',\n    tooltipPadding: { right: 15 },\n  })\n\n  const handleConfirmClick = async () => {\n    cakeVaultContract.methods\n      .harvest()\n      .send({ from: account, gas: DEFAULT_GAS })\n      .on('sending', () => {\n        setPendingTx(true)\n      })\n      .on('receipt', () => {\n        toastSuccess(t('Bounty collected!'), t('TENDIE bounty has been sent to your wallet.'))\n        setPendingTx(false)\n        onDismiss()\n      })\n      .on('error', (error) => {\n        console.error(error)\n        toastError(\n          t('Could not be collected'),\n          t('There may be an issue with your transaction, or another user claimed the bounty first.'),\n        )\n        setPendingTx(false)\n        onDismiss()\n      })\n  }\n\n  return (\n    <Modal title={t('Claim Bounty')} onDismiss={onDismiss} headerBackground={theme.colors.gradients.cardHeader}>\n      {tooltipVisible && tooltip}\n      <Flex alignItems=\"flex-start\" justifyContent=\"space-between\">\n        <Text>{t('You’ll claim')}</Text>\n        <Flex flexDirection=\"column\">\n          <Balance bold value={cakeBountyToDisplay} decimals={7} unit=\" TENDIE\" />\n          <Text fontSize=\"12px\" color=\"textSubtle\">\n            <Balance\n              fontSize=\"12px\"\n              color=\"textSubtle\"\n              value={dollarBountyToDisplay}\n              decimals={2}\n              unit=\" USD\"\n              prefix=\"~\"\n            />\n          </Text>\n        </Flex>\n      </Flex>\n      <Divider />\n      <Flex alignItems=\"center\" justifyContent=\"space-between\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Pool total pending yield')}\n        </Text>\n        <Balance color=\"textSubtle\" value={totalYieldToDisplay} unit=\" TENDIE\" />\n      </Flex>\n      <Flex alignItems=\"center\" justifyContent=\"space-between\" mb=\"24px\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('Bounty')}\n        </Text>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {callFeeAsDecimal}%\n        </Text>\n      </Flex>\n      {account ? (\n        <Button\n          isLoading={pendingTx}\n          endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\n          onClick={handleConfirmClick}\n          mb=\"28px\"\n        >\n          {t('Confirm')}\n        </Button>\n      ) : (\n        <UnlockButton mb=\"28px\" />\n      )}\n      <Flex justifyContent=\"center\" alignItems=\"center\">\n        <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n          {t('What’s this?')}\n        </Text>\n        <span ref={targetRef}>\n          <HelpIcon color=\"textSubtle\" />\n        </span>\n      </Flex>\n    </Modal>\n  )\n}\n\nexport default BountyModal\n","import React, { useMemo } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport {\n  Card,\n  CardBody,\n  Text,\n  Flex,\n  HelpIcon,\n  Button,\n  Heading,\n  Skeleton,\n  useModal,\n  Box,\n  useTooltip,\n} from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useCakeVault, usePriceCakeBusd } from 'state/hooks'\nimport Balance from 'components/Balance'\nimport BountyModal from './BountyModal'\n\nconst StyledCard = styled(Card)`\n  width: 100%;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 240px;\n  }\n`\n\nconst BountyCard = () => {\n  const { t } = useTranslation()\n  const {\n    estimatedCakeBountyReward,\n    totalPendingCakeHarvest,\n    fees: { callFee },\n  } = useCakeVault()\n  const cakePriceBusd = usePriceCakeBusd()\n  const cakePriceBusdAsNumber = cakePriceBusd.toNumber()\n\n  const estimatedDollarBountyReward = useMemo(() => {\n    return new BigNumber(estimatedCakeBountyReward).multipliedBy(cakePriceBusdAsNumber)\n  }, [cakePriceBusdAsNumber, estimatedCakeBountyReward])\n\n  const hasFetchedDollarBounty =\n    cakePriceBusdAsNumber && estimatedDollarBountyReward ? estimatedDollarBountyReward.gte(0) : false\n  const hasFetchedCakeBounty = estimatedCakeBountyReward ? estimatedCakeBountyReward.gte(0) : false\n  const dollarBountyToDisplay = hasFetchedDollarBounty ? getBalanceNumber(estimatedDollarBountyReward, 18) : 0\n  const cakeBountyToDisplay = hasFetchedCakeBounty ? getBalanceNumber(estimatedCakeBountyReward, 18) : 0\n\n  const TooltipComponent = () => (\n    <>\n      <Text mb=\"16px\">{t('This bounty is given as a reward for providing a service to other users.')}</Text>\n      <Text mb=\"16px\">\n        {t(\n          'Whenever you successfully claim the bounty, you’re also helping out by activating the Auto TENDIE Pool’s compounding function for everyone.',\n        )}\n      </Text>\n      <Text style={{ fontWeight: 'bold' }}>\n        {t('Auto-Compound Bounty: %fee%% of all Auto TENDIE pool users pending yield', { fee: callFee / 100 })}\n      </Text>\n    </>\n  )\n\n  const [onPresentBountyModal] = useModal(\n    <BountyModal\n      cakeBountyToDisplay={cakeBountyToDisplay}\n      dollarBountyToDisplay={dollarBountyToDisplay}\n      totalPendingCakeHarvest={totalPendingCakeHarvest}\n      callFee={callFee}\n      TooltipComponent={TooltipComponent}\n    />,\n  )\n\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(<TooltipComponent />, {\n    placement: 'bottom-end',\n    tooltipOffset: [20, 10],\n  })\n\n  return (\n    <>\n      {tooltipVisible && tooltip}\n      <StyledCard>\n        <CardBody>\n          <Flex flexDirection=\"column\">\n            <Flex alignItems=\"center\" mb=\"12px\">\n              <Text fontSize=\"16px\" bold color=\"textSubtle\" mr=\"4px\">\n                {t('Auto TENDIE Bounty')}\n              </Text>\n              <Box ref={targetRef}>\n                <HelpIcon color=\"textSubtle\" />\n              </Box>\n            </Flex>\n          </Flex>\n          <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <Flex flexDirection=\"column\" mr=\"12px\">\n              <Heading>\n                {hasFetchedCakeBounty ? (\n                  <Balance fontSize=\"20px\" bold value={cakeBountyToDisplay} decimals={3} />\n                ) : (\n                  <Skeleton height={20} width={96} mb=\"2px\" />\n                )}\n              </Heading>\n              {hasFetchedDollarBounty ? (\n                <Balance\n                  fontSize=\"12px\"\n                  color=\"textSubtle\"\n                  value={dollarBountyToDisplay}\n                  decimals={2}\n                  unit=\" USD\"\n                  prefix=\"~\"\n                />\n              ) : (\n                <Skeleton height={16} width={62} />\n              )}\n            </Flex>\n            <Button\n              disabled={!dollarBountyToDisplay || !cakeBountyToDisplay || !callFee}\n              onClick={onPresentBountyModal}\n              scale=\"sm\"\n            >\n              {t('Claim')}\n            </Button>\n          </Flex>\n        </CardBody>\n      </StyledCard>\n    </>\n  )\n}\n\nexport default BountyCard\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWeb3React } from '@web3-react/core'\nimport { Heading, Flex, Image } from '@pancakeswap/uikit'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport { useTranslation } from 'contexts/Localization'\nimport usePersistState from 'hooks/usePersistState'\nimport { usePools, useFetchCakeVault } from 'state/hooks'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport PageHeader from 'components/PageHeader'\nimport PoolCard from './components/PoolCard'\nimport CakeVaultCard from './components/CakeVaultCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport BountyCard from './components/BountyCard'\n\nconst NUMBER_OF_POOLS_VISIBLE = 12\n\nconst Pools: React.FC = () => {\n  useFetchCakeVault()\n  const { path } = useRouteMatch()\n  const { t } = useTranslation()\n  const { account } = useWeb3React()\n  const pools = usePools(account)\n  const [stakedOnly, setStakedOnly] = usePersistState(false, 'pancake_pool_staked')\n  const [numberOfPoolsVisible, setNumberOfPoolsVisible] = useState(NUMBER_OF_POOLS_VISIBLE)\n  const [observerIsSet, setObserverIsSet] = useState(false)\n  const loadMoreRef = useRef<HTMLDivElement>(null)\n\n  const [finishedPools, openPools] = useMemo(() => partition(pools, (pool) => pool.isFinished), [pools])\n  const stakedOnlyFinishedPools = useMemo(\n    () => finishedPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [finishedPools],\n  )\n  const stakedOnlyOpenPools = useMemo(\n    () => openPools.filter((pool) => pool.userData && new BigNumber(pool.userData.stakedBalance).isGreaterThan(0)),\n    [openPools],\n  )\n  const hasStakeInFinishedPools = stakedOnlyFinishedPools.length > 0\n\n  // This pool is passed explicitly to the cake vault\n  const cakePoolData = useMemo(() => openPools.find((pool) => pool.sousId === 0), [openPools])\n\n  useEffect(() => {\n    const showMorePools = (entries) => {\n      const [entry] = entries\n      if (entry.isIntersecting) {\n        setNumberOfPoolsVisible((poolsCurrentlyVisible) => poolsCurrentlyVisible + NUMBER_OF_POOLS_VISIBLE)\n      }\n    }\n\n    if (!observerIsSet) {\n      const loadMoreObserver = new IntersectionObserver(showMorePools, {\n        rootMargin: '0px',\n        threshold: 1,\n      })\n      loadMoreObserver.observe(loadMoreRef.current)\n      setObserverIsSet(true)\n    }\n  }, [observerIsSet])\n\n  return (\n    <>\n      <PageHeader>\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, 'row']}>\n          <Flex flexDirection=\"column\" mr={['8px', 0]}>\n            <Heading as=\"h1\" scale=\"xxl\" color=\"secondary\" mb=\"24px\">\n              {t('Pools')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('Just stake some tokens to earn.')}\n            </Heading>\n            <Heading scale=\"md\" color=\"text\">\n              {t('High APR, low risk.')}\n            </Heading>\n          </Flex>\n          <Flex height=\"fit-content\" justifyContent=\"center\" alignItems=\"center\" mt={['24px', null, '0']}>\n            <BountyCard />\n          </Flex>\n        </Flex>\n      </PageHeader>\n      <Page>\n        <PoolTabButtons\n          stakedOnly={stakedOnly}\n          setStakedOnly={setStakedOnly}\n          hasStakeInFinishedPools={hasStakeInFinishedPools}\n        />\n        <FlexLayout>\n          <Route exact path={`${path}`}>\n            <>\n              <CakeVaultCard pool={cakePoolData} showStakedOnly={stakedOnly} />\n              {stakedOnly\n                ? orderBy(stakedOnlyOpenPools, ['sortOrder'])\n                    .slice(0, numberOfPoolsVisible)\n                    .map((pool) => <PoolCard key={pool.sousId} pool={pool} account={account} />)\n                : orderBy(openPools, ['sortOrder'])\n                    .slice(0, numberOfPoolsVisible)\n                    .map((pool) => <PoolCard key={pool.sousId} pool={pool} account={account} />)}\n            </>\n          </Route>\n          <Route path={`${path}/history`}>\n            {stakedOnly\n              ? orderBy(stakedOnlyFinishedPools, ['sortOrder'])\n                  .slice(0, numberOfPoolsVisible)\n                  .map((pool) => <PoolCard key={pool.sousId} pool={pool} account={account} />)\n              : orderBy(finishedPools, ['sortOrder'])\n                  .slice(0, numberOfPoolsVisible)\n                  .map((pool) => <PoolCard key={pool.sousId} pool={pool} account={account} />)}\n          </Route>\n        </FlexLayout>\n        <div ref={loadMoreRef} />\n        <Image\n          mx=\"auto\"\n          mt=\"12px\"\n          src=\"/images/3d-syrup-bunnies.png\"\n          alt=\"Pancake illustration\"\n          width={500}\n          height={300}\n        />\n      </Page>\n    </>\n  )\n}\n\nexport default Pools\n","import { createBrowserHistory } from 'history'\n\n// Manually create the history object so we can access outside the Router e.g. in modals\nconst history = createBrowserHistory()\n\nexport default history\n","import React, { lazy } from 'react'\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport BigNumber from 'bignumber.js'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport { useFetchPriceList, useFetchProfile, useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport Menu from './components/Menu'\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\nimport ToastListener from './components/ToastListener'\nimport PageLoader from './components/PageLoader'\nimport EasterEgg from './components/EasterEgg'\nimport Pools from './views/Pools'\nimport history from './routerHistory'\n\n// Route-based code splitting\n// Only pool is included in the main bundle because of it's the most visited page\nconst Home = lazy(() => import('./views/Home'))\nconst Farms = lazy(() => import('./views/Farms'))\nconst NotFound = lazy(() => import('./views/NotFound'))\nconst Predictions = lazy(() => import('./views/Predictions'))\n\n// This config is required for number formatting\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  useEagerConnect()\n  useFetchPublicData()\n  useFetchProfile()\n  useFetchPriceList()\n\n  return (\n    <Router history={history}>\n      <ResetCSS />\n      <GlobalStyle />\n      <Menu>\n        <SuspenseWithChunkError fallback={<PageLoader />}>\n          <Switch>\n            <Route path=\"/\" exact>\n              <Home />\n            </Route>\n            <Route path=\"/farms\">\n              <Farms />\n            </Route>\n            <Route path=\"/pools\">\n              <Pools />\n            </Route>\n            <Route path=\"/prediction\">\n              <Predictions />\n            </Route>\n            {/* Redirect */}\n            <Route path=\"/staking\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            <Route path=\"/syrup\">\n              <Redirect to=\"/pools\" />\n            </Route>\n            {/* 404 */}\n            <Route component={NotFound} />\n          </Switch>\n        </SuspenseWithChunkError>\n      </Menu>\n      <EasterEgg iterations={2} />\n      <ToastListener />\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { Provider } from 'react-redux'\nimport { getLibrary } from 'utils/web3React'\nimport { ThemeContextProvider } from 'contexts/ThemeContext'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport store from 'state'\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <Provider store={store}>\n        <ToastsProvider>\n          <HelmetProvider>\n            <ThemeContextProvider>\n              <LanguageProvider>\n                <RefreshContextProvider>\n                  <ModalProvider>{children}</ModalProvider>\n                </RefreshContextProvider>\n              </LanguageProvider>\n            </ThemeContextProvider>\n          </HelmetProvider>\n        </ToastsProvider>\n      </Provider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport teamsList from 'config/constants/teams'\nimport { Team } from 'config/constants/types'\nimport { TeamsById, TeamsState } from '../types'\nimport { getTeam, getTeams } from './helpers'\n\nconst teamsById: TeamsById = teamsList.reduce((accum, team) => {\n  return {\n    ...accum,\n    [team.id]: team,\n  }\n}, {})\n\nconst initialState: TeamsState = {\n  isInitialized: false,\n  isLoading: true,\n  data: teamsById,\n}\n\nexport const teamsSlice = createSlice({\n  name: 'teams',\n  initialState,\n  reducers: {\n    fetchStart: (state) => {\n      state.isLoading = true\n    },\n    fetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    teamFetchSucceeded: (state, action: PayloadAction<Team>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data[action.payload.id] = action.payload\n    },\n    teamsFetchSucceeded: (state, action: PayloadAction<TeamsById>) => {\n      state.isInitialized = true\n      state.isLoading = false\n      state.data = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { fetchStart, teamFetchSucceeded, fetchFailed, teamsFetchSucceeded } = teamsSlice.actions\n\n// Thunks\nexport const fetchTeam = (teamId: number) => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const team = await getTeam(teamId)\n    dispatch(teamFetchSucceeded(team))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport const fetchTeams = () => async (dispatch) => {\n  try {\n    dispatch(fetchStart())\n    const teams = await getTeams()\n    dispatch(teamsFetchSucceeded(teams))\n  } catch (error) {\n    dispatch(fetchFailed())\n  }\n}\n\nexport default teamsSlice.reducer\n","import { Profile } from 'state/types'\n\nexport type ProfileResponse = {\n  0: string\n  1: string\n  2: string\n  3: string\n  4: string\n  5: boolean\n}\n\nexport const transformProfileResponse = (profileResponse: ProfileResponse): Partial<Profile> => {\n  const { 0: userId, 1: numberPoints, 2: teamId, 3: nftAddress, 4: tokenId, 5: isActive } = profileResponse\n\n  return {\n    userId: Number(userId),\n    points: Number(numberPoints),\n    teamId: Number(teamId),\n    tokenId: Number(tokenId),\n    nftAddress,\n    isActive,\n  }\n}\n","import Cookies from 'js-cookie'\nimport { getProfileContract } from 'utils/contractHelpers'\nimport { Nft } from 'config/constants/types'\nimport { getNftByTokenId } from 'utils/collectibles'\nimport { Profile } from 'state/types'\nimport { getTeam } from 'state/teams/helpers'\nimport { transformProfileResponse } from './helpers'\n\nconst profileContract = getProfileContract()\nconst profileApi = process.env.REACT_APP_API_PROFILE\n\nexport interface GetProfileResponse {\n  hasRegistered: boolean\n  profile?: Profile\n}\n\nconst getUsername = async (address: string): Promise<string> => {\n  try {\n    const response = await fetch(`${profileApi}/api/users/${address}`)\n\n    if (!response.ok) {\n      return ''\n    }\n\n    const { username = '' } = await response.json()\n\n    return username\n  } catch (error) {\n    return ''\n  }\n}\n\nconst getProfile = async (address: string): Promise<GetProfileResponse> => {\n  try {\n    const hasRegistered = (await profileContract.methods.hasRegistered(address).call()) as boolean\n\n    if (!hasRegistered) {\n      return { hasRegistered, profile: null }\n    }\n\n    const profileResponse = await profileContract.methods.getUserProfile(address).call()\n    const { userId, points, teamId, tokenId, nftAddress, isActive } = transformProfileResponse(profileResponse)\n    const team = await getTeam(teamId)\n    const username = await getUsername(address)\n\n    // If the profile is not active the tokenId returns 0, which is still a valid token id\n    // so only fetch the nft data if active\n    let nft: Nft\n    if (isActive) {\n      nft = await getNftByTokenId(nftAddress, tokenId)\n\n      // Save the preview image in a cookie so it can be used on the exchange\n      Cookies.set(\n        `profile_${address}`,\n        {\n          username,\n          avatar: `https://pancakeswap.finance/images/nfts/${nft?.images.sm}`,\n        },\n        { domain: 'pancakeswap.finance', secure: true, expires: 30 },\n      )\n    }\n\n    const profile = {\n      userId,\n      points,\n      teamId,\n      tokenId,\n      username,\n      nftAddress,\n      isActive,\n      nft,\n      team,\n    } as Profile\n\n    return { hasRegistered, profile }\n  } catch (error) {\n    return null\n  }\n}\n\nexport default getProfile\n","/* eslint-disable no-param-reassign */\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { ProfileState } from 'state/types'\nimport type { AppDispatch } from 'state'\nimport getProfile, { GetProfileResponse } from './getProfile'\n\nconst initialState: ProfileState = {\n  isInitialized: false,\n  isLoading: true,\n  hasRegistered: false,\n  data: null,\n}\n\nexport const profileSlice = createSlice({\n  name: 'profile',\n  initialState,\n  reducers: {\n    profileFetchStart: (state) => {\n      state.isLoading = true\n    },\n    profileFetchSucceeded: (_state, action: PayloadAction<GetProfileResponse>) => {\n      const { profile, hasRegistered } = action.payload\n\n      return {\n        isInitialized: true,\n        isLoading: false,\n        hasRegistered,\n        data: profile,\n      }\n    },\n    profileFetchFailed: (state) => {\n      state.isLoading = false\n      state.isInitialized = true\n    },\n    profileClear: () => ({\n      ...initialState,\n      isLoading: false,\n    }),\n    addPoints: (state, action: PayloadAction<number>) => {\n      state.data.points += action.payload\n    },\n  },\n})\n\n// Actions\nexport const { profileFetchStart, profileFetchSucceeded, profileFetchFailed, profileClear, addPoints } =\n  profileSlice.actions\n\n// Thunks\n// TODO: this should be an AsyncThunk\nexport const fetchProfile = (address: string) => async (dispatch: AppDispatch) => {\n  try {\n    dispatch(profileFetchStart())\n    const response = await getProfile(address)\n    dispatch(profileFetchSucceeded(response))\n  } catch (error) {\n    dispatch(profileFetchFailed())\n  }\n}\n\nexport default profileSlice.reducer\n","import tokens from './tokens'\nimport { FarmConfig } from './types'\n\nconst farms: FarmConfig[] = [\n  /**\n   * These 3 farms (PID 0, 251, 252) should always be at the top of the file.\n   */\n  {\n    pid: 0,\n    lpSymbol: 'TENDIE',\n    lpAddresses: {\n      97: '',\n      56: '0x9853A30C69474BeD37595F9B149ad634b5c323d9',\n    },\n    token: tokens.syrup,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 1,\n    lpSymbol: 'TENDIE-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x97C1e417848059Ce21767F828E81F5d0e7974e86',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.wbnb,\n  },\n  {\n    pid: 2,\n    lpSymbol: 'TENDIE-BUSD LP',\n    lpAddresses: {\n      97: '',\n      56: '0xCfF43c954A7f83Dd8a1cbdA16858e362D7c1B6B1',\n    },\n    token: tokens.cake,\n    quoteToken: tokens.busd,\n  },\n  {\n    pid: 3,\n    lpSymbol: 'BUSD-BNB LP',\n    lpAddresses: {\n      97: '',\n      56: '0x58F876857a02D6762E0101bb5C46A8c1ED44Dc16',\n    },\n    token: tokens.busd,\n    quoteToken: tokens.wbnb,\n  },\n  \n]\n\nexport default farms\n","import { Nft, NftSource, NftType } from './types'\n\nexport const IPFS_GATEWAY = 'https://gateway.pinata.cloud'\n\nexport const nftSources: NftSource = {\n  [NftType.PANTENDIE]: {\n    address: {\n      56: '0xDf7952B35f24aCF7fC0487D01c8d5690a60DBa07',\n      97: '0x60935F36e4631F73f0f407e68642144e07aC7f5E',\n    },\n    identifierKey: 'image',\n  },\n  [NftType.MIXIE]: {\n    address: {\n      56: '0xa251b5EAa9E67F2Bc8b33F33e20E91552Bf85566',\n      97: '',\n    },\n    identifierKey: 'image',\n  },\n}\n\nconst Nfts: Nft[] = [\n  {\n    name: 'Mixie v1',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-1-lg.png',\n      md: 'mixie-1-md.png',\n      sm: 'mixie-1-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/001-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '001-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 1,\n  },\n  {\n    name: 'Mixie v2',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-2-lg.png',\n      md: 'mixie-2-md.png',\n      sm: 'mixie-2-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/002-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '002-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 2,\n  },\n  {\n    name: 'Mixie v3',\n    description: 'Stories were told, and songs were sung, about Chef Mixie’s pancakes and her big Syrup gun.',\n    images: {\n      lg: 'mixie-3-lg.png',\n      md: 'mixie-3-md.png',\n      sm: 'mixie-3-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQiRpr7ZMkzV7qbqVaUZ1LiuHTTdpWmapUhaY6ZGmVLQ4/003-Chef-Mixie.png',\n    },\n    sortOrder: 999,\n    identifier: '003-Chef-Mixie',\n    type: NftType.MIXIE,\n    variationId: 3,\n  },\n  {\n    name: 'Easter ‘21 Champions',\n    description: 'Eggscellent! Celebrating Syrup Storm winning the Easter Battle!',\n    images: {\n      lg: 'easter-champion-storm-lg.png',\n      md: 'easter-champion-storm-md.png',\n      sm: 'easter-champion-storm-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmWFQdggxnAkgFNBWixT6v7nrgEnYfYDxG5A9u42aHhU6U/easter-champion-storm.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'easter-champion-storm',\n    type: NftType.PANTENDIE,\n    variationId: 15,\n  },\n  {\n    name: \"Cakeston Easter '21\",\n    description: 'Melting Easter eggs and melting hearts!',\n    images: {\n      lg: 'cakeston-easter-21-lg.png',\n      md: 'cakeston-easter-21-md.png',\n      sm: 'cakeston-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-caker.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-caker',\n    type: NftType.PANTENDIE,\n    variationId: 15,\n  },\n  {\n    name: \"Flipsie Easter '21\",\n    description: 'Watch out for Flipsie’s spatula smash!',\n    images: {\n      lg: 'flipsie-easter-21-lg.png',\n      md: 'flipsie-easter-21-md.png',\n      sm: 'flipsie-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-flipper.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-flipper',\n    type: NftType.PANTENDIE,\n    variationId: 14,\n  },\n  {\n    name: \"Stormy Easter '21\",\n    description: 'Do you like chocolate with your syrup? Go long!',\n    images: {\n      lg: 'stormy-easter-21-lg.png',\n      md: 'stormy-easter-21-md.png',\n      sm: 'stormy-easter-21-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmZGqWaovULNEMKxBCGnGjh27JQkAyadS6AW4J4Lzf3XBp/easter-storm.png',\n    },\n    sortOrder: 999,\n    identifier: 'easter-storm',\n    type: NftType.PANTENDIE,\n    variationId: 12,\n  },\n  {\n    name: 'Bullish',\n    description: 'Happy Niu Year! This bunny’s excited for the year of the bull (market!)',\n    images: {\n      lg: 'bullish-lg.png',\n      md: 'bullish-md.png',\n      sm: 'bullish-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.png',\n    },\n    video: {\n      webm: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.webm',\n      mp4: 'https://gateway.pinata.cloud/ipfs/QmNS1A5HsRW1JvFWtGkm4o9TgZVe2P7kA8TB4yxvS6A7ms/bullish.mp4',\n    },\n    sortOrder: 999,\n    identifier: 'bullish',\n    type: NftType.PANTENDIE,\n    variationId: 11,\n  },\n  {\n    name: 'Hiccup',\n    description: \"Oopsie daisy! Hiccup's had a bit of an accident. Poor little fella.\",\n    images: {\n      lg: 'hiccup-lg.png',\n      md: 'hiccup-md.png',\n      sm: 'hiccup-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmQ6EE6gkVzAQUdQLLM7CyrnME6LZHCoy92ZERW8HXmyjw/hiccup.png',\n    },\n    sortOrder: 999,\n    identifier: 'hiccup',\n    type: NftType.PANTENDIE,\n    variationId: 10,\n  },\n  {\n    name: 'Sleepy',\n    description: 'Aww, looks like eating pancakes all day is tough work. Sweet dreams!',\n    images: {\n      lg: 'sleepy-lg.png',\n      md: 'sleepy-md.png',\n      sm: 'sleepy-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sleepy.png',\n      blur: 'sleepy-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sleepy',\n    type: NftType.PANTENDIE,\n    variationId: 5,\n  },\n  {\n    name: 'Sunny',\n    description: 'Sunny is always cheerful when there are pancakes around. Smile!',\n    images: {\n      lg: 'sunny-lg.png',\n      md: 'sunny-md.png',\n      sm: 'sunny-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/sunny.png',\n      blur: 'sunny-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sunny',\n    type: NftType.PANTENDIE,\n    variationId: 9,\n  },\n  {\n    name: 'Churro',\n    description: \"Don't let that dopey smile deceive you... Churro's a master TENDIE chef!\",\n    images: {\n      lg: 'churro-lg.png',\n      md: 'churro-md.png',\n      sm: 'churro-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/churro.png',\n      blur: 'churro-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'churro',\n    type: NftType.PANTENDIE,\n    variationId: 8,\n  },\n  {\n    name: 'Dollop',\n    description: \"Nommm... Oh hi, I'm just meditating on the meaning of TENDIE.\",\n    images: {\n      lg: 'dollop-lg.png',\n      md: 'dollop-md.png',\n      sm: 'dollop-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/dollop.png',\n      blur: 'dollop-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'dollop',\n    type: NftType.PANTENDIE,\n    variationId: 6,\n  },\n  {\n    name: 'Twinkle',\n    description: \"Three guesses what's put that twinkle in those eyes! (Hint: it's TENDIE)\",\n    images: {\n      lg: 'twinkle-lg.png',\n      md: 'twinkle-md.png',\n      sm: 'twinkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmYD9AtzyQPjSa9jfZcZq88gSaRssdhGmKqQifUDjGFfXm/twinkle.png',\n      blur: 'twinkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'twinkle',\n    type: NftType.PANTENDIE,\n    variationId: 7,\n  },\n  {\n    name: 'Swapsies',\n    description: 'These bunnies love nothing more than swapping pancakes. Especially on BSC.',\n    images: {\n      lg: 'swapsies-lg.png',\n      md: 'swapsies-md.png',\n      sm: 'swapsies-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/swapsies.png',\n      blur: 'swapsies-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'swapsies',\n    type: NftType.PANTENDIE,\n    variationId: 0,\n  },\n  {\n    name: 'Drizzle',\n    description: \"It's raining syrup on this bunny, but he doesn't seem to mind. Can you blame him?\",\n    images: {\n      lg: 'drizzle-lg.png',\n      md: 'drizzle-md.png',\n      sm: 'drizzle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/drizzle.png',\n      blur: 'drizzle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'drizzle',\n    type: NftType.PANTENDIE,\n    variationId: 1,\n  },\n  {\n    name: 'Blueberries',\n    description: \"These bunnies like their pancakes with blueberries. What's your favorite topping?\",\n    images: {\n      lg: 'blueberries-lg.png',\n      md: 'blueberries-md.png',\n      sm: 'blueberries-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/blueberries.png',\n      blur: 'blueberries-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'blueberries',\n    type: NftType.PANTENDIE,\n    variationId: 2,\n  },\n  {\n    name: 'Circular',\n    description: \"Love makes the world go 'round... but so do pancakes. And these bunnies know it.\",\n    images: {\n      lg: 'circular-lg.png',\n      md: 'circular-md.png',\n      sm: 'circular-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/circular.png',\n      blur: 'circular-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'circular',\n    type: NftType.PANTENDIE,\n    variationId: 3,\n  },\n  {\n    name: 'Sparkle',\n    description: 'It’s sparkling syrup, pancakes, and even lottery tickets! This bunny really loves it.',\n    images: {\n      lg: 'sparkle-lg.png',\n      md: 'sparkle-md.png',\n      sm: 'sparkle-sm.png',\n      ipfs: 'https://gateway.pinata.cloud/ipfs/QmXdHqg3nywpNJWDevJQPtkz93vpfoHcZWQovFz2nmtPf5/sparkle.png',\n      blur: 'sparkle-blur.png',\n    },\n    sortOrder: 999,\n    identifier: 'sparkle',\n    type: NftType.PANTENDIE,\n    variationId: 4,\n  },\n]\n\nexport default Nfts\n","import { getWeb3NoAccount } from './web3'\n\n/**\n * Accepts an array of contract method calls and batches them\n *\n * Example:\n *\n * [\n *  contract.method.balanceOf().call,\n *  contract.method.startBlockNumber().call\n * ]\n */\nconst makeBatchRequest = (calls: any[]) => {\n  try {\n    const web3 = getWeb3NoAccount()\n    const batch = new web3.BatchRequest()\n\n    const promises = calls.map((call) => {\n      return new Promise((resolve, reject) => {\n        batch.add(\n          call.request({}, (err, result) => {\n            if (err) {\n              reject(err)\n            } else {\n              resolve(result)\n            }\n          }),\n        )\n      })\n    })\n\n    batch.execute()\n\n    return Promise.all(promises)\n  } catch {\n    return null\n  }\n}\n\nexport default makeBatchRequest\n"],"sourceRoot":""}